import { NetworkRecordingOptions } from '../../types/client';
import { RequestResponsePair } from './utils/models';
import { WebSocketEventListenerCallback, WebSocketRequestListenerCallback } from './utils/web-socket-listener';
export type NetworkListenerCallback = (requestResponsePair: RequestResponsePair) => void;
type NetworkListenerArguments = {
    xhrCallback: NetworkListenerCallback;
    fetchCallback: NetworkListenerCallback;
    webSocketRequestCallback: WebSocketRequestListenerCallback;
    webSocketEventCallback: WebSocketEventListenerCallback;
    disableWebSocketRecording: boolean;
    bodyKeysToRedact: string[];
    highlightEndpoints: string[];
    tracingOrigins: boolean | (string | RegExp)[];
    urlBlocklist: string[];
} & Pick<NetworkRecordingOptions, 'bodyKeysToRecord'>;
export declare const NetworkListener: ({ xhrCallback, fetchCallback, webSocketRequestCallback, webSocketEventCallback, disableWebSocketRecording, bodyKeysToRedact, highlightEndpoints, tracingOrigins, urlBlocklist, bodyKeysToRecord, }: NetworkListenerArguments) => () => void;
export {};
