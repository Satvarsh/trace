var Ao = Object.defineProperty, No = Object.defineProperties;
var Lo = Object.getOwnPropertyDescriptors;
var Ke = Object.getOwnPropertySymbols;
var Zr = Object.prototype.hasOwnProperty, en = Object.prototype.propertyIsEnumerable;
var Pt = (e, t, r) => t in e ? Ao(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r }) : e[t] = r, M = (e, t) => {
  for (var r in t || (t = {}))
    Zr.call(t, r) && Pt(e, r, t[r]);
  if (Ke)
    for (var r of Ke(t))
      en.call(t, r) && Pt(e, r, t[r]);
  return e;
}, F = (e, t) => No(e, Lo(t));
var Ct = (e, t) => {
  var r = {};
  for (var n in e)
    Zr.call(e, n) && t.indexOf(n) < 0 && (r[n] = e[n]);
  if (e != null && Ke)
    for (var n of Ke(e))
      t.indexOf(n) < 0 && en.call(e, n) && (r[n] = e[n]);
  return r;
};
var O = (e, t, r) => Pt(e, typeof t != "symbol" ? t + "" : t, r);
var G = (e, t, r) => new Promise((n, i) => {
  var o = (u) => {
    try {
      s(r.next(u));
    } catch (c) {
      i(c);
    }
  }, a = (u) => {
    try {
      s(r.throw(u));
    } catch (c) {
      i(c);
    }
  }, s = (u) => u.done ? n(u.value) : Promise.resolve(u.value).then(o, a);
  s((r = r.apply(e, t)).next());
});
const bo = ({ apiKey: e }) => {
  (function(t, r) {
    var n = t.amplitude || { _q: [], _iq: {} }, i = r.createElement("script");
    i.type = "text/javascript", i.integrity = "sha384-+EO59vL/X7v6VE2s6/F4HxfHlK0nDUVWKVg8K9oUlvffAeeaShVBmbORTC2D3UF+", i.crossOrigin = "anonymous", i.async = !0, i.src = "https://cdn.amplitude.com/libs/amplitude-8.17.0-min.gz.js", i.onload = function() {
      t.amplitude.runQueuedFunctions || console.log("[Amplitude] Error: could not load SDK"), amplitude.getInstance().init(e);
    };
    var o = r.getElementsByTagName("script")[0];
    o.parentNode.insertBefore(i, o);
    function a(p, v) {
      p.prototype[v] = function() {
        return this._q.push([v].concat(Array.prototype.slice.call(arguments, 0))), this;
      };
    }
    for (var s = function() {
      return this._q = [], this;
    }, u = [
      "add",
      "append",
      "clearAll",
      "prepend",
      "set",
      "setOnce",
      "unset",
      "preInsert",
      "postInsert",
      "remove"
    ], c = 0; c < u.length; c++)
      a(s, u[c]);
    n.Identify = s;
    for (var l = function() {
      return this._q = [], this;
    }, f = [
      "setProductId",
      "setQuantity",
      "setPrice",
      "setRevenueType",
      "setEventProperties"
    ], d = 0; d < f.length; d++)
      a(l, f[d]);
    n.Revenue = l;
    var h = [
      "init",
      "logEvent",
      "logRevenue",
      "setUserId",
      "setUserProperties",
      "setOptOut",
      "setVersionName",
      "setDomain",
      "setDeviceId",
      "enableTracking",
      "setGlobalUserProperties",
      "identify",
      "clearUserProperties",
      "setGroup",
      "logRevenueV2",
      "regenerateDeviceId",
      "groupIdentify",
      "onInit",
      "logEventWithTimestamp",
      "logEventWithGroups",
      "setSessionId",
      "resetSessionId"
    ];
    function E(p) {
      function v(S) {
        p[S] = function() {
          p._q.push([S].concat(Array.prototype.slice.call(arguments, 0)));
        };
      }
      for (var T = 0; T < h.length; T++)
        v(h[T]);
    }
    E(n), n.getInstance = function(p) {
      return p = (!p || p.length === 0 ? "$default_instance" : p).toLowerCase(), Object.prototype.hasOwnProperty.call(n._iq, p) || (n._iq[p] = { _q: [] }, E(n._iq[p])), n._iq[p];
    }, t.amplitude = n;
  })(window, document);
}, wo = ({ projectToken: e }) => {
  if (window.mixpanel)
    return;
  (function(r, n) {
    if (!n.__SV) {
      var i, o;
      window.mixpanel = n, n._i = [], n.init = function(a, s, u) {
        function c(d, h) {
          var E = h.split(".");
          E.length == 2 && (d = d[E[0]], h = E[1]), d[h] = function() {
            d.push([h].concat(Array.prototype.slice.call(arguments, 0)));
          };
        }
        var l = n;
        for (typeof u != "undefined" ? l = n[u] = [] : u = "mixpanel", l.people = l.people || [], l.toString = function(d) {
          var h = "mixpanel";
          return u !== "mixpanel" && (h += "." + u), d || (h += " (stub)"), h;
        }, l.people.toString = function() {
          return l.toString(1) + ".people (stub)";
        }, i = "disable time_event track track_pageview track_links track_forms track_with_groups add_group set_group remove_group register register_once alias unregister identify name_tag set_config reset opt_in_tracking opt_out_tracking has_opted_in_tracking has_opted_out_tracking clear_opt_in_out_tracking start_batch_senders people.set people.set_once people.unset people.increment people.append people.union people.track_charge people.clear_charges people.delete_user people.remove".split(" "), o = 0; o < i.length; o++)
          c(l, i[o]);
        var f = "set set_once union unset remove delete".split(" ");
        l.get_group = function() {
          function d(v) {
            h[v] = function() {
              call2_args = arguments, call2 = [v].concat(Array.prototype.slice.call(call2_args, 0)), l.push([E, call2]);
            };
          }
          for (var h = {}, E = ["get_group"].concat(Array.prototype.slice.call(arguments, 0)), p = 0; p < f.length; p++)
            d(f[p]);
          return h;
        }, n._i.push([a, s, u]);
      }, n.__SV = 1.2;
    }
  })(document, window.mixpanel || []);
  const t = document.createElement("script");
  t.src = Io, document.head.appendChild(t), t.addEventListener("load", () => {
    var r;
    (r = window.mixpanel) == null || r.init(e);
  });
}, Io = "https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js", Bp = 1e3, Hp = 2e3, Fp = 144e5;
const Gp = {
  normal: {
    bytes: 1e7,
    time: 24e4
  },
  canvas: {
    bytes: 16e6,
    time: 5e3
  }
}, jp = 100, Po = "app.highlight.io";
var ti = typeof globalThis != "undefined" ? globalThis : typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : {};
function ri(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var ni = { exports: {} }, xt = { exports: {} }, tn;
function Co() {
  return tn || (tn = 1, function(e, t) {
    (function(r, n) {
      e.exports = n();
    })(ti, function() {
      function r(p) {
        return !isNaN(parseFloat(p)) && isFinite(p);
      }
      function n(p) {
        return p.charAt(0).toUpperCase() + p.substring(1);
      }
      function i(p) {
        return function() {
          return this[p];
        };
      }
      var o = ["isConstructor", "isEval", "isNative", "isToplevel"], a = ["columnNumber", "lineNumber"], s = ["fileName", "functionName", "source"], u = ["args"], c = ["evalOrigin"], l = o.concat(a, s, u, c);
      function f(p) {
        if (p)
          for (var v = 0; v < l.length; v++)
            p[l[v]] !== void 0 && this["set" + n(l[v])](p[l[v]]);
      }
      f.prototype = {
        getArgs: function() {
          return this.args;
        },
        setArgs: function(p) {
          if (Object.prototype.toString.call(p) !== "[object Array]")
            throw new TypeError("Args must be an Array");
          this.args = p;
        },
        getEvalOrigin: function() {
          return this.evalOrigin;
        },
        setEvalOrigin: function(p) {
          if (p instanceof f)
            this.evalOrigin = p;
          else if (p instanceof Object)
            this.evalOrigin = new f(p);
          else
            throw new TypeError("Eval Origin must be an Object or StackFrame");
        },
        toString: function() {
          var p = this.getFileName() || "", v = this.getLineNumber() || "", T = this.getColumnNumber() || "", S = this.getFunctionName() || "";
          return this.getIsEval() ? p ? "[eval] (" + p + ":" + v + ":" + T + ")" : "[eval]:" + v + ":" + T : S ? S + " (" + p + ":" + v + ":" + T + ")" : p + ":" + v + ":" + T;
        }
      }, f.fromString = function(v) {
        var T = v.indexOf("("), S = v.lastIndexOf(")"), b = v.substring(0, T), I = v.substring(T + 1, S).split(","), H = v.substring(S + 1);
        if (H.indexOf("@") === 0)
          var B = /@(.+?)(?::(\d+))?(?::(\d+))?$/.exec(H, ""), It = B[1], We = B[2], Ne = B[3];
        return new f({
          functionName: b,
          args: I || void 0,
          fileName: It,
          lineNumber: We || void 0,
          columnNumber: Ne || void 0
        });
      };
      for (var d = 0; d < o.length; d++)
        f.prototype["get" + n(o[d])] = i(o[d]), f.prototype["set" + n(o[d])] = /* @__PURE__ */ function(p) {
          return function(v) {
            this[p] = !!v;
          };
        }(o[d]);
      for (var h = 0; h < a.length; h++)
        f.prototype["get" + n(a[h])] = i(a[h]), f.prototype["set" + n(a[h])] = /* @__PURE__ */ function(p) {
          return function(v) {
            if (!r(v))
              throw new TypeError(p + " must be a Number");
            this[p] = Number(v);
          };
        }(a[h]);
      for (var E = 0; E < s.length; E++)
        f.prototype["get" + n(s[E])] = i(s[E]), f.prototype["set" + n(s[E])] = /* @__PURE__ */ function(p) {
          return function(v) {
            this[p] = String(v);
          };
        }(s[E]);
      return f;
    });
  }(xt)), xt.exports;
}
(function(e, t) {
  (function(r, n) {
    e.exports = n(Co());
  })(ti, function(n) {
    var i = /(^|@)\S+:\d+/, o = /^\s*at .*(\S+:\d+|\(native\))/m, a = /^(eval@)?(\[native code])?$/;
    return {
      /**
       * Given an Error object, extract the most information from it.
       *
       * @param {Error} error object
       * @return {Array} of StackFrames
       */
      parse: function(u) {
        if (typeof u.stacktrace != "undefined" || typeof u["opera#sourceloc"] != "undefined")
          return this.parseOpera(u);
        if (u.stack && u.stack.match(o))
          return this.parseV8OrIE(u);
        if (u.stack)
          return this.parseFFOrSafari(u);
        throw new Error("Cannot parse given Error object");
      },
      // Separate line and column numbers from a string of the form: (URI:Line:Column)
      extractLocation: function(u) {
        if (u.indexOf(":") === -1)
          return [u];
        var c = /(.+?)(?::(\d+))?(?::(\d+))?$/, l = c.exec(u.replace(/[()]/g, ""));
        return [l[1], l[2] || void 0, l[3] || void 0];
      },
      parseV8OrIE: function(u) {
        var c = u.stack.split(`
`).filter(function(l) {
          return !!l.match(o);
        }, this);
        return c.map(function(l) {
          l.indexOf("(eval ") > -1 && (l = l.replace(/eval code/g, "eval").replace(/(\(eval at [^()]*)|(\),.*$)/g, ""));
          var f = l.replace(/^\s+/, "").replace(/\(eval code/g, "("), d = f.match(/ (\((.+):(\d+):(\d+)\)$)/);
          f = d ? f.replace(d[0], "") : f;
          var h = f.split(/\s+/).slice(1), E = this.extractLocation(d ? d[1] : h.pop()), p = h.join(" ") || void 0, v = ["eval", "<anonymous>"].indexOf(E[0]) > -1 ? void 0 : E[0];
          return new n({
            functionName: p,
            fileName: v,
            lineNumber: E[1],
            columnNumber: E[2],
            source: l
          });
        }, this);
      },
      parseFFOrSafari: function(u) {
        var c = u.stack.split(`
`).filter(function(l) {
          return !l.match(a);
        }, this);
        return c.map(function(l) {
          if (l.indexOf(" > eval") > -1 && (l = l.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ":$1")), l.indexOf("@") === -1 && l.indexOf(":") === -1)
            return new n({
              functionName: l
            });
          var f = /((.*".+"[^@]*)?[^@]*)(?:@)/, d = l.match(f), h = d && d[1] ? d[1] : void 0, E = this.extractLocation(l.replace(f, ""));
          return new n({
            functionName: h,
            fileName: E[0],
            lineNumber: E[1],
            columnNumber: E[2],
            source: l
          });
        }, this);
      },
      parseOpera: function(u) {
        return !u.stacktrace || u.message.indexOf(`
`) > -1 && u.message.split(`
`).length > u.stacktrace.split(`
`).length ? this.parseOpera9(u) : u.stack ? this.parseOpera11(u) : this.parseOpera10(u);
      },
      parseOpera9: function(u) {
        for (var c = /Line (\d+).*script (?:in )?(\S+)/i, l = u.message.split(`
`), f = [], d = 2, h = l.length; d < h; d += 2) {
          var E = c.exec(l[d]);
          E && f.push(new n({
            fileName: E[2],
            lineNumber: E[1],
            source: l[d]
          }));
        }
        return f;
      },
      parseOpera10: function(u) {
        for (var c = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i, l = u.stacktrace.split(`
`), f = [], d = 0, h = l.length; d < h; d += 2) {
          var E = c.exec(l[d]);
          E && f.push(
            new n({
              functionName: E[3] || void 0,
              fileName: E[2],
              lineNumber: E[1],
              source: l[d]
            })
          );
        }
        return f;
      },
      // Opera 10.65+ Error.stack very similar to FF/Safari
      parseOpera11: function(u) {
        var c = u.stack.split(`
`).filter(function(l) {
          return !!l.match(i) && !l.match(/^Error created at/);
        }, this);
        return c.map(function(l) {
          var f = l.split("@"), d = this.extractLocation(f.pop()), h = f.shift() || "", E = h.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^)]*\)/g, "") || void 0, p;
          h.match(/\(([^)]*)\)/) && (p = h.replace(/^[^(]+\(([^)]*)\)$/, "$1"));
          var v = p === void 0 || p === "[arguments not available]" ? void 0 : p.split(",");
          return new n({
            functionName: E,
            args: v,
            fileName: d[0],
            lineNumber: d[1],
            columnNumber: d[2],
            source: l
          });
        }, this);
      }
    };
  });
})(ni);
var xo = ni.exports;
const ct = /* @__PURE__ */ ri(xo);
function Do(e, t, r) {
  try {
    if (!(t in e))
      return () => {
      };
    const n = e[t], i = r(n);
    return typeof i == "function" && (i.prototype = i.prototype || {}, Object.defineProperties(i, {
      __rrweb_original__: {
        enumerable: !1,
        value: n
      }
    })), e[t] = i, () => {
      e[t] = n;
    };
  } catch (n) {
    return () => {
    };
  }
}
function Mo(e) {
  if (!e || !e.outerHTML)
    return "";
  let t = "";
  for (; e.parentElement; ) {
    let r = e.localName;
    if (!r)
      break;
    r = r.toLowerCase();
    let n = e.parentElement, i = [];
    if (n.children && n.children.length > 0)
      for (let o = 0; o < n.children.length; o++) {
        let a = n.children[o];
        a.localName && a.localName.toLowerCase && a.localName.toLowerCase() === r && i.push(a);
      }
    i.length > 1 && (r += ":eq(" + i.indexOf(e) + ")"), t = r + (t ? ">" + t : ""), e = n;
  }
  return t;
}
function sr(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function ii(e, t) {
  if (t === 0)
    return !0;
  const r = Object.keys(e);
  for (const n of r)
    if (sr(e[n]) && ii(e[n], t - 1))
      return !0;
  return !1;
}
function Dt(e, t) {
  const r = {
    numOfKeysLimit: 50,
    depthOfLimit: 4
  };
  Object.assign(r, t);
  const n = [], i = [];
  return JSON.stringify(e, function(s, u) {
    if (n.length > 0) {
      const c = n.indexOf(this);
      ~c ? n.splice(c + 1) : n.push(this), ~c ? i.splice(c, 1 / 0, s) : i.push(s), ~n.indexOf(u) && (n[0] === u ? u = "[Circular ~]" : u = "[Circular ~." + i.slice(0, n.indexOf(u)).join(".") + "]");
    } else
      n.push(u);
    if (u == null)
      return u;
    if (o(u))
      return a(u);
    if (u instanceof Event) {
      const c = {};
      for (const l in u) {
        const f = u[l];
        Array.isArray(f) ? c[l] = Mo(f.length ? f[0] : null) : c[l] = f;
      }
      return c;
    } else {
      if (u instanceof Node)
        return u instanceof HTMLElement ? u ? u.outerHTML : "" : u.nodeName;
      if (u instanceof Error)
        return u.name + ": " + u.message;
    }
    return u;
  });
  function o(s) {
    return sr(s) && Object.keys(s).length > r.numOfKeysLimit || typeof s == "function" ? !0 : s instanceof Event && s.isTrusted === !1 ? Object.keys(s).length === 1 : !!(sr(s) && ii(s, r.depthOfLimit));
  }
  function a(s) {
    let u = s.toString();
    return r.stringLengthLimit && u.length > r.stringLengthLimit && (u = `${u.slice(0, r.stringLengthLimit)}...`), u;
  }
}
function ko() {
  var e = document.createElement("canvas");
  return e.getContext && e.getContext("2d") ? e.toDataURL("image/webp").indexOf("data:image/webp") == 0 : !1;
}
function Vp() {
  return ko() ? {
    type: "image/webp",
    quality: 0.9
  } : {
    type: "image/jpeg",
    quality: 0.6
  };
}
function Uo(e, t) {
  const r = t.logger;
  let n;
  n = window[r];
  const i = [];
  if (t.level.includes("error") && window) {
    const a = (s) => {
      const { message: u, error: c } = s;
      let l = [];
      c && (l = ct.parse(c));
      const f = [
        Dt(u, t.stringifyOptions)
      ];
      e({
        type: "Error",
        trace: l,
        time: Date.now(),
        value: f
      });
    };
    window.addEventListener("error", a), i.push(() => {
      window && window.removeEventListener("error", a);
    });
  }
  for (const a of t.level)
    i.push(o(n, a));
  return () => {
    i.forEach((a) => a());
  };
  function o(a, s) {
    return a[s] ? Do(a, s, (u) => (...c) => {
      u.apply(this, c);
      try {
        const l = ct.parse(new Error()), f = t.serializeConsoleAttributes ? c.map((d) => typeof d == "object" ? Dt(d, t.stringifyOptions) : d) : c.filter((d) => typeof d != "object").map((d) => `${d}`);
        e({
          type: s,
          trace: l.slice(1),
          value: f,
          attributes: Dt(c.filter((d) => typeof d == "object").reduce((d, h) => M(M({}, d), h), {}), t.stringifyOptions),
          time: Date.now()
        });
      } catch (l) {
        u("highlight logger error:", l, ...c);
      }
    }) : () => {
    };
  }
}
var ur = { exports: {} };
(function(e, t) {
  t = e.exports = r, t.getSerialize = n;
  function r(i, o, a, s) {
    return JSON.stringify(i, n(o, s), a);
  }
  function n(i, o) {
    var a = [], s = [];
    return o == null && (o = function(u, c) {
      return a[0] === c ? "[Circular ~]" : "[Circular ~." + s.slice(0, a.indexOf(c)).join(".") + "]";
    }), function(u, c) {
      if (a.length > 0) {
        var l = a.indexOf(this);
        ~l ? a.splice(l + 1) : a.push(this), ~l ? s.splice(l, 1 / 0, u) : s.push(u), ~a.indexOf(c) && (c = o.call(this, u, c));
      } else a.push(c);
      return i == null ? c : i.call(this, u, c);
    };
  }
})(ur, ur.exports);
var Bo = ur.exports;
const lt = /* @__PURE__ */ ri(Bo);
function Mt(e, t, r, n) {
  var s, u, c, l;
  let i = [];
  try {
    i = ct.parse(n != null ? n : t);
  } catch (f) {
    i = ct.parse(new Error());
  }
  let o = {};
  t instanceof Error && (t = t.message, t.cause && (o = { "exception.cause": t.cause }));
  const a = Fo(i);
  e({
    event: lt(t),
    type: "window.onerror",
    url: window.location.href,
    source: r != null ? r : "",
    lineNumber: (s = a[0]) != null && s.lineNumber ? (u = a[0]) == null ? void 0 : u.lineNumber : 0,
    columnNumber: (c = a[0]) != null && c.columnNumber ? (l = a[0]) == null ? void 0 : l.columnNumber : 0,
    stackTrace: a,
    timestamp: (/* @__PURE__ */ new Date()).toISOString(),
    payload: o ? lt(o) : void 0
  });
}
const Ho = (e, { enablePromisePatch: t }) => {
  if (typeof window == "undefined")
    return () => {
    };
  const r = window.onerror = (a, s, u, c, l) => {
    Mt(e, a, s, l);
  }, n = window.onunhandledrejection = (a) => {
    if (a.reason) {
      const s = a.promise;
      s.getStack ? Mt(e, a.reason, a.type, s.getStack()) : Mt(e, a.reason, a.type);
    }
  }, i = window.Promise, o = class extends i {
    constructor(u) {
      super(u);
      O(this, "promiseCreationError");
      this.promiseCreationError = new Error();
    }
    getStack() {
      return this.promiseCreationError;
    }
    static shouldPatch() {
      const u = typeof window.Zone == "undefined";
      return t && u;
    }
  };
  return o.shouldPatch() && (window.Promise = o), () => {
    window.Promise = i, window.onunhandledrejection = n, window.onerror = r;
  };
}, Fo = (e) => {
  var r, n;
  if (e.length === 0)
    return e;
  const t = e[0];
  return (r = t.fileName) != null && r.includes("highlight.run") || (n = t.fileName) != null && n.includes("highlight.io") || t.functionName === "new highlightPromise" ? e.slice(1) : e;
}, rn = [
  '["\\"Script error.\\""]',
  '"Script error."',
  '["\\"Load failed.\\""]',
  '"Load failed."',
  '["\\"Network request failed.\\""]',
  '"Network request failed."',
  '["\\"Document is not focused.\\""]',
  '"Document is not focused."',
  '["\\"Failed to fetch\\""]',
  '"Failed to fetch"',
  '[{"isTrusted":true}]',
  '{"isTrusted":true}',
  '["{}"]',
  '"{}"',
  '[""]',
  '""',
  '["\\"\\""]',
  '""'
], nn = [
  "websocket error",
  '\\"ResizeObserver loop'
];
var Go = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof global == "object" ? global : {}, ae = "1.9.0", on = /^(\d+)\.(\d+)\.(\d+)(-(.+))?$/;
function jo(e) {
  var t = /* @__PURE__ */ new Set([e]), r = /* @__PURE__ */ new Set(), n = e.match(on);
  if (!n)
    return function() {
      return !1;
    };
  var i = {
    major: +n[1],
    minor: +n[2],
    patch: +n[3],
    prerelease: n[4]
  };
  if (i.prerelease != null)
    return function(u) {
      return u === e;
    };
  function o(s) {
    return r.add(s), !1;
  }
  function a(s) {
    return t.add(s), !0;
  }
  return function(u) {
    if (t.has(u))
      return !0;
    if (r.has(u))
      return !1;
    var c = u.match(on);
    if (!c)
      return o(u);
    var l = {
      major: +c[1],
      minor: +c[2],
      patch: +c[3],
      prerelease: c[4]
    };
    return l.prerelease != null || i.major !== l.major ? o(u) : i.major === 0 ? i.minor === l.minor && i.patch <= l.patch ? a(u) : o(u) : i.minor <= l.minor ? a(u) : o(u);
  };
}
var Vo = jo(ae), $o = ae.split(".")[0], Fe = Symbol.for("opentelemetry.js.api." + $o), Ge = Go;
function Xe(e, t, r, n) {
  var i;
  n === void 0 && (n = !1);
  var o = Ge[Fe] = (i = Ge[Fe]) !== null && i !== void 0 ? i : {
    version: ae
  };
  if (!n && o[e]) {
    var a = new Error("@opentelemetry/api: Attempted duplicate registration of API: " + e);
    return r.error(a.stack || a.message), !1;
  }
  if (o.version !== ae) {
    var a = new Error("@opentelemetry/api: Registration of version v" + o.version + " for " + e + " does not match previously registered API v" + ae);
    return r.error(a.stack || a.message), !1;
  }
  return o[e] = t, r.debug("@opentelemetry/api: Registered a global for " + e + " v" + ae + "."), !0;
}
function se(e) {
  var t, r, n = (t = Ge[Fe]) === null || t === void 0 ? void 0 : t.version;
  if (!(!n || !Vo(n)))
    return (r = Ge[Fe]) === null || r === void 0 ? void 0 : r[e];
}
function qe(e, t) {
  t.debug("@opentelemetry/api: Unregistering a global for " + e + " v" + ae + ".");
  var r = Ge[Fe];
  r && delete r[e];
}
var Xo = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, qo = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, zo = (
  /** @class */
  function() {
    function e(t) {
      this._namespace = t.namespace || "DiagComponentLogger";
    }
    return e.prototype.debug = function() {
      for (var t = [], r = 0; r < arguments.length; r++)
        t[r] = arguments[r];
      return Le("debug", this._namespace, t);
    }, e.prototype.error = function() {
      for (var t = [], r = 0; r < arguments.length; r++)
        t[r] = arguments[r];
      return Le("error", this._namespace, t);
    }, e.prototype.info = function() {
      for (var t = [], r = 0; r < arguments.length; r++)
        t[r] = arguments[r];
      return Le("info", this._namespace, t);
    }, e.prototype.warn = function() {
      for (var t = [], r = 0; r < arguments.length; r++)
        t[r] = arguments[r];
      return Le("warn", this._namespace, t);
    }, e.prototype.verbose = function() {
      for (var t = [], r = 0; r < arguments.length; r++)
        t[r] = arguments[r];
      return Le("verbose", this._namespace, t);
    }, e;
  }()
);
function Le(e, t, r) {
  var n = se("diag");
  if (n)
    return r.unshift(t), n[e].apply(n, qo([], Xo(r), !1));
}
var N;
(function(e) {
  e[e.NONE = 0] = "NONE", e[e.ERROR = 30] = "ERROR", e[e.WARN = 50] = "WARN", e[e.INFO = 60] = "INFO", e[e.DEBUG = 70] = "DEBUG", e[e.VERBOSE = 80] = "VERBOSE", e[e.ALL = 9999] = "ALL";
})(N || (N = {}));
function Yo(e, t) {
  e < N.NONE ? e = N.NONE : e > N.ALL && (e = N.ALL), t = t || {};
  function r(n, i) {
    var o = t[n];
    return typeof o == "function" && e >= i ? o.bind(t) : function() {
    };
  }
  return {
    error: r("error", N.ERROR),
    warn: r("warn", N.WARN),
    info: r("info", N.INFO),
    debug: r("debug", N.DEBUG),
    verbose: r("verbose", N.VERBOSE)
  };
}
var Wo = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Ko = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, Jo = "diag", X = (
  /** @class */
  function() {
    function e() {
      function t(i) {
        return function() {
          for (var o = [], a = 0; a < arguments.length; a++)
            o[a] = arguments[a];
          var s = se("diag");
          if (s)
            return s[i].apply(s, Ko([], Wo(o), !1));
        };
      }
      var r = this, n = function(i, o) {
        var a, s, u;
        if (o === void 0 && (o = { logLevel: N.INFO }), i === r) {
          var c = new Error("Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation");
          return r.error((a = c.stack) !== null && a !== void 0 ? a : c.message), !1;
        }
        typeof o == "number" && (o = {
          logLevel: o
        });
        var l = se("diag"), f = Yo((s = o.logLevel) !== null && s !== void 0 ? s : N.INFO, i);
        if (l && !o.suppressOverrideMessage) {
          var d = (u = new Error().stack) !== null && u !== void 0 ? u : "<failed to generate stacktrace>";
          l.warn("Current logger will be overwritten from " + d), f.warn("Current logger will overwrite one already registered from " + d);
        }
        return Xe("diag", f, r, !0);
      };
      r.setLogger = n, r.disable = function() {
        qe(Jo, r);
      }, r.createComponentLogger = function(i) {
        return new zo(i);
      }, r.verbose = t("verbose"), r.debug = t("debug"), r.info = t("info"), r.warn = t("warn"), r.error = t("error");
    }
    return e.instance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e;
  }()
), Qo = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Zo = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, ea = (
  /** @class */
  function() {
    function e(t) {
      this._entries = t ? new Map(t) : /* @__PURE__ */ new Map();
    }
    return e.prototype.getEntry = function(t) {
      var r = this._entries.get(t);
      if (r)
        return Object.assign({}, r);
    }, e.prototype.getAllEntries = function() {
      return Array.from(this._entries.entries()).map(function(t) {
        var r = Qo(t, 2), n = r[0], i = r[1];
        return [n, i];
      });
    }, e.prototype.setEntry = function(t, r) {
      var n = new e(this._entries);
      return n._entries.set(t, r), n;
    }, e.prototype.removeEntry = function(t) {
      var r = new e(this._entries);
      return r._entries.delete(t), r;
    }, e.prototype.removeEntries = function() {
      for (var t, r, n = [], i = 0; i < arguments.length; i++)
        n[i] = arguments[i];
      var o = new e(this._entries);
      try {
        for (var a = Zo(n), s = a.next(); !s.done; s = a.next()) {
          var u = s.value;
          o._entries.delete(u);
        }
      } catch (c) {
        t = { error: c };
      } finally {
        try {
          s && !s.done && (r = a.return) && r.call(a);
        } finally {
          if (t) throw t.error;
        }
      }
      return o;
    }, e.prototype.clear = function() {
      return new e();
    }, e;
  }()
), ta = Symbol("BaggageEntryMetadata"), ra = X.instance();
function na(e) {
  return e === void 0 && (e = {}), new ea(new Map(Object.entries(e)));
}
function kr(e) {
  return typeof e != "string" && (ra.error("Cannot create baggage metadata from unknown type: " + typeof e), e = ""), {
    __TYPE__: ta,
    toString: function() {
      return e;
    }
  };
}
function mt(e) {
  return Symbol.for(e);
}
var ia = (
  /** @class */
  /* @__PURE__ */ function() {
    function e(t) {
      var r = this;
      r._currentContext = t ? new Map(t) : /* @__PURE__ */ new Map(), r.getValue = function(n) {
        return r._currentContext.get(n);
      }, r.setValue = function(n, i) {
        var o = new e(r._currentContext);
        return o._currentContext.set(n, i), o;
      }, r.deleteValue = function(n) {
        var i = new e(r._currentContext);
        return i._currentContext.delete(n), i;
      };
    }
    return e;
  }()
), ne = new ia(), le = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), oa = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.createGauge = function(t, r) {
      return _a;
    }, e.prototype.createHistogram = function(t, r) {
      return Ea;
    }, e.prototype.createCounter = function(t, r) {
      return ha;
    }, e.prototype.createUpDownCounter = function(t, r) {
      return Ta;
    }, e.prototype.createObservableGauge = function(t, r) {
      return ga;
    }, e.prototype.createObservableCounter = function(t, r) {
      return va;
    }, e.prototype.createObservableUpDownCounter = function(t, r) {
      return ya;
    }, e.prototype.addBatchObservableCallback = function(t, r) {
    }, e.prototype.removeBatchObservableCallback = function(t) {
    }, e;
  }()
), Ot = (
  /** @class */
  /* @__PURE__ */ function() {
    function e() {
    }
    return e;
  }()
), aa = (
  /** @class */
  function(e) {
    le(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.add = function(r, n) {
    }, t;
  }(Ot)
), sa = (
  /** @class */
  function(e) {
    le(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.add = function(r, n) {
    }, t;
  }(Ot)
), ua = (
  /** @class */
  function(e) {
    le(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.record = function(r, n) {
    }, t;
  }(Ot)
), ca = (
  /** @class */
  function(e) {
    le(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t.prototype.record = function(r, n) {
    }, t;
  }(Ot)
), Ur = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.addCallback = function(t) {
    }, e.prototype.removeCallback = function(t) {
    }, e;
  }()
), la = (
  /** @class */
  function(e) {
    le(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t;
  }(Ur)
), fa = (
  /** @class */
  function(e) {
    le(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t;
  }(Ur)
), da = (
  /** @class */
  function(e) {
    le(t, e);
    function t() {
      return e !== null && e.apply(this, arguments) || this;
    }
    return t;
  }(Ur)
), pa = new oa(), ha = new aa(), _a = new ua(), Ea = new ca(), Ta = new sa(), va = new la(), ga = new fa(), ya = new da(), ma = {
  get: function(e, t) {
    if (e != null)
      return e[t];
  },
  keys: function(e) {
    return e == null ? [] : Object.keys(e);
  }
}, Oa = {
  set: function(e, t, r) {
    e != null && (e[t] = r);
  }
}, Sa = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Ra = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, Aa = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.active = function() {
      return ne;
    }, e.prototype.with = function(t, r, n) {
      for (var i = [], o = 3; o < arguments.length; o++)
        i[o - 3] = arguments[o];
      return r.call.apply(r, Ra([n], Sa(i), !1));
    }, e.prototype.bind = function(t, r) {
      return r;
    }, e.prototype.enable = function() {
      return this;
    }, e.prototype.disable = function() {
      return this;
    }, e;
  }()
), Na = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, La = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, kt = "context", ba = new Aa(), St = (
  /** @class */
  function() {
    function e() {
    }
    return e.getInstance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.setGlobalContextManager = function(t) {
      return Xe(kt, t, X.instance());
    }, e.prototype.active = function() {
      return this._getContextManager().active();
    }, e.prototype.with = function(t, r, n) {
      for (var i, o = [], a = 3; a < arguments.length; a++)
        o[a - 3] = arguments[a];
      return (i = this._getContextManager()).with.apply(i, La([t, r, n], Na(o), !1));
    }, e.prototype.bind = function(t, r) {
      return this._getContextManager().bind(t, r);
    }, e.prototype._getContextManager = function() {
      return se(kt) || ba;
    }, e.prototype.disable = function() {
      this._getContextManager().disable(), qe(kt, X.instance());
    }, e;
  }()
), q;
(function(e) {
  e[e.NONE = 0] = "NONE", e[e.SAMPLED = 1] = "SAMPLED";
})(q || (q = {}));
var oi = "0000000000000000", ai = "00000000000000000000000000000000", si = {
  traceId: ai,
  spanId: oi,
  traceFlags: q.NONE
}, Me = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = si), this._spanContext = t;
    }
    return e.prototype.spanContext = function() {
      return this._spanContext;
    }, e.prototype.setAttribute = function(t, r) {
      return this;
    }, e.prototype.setAttributes = function(t) {
      return this;
    }, e.prototype.addEvent = function(t, r) {
      return this;
    }, e.prototype.addLink = function(t) {
      return this;
    }, e.prototype.addLinks = function(t) {
      return this;
    }, e.prototype.setStatus = function(t) {
      return this;
    }, e.prototype.updateName = function(t) {
      return this;
    }, e.prototype.end = function(t) {
    }, e.prototype.isRecording = function() {
      return !1;
    }, e.prototype.recordException = function(t, r) {
    }, e;
  }()
), Br = mt("OpenTelemetry Context Key SPAN");
function Hr(e) {
  return e.getValue(Br) || void 0;
}
function wa() {
  return Hr(St.getInstance().active());
}
function Fr(e, t) {
  return e.setValue(Br, t);
}
function Ia(e) {
  return e.deleteValue(Br);
}
function Pa(e, t) {
  return Fr(e, new Me(t));
}
function ui(e) {
  var t;
  return (t = Hr(e)) === null || t === void 0 ? void 0 : t.spanContext();
}
var Ca = /^([0-9a-f]{32})$/i, xa = /^[0-9a-f]{16}$/i;
function ci(e) {
  return Ca.test(e) && e !== ai;
}
function Da(e) {
  return xa.test(e) && e !== oi;
}
function ze(e) {
  return ci(e.traceId) && Da(e.spanId);
}
function Ma(e) {
  return new Me(e);
}
var Ut = St.getInstance(), li = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.startSpan = function(t, r, n) {
      n === void 0 && (n = Ut.active());
      var i = !!(r != null && r.root);
      if (i)
        return new Me();
      var o = n && ui(n);
      return ka(o) && ze(o) ? new Me(o) : new Me();
    }, e.prototype.startActiveSpan = function(t, r, n, i) {
      var o, a, s;
      if (!(arguments.length < 2)) {
        arguments.length === 2 ? s = r : arguments.length === 3 ? (o = r, s = n) : (o = r, a = n, s = i);
        var u = a != null ? a : Ut.active(), c = this.startSpan(t, o, u), l = Fr(u, c);
        return Ut.with(l, s, void 0, c);
      }
    }, e;
  }()
);
function ka(e) {
  return typeof e == "object" && typeof e.spanId == "string" && typeof e.traceId == "string" && typeof e.traceFlags == "number";
}
var Ua = new li(), Ba = (
  /** @class */
  function() {
    function e(t, r, n, i) {
      this._provider = t, this.name = r, this.version = n, this.options = i;
    }
    return e.prototype.startSpan = function(t, r, n) {
      return this._getTracer().startSpan(t, r, n);
    }, e.prototype.startActiveSpan = function(t, r, n, i) {
      var o = this._getTracer();
      return Reflect.apply(o.startActiveSpan, o, arguments);
    }, e.prototype._getTracer = function() {
      if (this._delegate)
        return this._delegate;
      var t = this._provider.getDelegateTracer(this.name, this.version, this.options);
      return t ? (this._delegate = t, this._delegate) : Ua;
    }, e;
  }()
), Ha = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.getTracer = function(t, r, n) {
      return new li();
    }, e;
  }()
), Fa = new Ha(), an = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.getTracer = function(t, r, n) {
      var i;
      return (i = this.getDelegateTracer(t, r, n)) !== null && i !== void 0 ? i : new Ba(this, t, r, n);
    }, e.prototype.getDelegate = function() {
      var t;
      return (t = this._delegate) !== null && t !== void 0 ? t : Fa;
    }, e.prototype.setDelegate = function(t) {
      this._delegate = t;
    }, e.prototype.getDelegateTracer = function(t, r, n) {
      var i;
      return (i = this._delegate) === null || i === void 0 ? void 0 : i.getTracer(t, r, n);
    }, e;
  }()
), ft;
(function(e) {
  e[e.NOT_RECORD = 0] = "NOT_RECORD", e[e.RECORD = 1] = "RECORD", e[e.RECORD_AND_SAMPLED = 2] = "RECORD_AND_SAMPLED";
})(ft || (ft = {}));
var je;
(function(e) {
  e[e.INTERNAL = 0] = "INTERNAL", e[e.SERVER = 1] = "SERVER", e[e.CLIENT = 2] = "CLIENT", e[e.PRODUCER = 3] = "PRODUCER", e[e.CONSUMER = 4] = "CONSUMER";
})(je || (je = {}));
var cr;
(function(e) {
  e[e.UNSET = 0] = "UNSET", e[e.OK = 1] = "OK", e[e.ERROR = 2] = "ERROR";
})(cr || (cr = {}));
var A = St.getInstance(), m = X.instance(), Ga = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.getMeter = function(t, r, n) {
      return pa;
    }, e;
  }()
), ja = new Ga(), Bt = "metrics", Va = (
  /** @class */
  function() {
    function e() {
    }
    return e.getInstance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.setGlobalMeterProvider = function(t) {
      return Xe(Bt, t, X.instance());
    }, e.prototype.getMeterProvider = function() {
      return se(Bt) || ja;
    }, e.prototype.getMeter = function(t, r, n) {
      return this.getMeterProvider().getMeter(t, r, n);
    }, e.prototype.disable = function() {
      qe(Bt, X.instance());
    }, e;
  }()
), fi = Va.getInstance(), $a = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.inject = function(t, r) {
    }, e.prototype.extract = function(t, r) {
      return t;
    }, e.prototype.fields = function() {
      return [];
    }, e;
  }()
), Gr = mt("OpenTelemetry Baggage Key");
function di(e) {
  return e.getValue(Gr) || void 0;
}
function Xa() {
  return di(St.getInstance().active());
}
function qa(e, t) {
  return e.setValue(Gr, t);
}
function za(e) {
  return e.deleteValue(Gr);
}
var Ht = "propagation", Ya = new $a(), Wa = (
  /** @class */
  function() {
    function e() {
      this.createBaggage = na, this.getBaggage = di, this.getActiveBaggage = Xa, this.setBaggage = qa, this.deleteBaggage = za;
    }
    return e.getInstance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.setGlobalPropagator = function(t) {
      return Xe(Ht, t, X.instance());
    }, e.prototype.inject = function(t, r, n) {
      return n === void 0 && (n = Oa), this._getGlobalPropagator().inject(t, r, n);
    }, e.prototype.extract = function(t, r, n) {
      return n === void 0 && (n = ma), this._getGlobalPropagator().extract(t, r, n);
    }, e.prototype.fields = function() {
      return this._getGlobalPropagator().fields();
    }, e.prototype.disable = function() {
      qe(Ht, X.instance());
    }, e.prototype._getGlobalPropagator = function() {
      return se(Ht) || Ya;
    }, e;
  }()
), k = Wa.getInstance(), Ft = "trace", Ka = (
  /** @class */
  function() {
    function e() {
      this._proxyTracerProvider = new an(), this.wrapSpanContext = Ma, this.isSpanContextValid = ze, this.deleteSpan = Ia, this.getSpan = Hr, this.getActiveSpan = wa, this.getSpanContext = ui, this.setSpan = Fr, this.setSpanContext = Pa;
    }
    return e.getInstance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.setGlobalTracerProvider = function(t) {
      var r = Xe(Ft, this._proxyTracerProvider, X.instance());
      return r && this._proxyTracerProvider.setDelegate(t), r;
    }, e.prototype.getTracerProvider = function() {
      return se(Ft) || this._proxyTracerProvider;
    }, e.prototype.getTracer = function(t, r) {
      return this.getTracerProvider().getTracer(t, r);
    }, e.prototype.disable = function() {
      qe(Ft, X.instance()), this._proxyTracerProvider = new an();
    }, e;
  }()
), L = Ka.getInstance(), Ja = mt("OpenTelemetry SDK Context Key SUPPRESS_TRACING");
function pi(e) {
  return e.getValue(Ja) === !0;
}
var Qa = "=", lr = ";", fr = ",", Gt = "baggage", Za = 180, es = 4096, ts = 8192, rs = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function ns(e) {
  return e.reduce(function(t, r) {
    var n = "" + t + (t !== "" ? fr : "") + r;
    return n.length > ts ? t : n;
  }, "");
}
function is(e) {
  return e.getAllEntries().map(function(t) {
    var r = rs(t, 2), n = r[0], i = r[1], o = encodeURIComponent(n) + "=" + encodeURIComponent(i.value);
    return i.metadata !== void 0 && (o += lr + i.metadata.toString()), o;
  });
}
function os(e) {
  var t = e.split(lr);
  if (!(t.length <= 0)) {
    var r = t.shift();
    if (r) {
      var n = r.indexOf(Qa);
      if (!(n <= 0)) {
        var i = decodeURIComponent(r.substring(0, n).trim()), o = decodeURIComponent(r.substring(n + 1).trim()), a;
        return t.length > 0 && (a = kr(t.join(lr))), { key: i, value: o, metadata: a };
      }
    }
  }
}
var as = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.inject = function(t, r, n) {
      var i = k.getBaggage(t);
      if (!(!i || pi(t))) {
        var o = is(i).filter(function(s) {
          return s.length <= es;
        }).slice(0, Za), a = ns(o);
        a.length > 0 && n.set(r, Gt, a);
      }
    }, e.prototype.extract = function(t, r, n) {
      var i = n.get(r, Gt), o = Array.isArray(i) ? i.join(fr) : i;
      if (!o)
        return t;
      var a = {};
      if (o.length === 0)
        return t;
      var s = o.split(fr);
      return s.forEach(function(u) {
        var c = os(u);
        if (c) {
          var l = { value: c.value };
          c.metadata && (l.metadata = c.metadata), a[c.key] = l;
        }
      }), Object.entries(a).length === 0 ? t : k.setBaggage(t, k.createBaggage(a));
    }, e.prototype.fields = function() {
      return [Gt];
    }, e;
  }()
), ue = performance, ss = "1.27.0", us = "exception.type", cs = "exception.message", ls = "exception.stacktrace", fs = "http.method", ds = "http.url", ps = "http.host", hs = "http.scheme", _s = "http.status_code", Es = "http.user_agent", Ts = "http.response_content_length", vs = "http.response_content_length_uncompressed", jt = us, Vt = cs, gs = ls, hi = fs, ke = ds, _i = ps, Ei = hs, Ti = _s, jr = Es, ys = Ts, ms = vs, Os = "deployment.environment", Ss = "process.runtime.name", Rs = "service.name", As = "telemetry.sdk.name", Ns = "telemetry.sdk.language", Ls = "telemetry.sdk.version", bs = Os, vi = Ss, gi = Rs, ve = As, ge = Ns, ye = Ls, ws = "webjs", yi = ws, Is = "service.name", Ps = "url.full", Cs = "url.path", xs = "url.query", fe, $t = (fe = {}, fe[ve] = "opentelemetry", fe[vi] = "browser", fe[ge] = yi, fe[ye] = ss, fe), Ds = 9, Ms = 6, ks = Math.pow(10, Ms), sn = Math.pow(10, Ds);
function un(e) {
  var t = e / 1e3, r = Math.trunc(t), n = Math.round(e % 1e3 * ks);
  return [r, n];
}
function Us() {
  var e = ue.timeOrigin;
  if (typeof e != "number") {
    var t = ue;
    e = t.timing && t.timing.fetchStart;
  }
  return e;
}
function Bs(e) {
  var t = un(Us()), r = un(ue.now());
  return Hs(t, r);
}
function Hs(e, t) {
  var r = [e[0] + t[0], e[1] + t[1]];
  return r[1] >= sn && (r[1] -= sn, r[0] += 1), r;
}
var Fs = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Gs = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = {});
      var r;
      this._propagators = (r = t.propagators) !== null && r !== void 0 ? r : [], this._fields = Array.from(new Set(this._propagators.map(function(n) {
        return typeof n.fields == "function" ? n.fields() : [];
      }).reduce(function(n, i) {
        return n.concat(i);
      }, [])));
    }
    return e.prototype.inject = function(t, r, n) {
      var i, o;
      try {
        for (var a = Fs(this._propagators), s = a.next(); !s.done; s = a.next()) {
          var u = s.value;
          try {
            u.inject(t, r, n);
          } catch (c) {
            m.warn("Failed to inject with " + u.constructor.name + ". Err: " + c.message);
          }
        }
      } catch (c) {
        i = { error: c };
      } finally {
        try {
          s && !s.done && (o = a.return) && o.call(a);
        } finally {
          if (i) throw i.error;
        }
      }
    }, e.prototype.extract = function(t, r, n) {
      return this._propagators.reduce(function(i, o) {
        try {
          return o.extract(i, r, n);
        } catch (a) {
          m.warn("Failed to extract with " + o.constructor.name + ". Err: " + a.message);
        }
        return i;
      }, t);
    }, e.prototype.fields = function() {
      return this._fields.slice();
    }, e;
  }()
), dr = "[_0-9a-z-*/]", js = "[a-z]" + dr + "{0,255}", Vs = "[a-z0-9]" + dr + "{0,240}@[a-z]" + dr + "{0,13}", $s = new RegExp("^(?:" + js + "|" + Vs + ")$"), Xs = /^[ -~]{0,255}[!-~]$/, qs = /,|=/;
function zs(e) {
  return $s.test(e);
}
function Ys(e) {
  return Xs.test(e) && !qs.test(e);
}
var cn = 32, Ws = 512, ln = ",", fn = "=", Ks = (
  /** @class */
  function() {
    function e(t) {
      this._internalState = /* @__PURE__ */ new Map(), t && this._parse(t);
    }
    return e.prototype.set = function(t, r) {
      var n = this._clone();
      return n._internalState.has(t) && n._internalState.delete(t), n._internalState.set(t, r), n;
    }, e.prototype.unset = function(t) {
      var r = this._clone();
      return r._internalState.delete(t), r;
    }, e.prototype.get = function(t) {
      return this._internalState.get(t);
    }, e.prototype.serialize = function() {
      var t = this;
      return this._keys().reduce(function(r, n) {
        return r.push(n + fn + t.get(n)), r;
      }, []).join(ln);
    }, e.prototype._parse = function(t) {
      t.length > Ws || (this._internalState = t.split(ln).reverse().reduce(function(r, n) {
        var i = n.trim(), o = i.indexOf(fn);
        if (o !== -1) {
          var a = i.slice(0, o), s = i.slice(o + 1, n.length);
          zs(a) && Ys(s) && r.set(a, s);
        }
        return r;
      }, /* @__PURE__ */ new Map()), this._internalState.size > cn && (this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, cn))));
    }, e.prototype._keys = function() {
      return Array.from(this._internalState.keys()).reverse();
    }, e.prototype._clone = function() {
      var t = new e();
      return t._internalState = new Map(this._internalState), t;
    }, e;
  }()
), nt = "traceparent", Xt = "tracestate", Js = "00", Qs = "(?!ff)[\\da-f]{2}", Zs = "(?![0]{32})[\\da-f]{32}", eu = "(?![0]{16})[\\da-f]{16}", tu = "[\\da-f]{2}", ru = new RegExp("^\\s?(" + Qs + ")-(" + Zs + ")-(" + eu + ")-(" + tu + ")(-.*)?\\s?$");
function nu(e) {
  var t = ru.exec(e);
  return !t || t[1] === "00" && t[5] ? null : {
    traceId: t[2],
    spanId: t[3],
    traceFlags: parseInt(t[4], 16)
  };
}
var iu = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.inject = function(t, r, n) {
      var i = L.getSpanContext(t);
      if (!(!i || pi(t) || !ze(i))) {
        var o = Js + "-" + i.traceId + "-" + i.spanId + "-0" + Number(i.traceFlags || q.NONE).toString(16);
        n.set(r, nt, o), i.traceState && n.set(r, Xt, i.traceState.serialize());
      }
    }, e.prototype.extract = function(t, r, n) {
      var i = n.get(r, nt);
      if (!i)
        return t;
      var o = Array.isArray(i) ? i[0] : i;
      if (typeof o != "string")
        return t;
      var a = nu(o);
      if (!a)
        return t;
      a.isRemote = !0;
      var s = n.get(r, Xt);
      if (s) {
        var u = Array.isArray(s) ? s.join(",") : s;
        a.traceState = new Ks(typeof u == "string" ? u : void 0);
      }
      return L.setSpanContext(t, a);
    }, e.prototype.fields = function() {
      return [nt, Xt];
    }, e;
  }()
), ou = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.emit = function(t) {
    }, e;
  }()
), au = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.getLogger = function(t, r, n) {
      return new ou();
    }, e;
  }()
), dn = new au(), su = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof global == "object" ? global : {}, Je = Symbol.for("io.opentelemetry.js.api.logs"), be = su;
function uu(e, t, r) {
  return function(n) {
    return n === e ? t : r;
  };
}
var pn = 1, cu = (
  /** @class */
  function() {
    function e() {
    }
    return e.getInstance = function() {
      return this._instance || (this._instance = new e()), this._instance;
    }, e.prototype.setGlobalLoggerProvider = function(t) {
      return be[Je] ? this.getLoggerProvider() : (be[Je] = uu(pn, t, dn), t);
    }, e.prototype.getLoggerProvider = function() {
      var t, r;
      return (r = (t = be[Je]) === null || t === void 0 ? void 0 : t.call(be, pn)) !== null && r !== void 0 ? r : dn;
    }, e.prototype.getLogger = function(t, r, n) {
      return this.getLoggerProvider().getLogger(t, r, n);
    }, e.prototype.disable = function() {
      delete be[Je];
    }, e;
  }()
), mi = cu.getInstance();
function lu(e, t, r, n) {
  for (var i = 0, o = e.length; i < o; i++) {
    var a = e[i];
    t && a.setTracerProvider(t), r && a.setMeterProvider(r), n && a.setLoggerProvider && a.setLoggerProvider(n), a.getConfig().enabled || a.enable();
  }
}
function fu(e) {
  e.forEach(function(t) {
    return t.disable();
  });
}
function du(e) {
  var t, r, n = e.tracerProvider || L.getTracerProvider(), i = e.meterProvider || fi.getMeterProvider(), o = e.loggerProvider || mi.getLoggerProvider(), a = (r = (t = e.instrumentations) === null || t === void 0 ? void 0 : t.flat()) !== null && r !== void 0 ? r : [];
  return lu(a, n, i, o), function() {
    fu(a);
  };
}
function pr(e) {
  return typeof e == "function";
}
var U = console.error.bind(console);
function we(e, t, r) {
  var n = !!e[t] && e.propertyIsEnumerable(t);
  Object.defineProperty(e, t, {
    configurable: !0,
    enumerable: n,
    writable: !0,
    value: r
  });
}
function Ye(e) {
  e && e.logger && (pr(e.logger) ? U = e.logger : U("new logger isn't a function, not replacing"));
}
function Oi(e, t, r) {
  if (!e || !e[t]) {
    U("no original function " + t + " to wrap");
    return;
  }
  if (!r) {
    U("no wrapper function"), U(new Error().stack);
    return;
  }
  if (!pr(e[t]) || !pr(r)) {
    U("original object and wrapper must be functions");
    return;
  }
  var n = e[t], i = r(n, t);
  return we(i, "__original", n), we(i, "__unwrap", function() {
    e[t] === i && we(e, t, n);
  }), we(i, "__wrapped", !0), we(e, t, i), i;
}
function pu(e, t, r) {
  if (e)
    Array.isArray(e) || (e = [e]);
  else {
    U("must provide one or more modules to patch"), U(new Error().stack);
    return;
  }
  if (!(t && Array.isArray(t))) {
    U("must provide one or more functions to wrap on modules");
    return;
  }
  e.forEach(function(n) {
    t.forEach(function(i) {
      Oi(n, i, r);
    });
  });
}
function Si(e, t) {
  if (!e || !e[t]) {
    U("no function to unwrap."), U(new Error().stack);
    return;
  }
  if (!e[t].__unwrap)
    U("no original to unwrap to -- has " + t + " already been unwrapped?");
  else
    return e[t].__unwrap();
}
function hu(e, t) {
  if (e)
    Array.isArray(e) || (e = [e]);
  else {
    U("must provide one or more modules to patch"), U(new Error().stack);
    return;
  }
  if (!(t && Array.isArray(t))) {
    U("must provide one or more functions to unwrap on modules");
    return;
  }
  e.forEach(function(r) {
    t.forEach(function(n) {
      Si(r, n);
    });
  });
}
Ye.wrap = Oi;
Ye.massWrap = pu;
Ye.unwrap = Si;
Ye.massUnwrap = hu;
var Qe = Ye, hr = function() {
  return hr = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
    }
    return e;
  }, hr.apply(this, arguments);
}, _u = (
  /** @class */
  function() {
    function e(t, r, n) {
      this.instrumentationName = t, this.instrumentationVersion = r, this._config = {}, this._wrap = Qe.wrap, this._unwrap = Qe.unwrap, this._massWrap = Qe.massWrap, this._massUnwrap = Qe.massUnwrap, this.setConfig(n), this._diag = m.createComponentLogger({
        namespace: t
      }), this._tracer = L.getTracer(t, r), this._meter = fi.getMeter(t, r), this._logger = mi.getLogger(t, r), this._updateMetricInstruments();
    }
    return Object.defineProperty(e.prototype, "meter", {
      /* Returns meter */
      get: function() {
        return this._meter;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setMeterProvider = function(t) {
      this._meter = t.getMeter(this.instrumentationName, this.instrumentationVersion), this._updateMetricInstruments();
    }, Object.defineProperty(e.prototype, "logger", {
      /* Returns logger */
      get: function() {
        return this._logger;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.setLoggerProvider = function(t) {
      this._logger = t.getLogger(this.instrumentationName, this.instrumentationVersion);
    }, e.prototype.getModuleDefinitions = function() {
      var t, r = (t = this.init()) !== null && t !== void 0 ? t : [];
      return Array.isArray(r) ? r : [r];
    }, e.prototype._updateMetricInstruments = function() {
    }, e.prototype.getConfig = function() {
      return this._config;
    }, e.prototype.setConfig = function(t) {
      this._config = hr({ enabled: !0 }, t);
    }, e.prototype.setTracerProvider = function(t) {
      this._tracer = t.getTracer(this.instrumentationName, this.instrumentationVersion);
    }, Object.defineProperty(e.prototype, "tracer", {
      /* Returns tracer */
      get: function() {
        return this._tracer;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype._runSpanCustomizationHook = function(t, r, n, i) {
      if (t)
        try {
          t(n, i);
        } catch (o) {
          this._diag.error("Error running span customization hook due to exception in handler", { triggerName: r }, o);
        }
    }, e;
  }()
), Eu = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Rt = (
  /** @class */
  function(e) {
    Eu(t, e);
    function t(r, n, i) {
      var o = e.call(this, r, n, i) || this;
      return o._config.enabled && o.enable(), o;
    }
    return t;
  }(_u)
);
function dt(e, t, r) {
  var n, i;
  try {
    i = e();
  } catch (o) {
    n = o;
  } finally {
    if (t(n, i), n && !r)
      throw n;
    return i;
  }
}
function C(e) {
  return typeof e == "function" && typeof e.__original == "function" && typeof e.__unwrap == "function" && e.__wrapped === !0;
}
var Ri = mt("OpenTelemetry SDK Context Key SUPPRESS_TRACING");
function Tu(e) {
  return e.setValue(Ri, !0);
}
function Vr(e) {
  return e.getValue(Ri) === !0;
}
var vu = "=", _r = ";", Er = ",", qt = "baggage", gu = 180, yu = 4096, mu = 8192, Ou = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function Su(e) {
  return e.reduce(function(t, r) {
    var n = "" + t + (t !== "" ? Er : "") + r;
    return n.length > mu ? t : n;
  }, "");
}
function Ru(e) {
  return e.getAllEntries().map(function(t) {
    var r = Ou(t, 2), n = r[0], i = r[1], o = encodeURIComponent(n) + "=" + encodeURIComponent(i.value);
    return i.metadata !== void 0 && (o += _r + i.metadata.toString()), o;
  });
}
function Au(e) {
  var t = e.split(_r);
  if (!(t.length <= 0)) {
    var r = t.shift();
    if (r) {
      var n = r.indexOf(vu);
      if (!(n <= 0)) {
        var i = decodeURIComponent(r.substring(0, n).trim()), o = decodeURIComponent(r.substring(n + 1).trim()), a;
        return t.length > 0 && (a = kr(t.join(_r))), { key: i, value: o, metadata: a };
      }
    }
  }
}
var Nu = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.inject = function(t, r, n) {
      var i = k.getBaggage(t);
      if (!(!i || Vr(t))) {
        var o = Ru(i).filter(function(s) {
          return s.length <= yu;
        }).slice(0, gu), a = Su(o);
        a.length > 0 && n.set(r, qt, a);
      }
    }, e.prototype.extract = function(t, r, n) {
      var i = n.get(r, qt), o = Array.isArray(i) ? i.join(Er) : i;
      if (!o)
        return t;
      var a = {};
      if (o.length === 0)
        return t;
      var s = o.split(Er);
      return s.forEach(function(u) {
        var c = Au(u);
        if (c) {
          var l = { value: c.value };
          c.metadata && (l.metadata = c.metadata), a[c.key] = l;
        }
      }), Object.entries(a).length === 0 ? t : k.setBaggage(t, k.createBaggage(a));
    }, e.prototype.fields = function() {
      return [qt];
    }, e;
  }()
), Ai = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, Lu = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function it(e) {
  var t, r, n = {};
  if (typeof e != "object" || e == null)
    return n;
  try {
    for (var i = Ai(Object.entries(e)), o = i.next(); !o.done; o = i.next()) {
      var a = Lu(o.value, 2), s = a[0], u = a[1];
      if (!bu(s)) {
        m.warn("Invalid attribute key: " + s);
        continue;
      }
      if (!Ni(u)) {
        m.warn("Invalid attribute value set for key: " + s);
        continue;
      }
      Array.isArray(u) ? n[s] = u.slice() : n[s] = u;
    }
  } catch (c) {
    t = { error: c };
  } finally {
    try {
      o && !o.done && (r = i.return) && r.call(i);
    } finally {
      if (t) throw t.error;
    }
  }
  return n;
}
function bu(e) {
  return typeof e == "string" && e.length > 0;
}
function Ni(e) {
  return e == null ? !0 : Array.isArray(e) ? wu(e) : Li(e);
}
function wu(e) {
  var t, r, n;
  try {
    for (var i = Ai(e), o = i.next(); !o.done; o = i.next()) {
      var a = o.value;
      if (a != null) {
        if (!n) {
          if (Li(a)) {
            n = typeof a;
            continue;
          }
          return !1;
        }
        if (typeof a !== n)
          return !1;
      }
    }
  } catch (s) {
    t = { error: s };
  } finally {
    try {
      o && !o.done && (r = i.return) && r.call(i);
    } finally {
      if (t) throw t.error;
    }
  }
  return !0;
}
function Li(e) {
  switch (typeof e) {
    case "number":
    case "boolean":
    case "string":
      return !0;
  }
  return !1;
}
function Iu() {
  return function(e) {
    m.error(Pu(e));
  };
}
function Pu(e) {
  return typeof e == "string" ? e : JSON.stringify(Cu(e));
}
function Cu(e) {
  for (var t = {}, r = e; r !== null; )
    Object.getOwnPropertyNames(r).forEach(function(n) {
      if (!t[n]) {
        var i = r[n];
        i && (t[n] = String(i));
      }
    }), r = Object.getPrototypeOf(r);
  return t;
}
var xu = Iu();
function pt(e) {
  try {
    xu(e);
  } catch (t) {
  }
}
var $;
(function(e) {
  e.AlwaysOff = "always_off", e.AlwaysOn = "always_on", e.ParentBasedAlwaysOff = "parentbased_always_off", e.ParentBasedAlwaysOn = "parentbased_always_on", e.ParentBasedTraceIdRatio = "parentbased_traceidratio", e.TraceIdRatio = "traceidratio";
})($ || ($ = {}));
var Du = ",", Mu = ["OTEL_SDK_DISABLED"];
function ku(e) {
  return Mu.indexOf(e) > -1;
}
var Uu = [
  "OTEL_BSP_EXPORT_TIMEOUT",
  "OTEL_BSP_MAX_EXPORT_BATCH_SIZE",
  "OTEL_BSP_MAX_QUEUE_SIZE",
  "OTEL_BSP_SCHEDULE_DELAY",
  "OTEL_BLRP_EXPORT_TIMEOUT",
  "OTEL_BLRP_MAX_EXPORT_BATCH_SIZE",
  "OTEL_BLRP_MAX_QUEUE_SIZE",
  "OTEL_BLRP_SCHEDULE_DELAY",
  "OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_SPAN_EVENT_COUNT_LIMIT",
  "OTEL_SPAN_LINK_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT",
  "OTEL_EXPORTER_OTLP_TIMEOUT",
  "OTEL_EXPORTER_OTLP_TRACES_TIMEOUT",
  "OTEL_EXPORTER_OTLP_METRICS_TIMEOUT",
  "OTEL_EXPORTER_OTLP_LOGS_TIMEOUT",
  "OTEL_EXPORTER_JAEGER_AGENT_PORT"
];
function Bu(e) {
  return Uu.indexOf(e) > -1;
}
var Hu = [
  "OTEL_NO_PATCH_MODULES",
  "OTEL_PROPAGATORS"
];
function Fu(e) {
  return Hu.indexOf(e) > -1;
}
var ot = 1 / 0, at = 128, Gu = 128, ju = 128, bi = {
  OTEL_SDK_DISABLED: !1,
  CONTAINER_NAME: "",
  ECS_CONTAINER_METADATA_URI_V4: "",
  ECS_CONTAINER_METADATA_URI: "",
  HOSTNAME: "",
  KUBERNETES_SERVICE_HOST: "",
  NAMESPACE: "",
  OTEL_BSP_EXPORT_TIMEOUT: 3e4,
  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,
  OTEL_BSP_MAX_QUEUE_SIZE: 2048,
  OTEL_BSP_SCHEDULE_DELAY: 5e3,
  OTEL_BLRP_EXPORT_TIMEOUT: 3e4,
  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,
  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,
  OTEL_BLRP_SCHEDULE_DELAY: 5e3,
  OTEL_EXPORTER_JAEGER_AGENT_HOST: "",
  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,
  OTEL_EXPORTER_JAEGER_ENDPOINT: "",
  OTEL_EXPORTER_JAEGER_PASSWORD: "",
  OTEL_EXPORTER_JAEGER_USER: "",
  OTEL_EXPORTER_OTLP_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_HEADERS: "",
  OTEL_EXPORTER_OTLP_TRACES_HEADERS: "",
  OTEL_EXPORTER_OTLP_METRICS_HEADERS: "",
  OTEL_EXPORTER_OTLP_LOGS_HEADERS: "",
  OTEL_EXPORTER_OTLP_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 1e4,
  OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://localhost:9411/api/v2/spans",
  OTEL_LOG_LEVEL: N.INFO,
  OTEL_NO_PATCH_MODULES: [],
  OTEL_PROPAGATORS: ["tracecontext", "baggage"],
  OTEL_RESOURCE_ATTRIBUTES: "",
  OTEL_SERVICE_NAME: "",
  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: ot,
  OTEL_ATTRIBUTE_COUNT_LIMIT: at,
  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: ot,
  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: at,
  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT: ot,
  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: at,
  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,
  OTEL_SPAN_LINK_COUNT_LIMIT: 128,
  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT: Gu,
  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT: ju,
  OTEL_TRACES_EXPORTER: "",
  OTEL_TRACES_SAMPLER: $.ParentBasedAlwaysOn,
  OTEL_TRACES_SAMPLER_ARG: "",
  OTEL_LOGS_EXPORTER: "",
  OTEL_EXPORTER_OTLP_INSECURE: "",
  OTEL_EXPORTER_OTLP_TRACES_INSECURE: "",
  OTEL_EXPORTER_OTLP_METRICS_INSECURE: "",
  OTEL_EXPORTER_OTLP_LOGS_INSECURE: "",
  OTEL_EXPORTER_OTLP_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: "cumulative"
};
function Vu(e, t, r) {
  if (typeof r[e] != "undefined") {
    var n = String(r[e]);
    t[e] = n.toLowerCase() === "true";
  }
}
function $u(e, t, r, n, i) {
  if (n === void 0 && (n = -1 / 0), i === void 0 && (i = 1 / 0), typeof r[e] != "undefined") {
    var o = Number(r[e]);
    isNaN(o) || (o < n ? t[e] = n : o > i ? t[e] = i : t[e] = o);
  }
}
function Xu(e, t, r, n) {
  n === void 0 && (n = Du);
  var i = r[e];
  typeof i == "string" && (t[e] = i.split(n).map(function(o) {
    return o.trim();
  }));
}
var qu = {
  ALL: N.ALL,
  VERBOSE: N.VERBOSE,
  DEBUG: N.DEBUG,
  INFO: N.INFO,
  WARN: N.WARN,
  ERROR: N.ERROR,
  NONE: N.NONE
};
function zu(e, t, r) {
  var n = r[e];
  if (typeof n == "string") {
    var i = qu[n.toUpperCase()];
    i != null && (t[e] = i);
  }
}
function wi(e) {
  var t = {};
  for (var r in bi) {
    var n = r;
    switch (n) {
      case "OTEL_LOG_LEVEL":
        zu(n, t, e);
        break;
      default:
        if (ku(n))
          Vu(n, t, e);
        else if (Bu(n))
          $u(n, t, e);
        else if (Fu(n))
          Xu(n, t, e);
        else {
          var i = e[n];
          typeof i != "undefined" && i !== null && (t[n] = String(i));
        }
    }
  }
  return t;
}
var Ii = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof global == "object" ? global : {};
function me() {
  var e = wi(Ii);
  return Object.assign({}, bi, e);
}
function Yu() {
  return wi(Ii);
}
var Ee = performance, Wu = "1.26.0", de, zt = (de = {}, de[ve] = "opentelemetry", de[vi] = "browser", de[ge] = yi, de[ye] = Wu, de), Ku = 9, Ju = 6, Qu = Math.pow(10, Ju), ht = Math.pow(10, Ku);
function Z(e) {
  var t = e / 1e3, r = Math.trunc(t), n = Math.round(e % 1e3 * Qu);
  return [r, n];
}
function $r() {
  var e = Ee.timeOrigin;
  if (typeof e != "number") {
    var t = Ee;
    e = t.timing && t.timing.fetchStart;
  }
  return e;
}
function Pi(e) {
  var t = Z($r()), r = Z(typeof e == "number" ? e : Ee.now());
  return Ci(t, r);
}
function Ue(e) {
  if (Xr(e))
    return e;
  if (typeof e == "number")
    return e < $r() ? Pi(e) : Z(e);
  if (e instanceof Date)
    return Z(e.getTime());
  throw TypeError("Invalid input type");
}
function Zu(e, t) {
  var r = t[0] - e[0], n = t[1] - e[1];
  return n < 0 && (r -= 1, n += ht), [r, n];
}
function ee(e) {
  return e[0] * ht + e[1];
}
function Xr(e) {
  return Array.isArray(e) && e.length === 2 && typeof e[0] == "number" && typeof e[1] == "number";
}
function hn(e) {
  return Xr(e) || typeof e == "number" || e instanceof Date;
}
function Ci(e, t) {
  var r = [e[0] + t[0], e[1] + t[1]];
  return r[1] >= ht && (r[1] -= ht, r[0] += 1), r;
}
var Tr;
(function(e) {
  e[e.SUCCESS = 0] = "SUCCESS", e[e.FAILED = 1] = "FAILED";
})(Tr || (Tr = {}));
var ec = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, tc = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = {});
      var r;
      this._propagators = (r = t.propagators) !== null && r !== void 0 ? r : [], this._fields = Array.from(new Set(this._propagators.map(function(n) {
        return typeof n.fields == "function" ? n.fields() : [];
      }).reduce(function(n, i) {
        return n.concat(i);
      }, [])));
    }
    return e.prototype.inject = function(t, r, n) {
      var i, o;
      try {
        for (var a = ec(this._propagators), s = a.next(); !s.done; s = a.next()) {
          var u = s.value;
          try {
            u.inject(t, r, n);
          } catch (c) {
            m.warn("Failed to inject with " + u.constructor.name + ". Err: " + c.message);
          }
        }
      } catch (c) {
        i = { error: c };
      } finally {
        try {
          s && !s.done && (o = a.return) && o.call(a);
        } finally {
          if (i) throw i.error;
        }
      }
    }, e.prototype.extract = function(t, r, n) {
      return this._propagators.reduce(function(i, o) {
        try {
          return o.extract(i, r, n);
        } catch (a) {
          m.warn("Failed to inject with " + o.constructor.name + ". Err: " + a.message);
        }
        return i;
      }, t);
    }, e.prototype.fields = function() {
      return this._fields.slice();
    }, e;
  }()
), vr = "[_0-9a-z-*/]", rc = "[a-z]" + vr + "{0,255}", nc = "[a-z0-9]" + vr + "{0,240}@[a-z]" + vr + "{0,13}", ic = new RegExp("^(?:" + rc + "|" + nc + ")$"), oc = /^[ -~]{0,255}[!-~]$/, ac = /,|=/;
function sc(e) {
  return ic.test(e);
}
function uc(e) {
  return oc.test(e) && !ac.test(e);
}
var _n = 32, cc = 512, En = ",", Tn = "=", lc = (
  /** @class */
  function() {
    function e(t) {
      this._internalState = /* @__PURE__ */ new Map(), t && this._parse(t);
    }
    return e.prototype.set = function(t, r) {
      var n = this._clone();
      return n._internalState.has(t) && n._internalState.delete(t), n._internalState.set(t, r), n;
    }, e.prototype.unset = function(t) {
      var r = this._clone();
      return r._internalState.delete(t), r;
    }, e.prototype.get = function(t) {
      return this._internalState.get(t);
    }, e.prototype.serialize = function() {
      var t = this;
      return this._keys().reduce(function(r, n) {
        return r.push(n + Tn + t.get(n)), r;
      }, []).join(En);
    }, e.prototype._parse = function(t) {
      t.length > cc || (this._internalState = t.split(En).reverse().reduce(function(r, n) {
        var i = n.trim(), o = i.indexOf(Tn);
        if (o !== -1) {
          var a = i.slice(0, o), s = i.slice(o + 1, n.length);
          sc(a) && uc(s) && r.set(a, s);
        }
        return r;
      }, /* @__PURE__ */ new Map()), this._internalState.size > _n && (this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, _n))));
    }, e.prototype._keys = function() {
      return Array.from(this._internalState.keys()).reverse();
    }, e.prototype._clone = function() {
      var t = new e();
      return t._internalState = new Map(this._internalState), t;
    }, e;
  }()
), Yt = "traceparent", Wt = "tracestate", fc = "00", dc = "(?!ff)[\\da-f]{2}", pc = "(?![0]{32})[\\da-f]{32}", hc = "(?![0]{16})[\\da-f]{16}", _c = "[\\da-f]{2}", Ec = new RegExp("^\\s?(" + dc + ")-(" + pc + ")-(" + hc + ")-(" + _c + ")(-.*)?\\s?$");
function Tc(e) {
  var t = Ec.exec(e);
  return !t || t[1] === "00" && t[5] ? null : {
    traceId: t[2],
    spanId: t[3],
    traceFlags: parseInt(t[4], 16)
  };
}
var vc = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.inject = function(t, r, n) {
      var i = L.getSpanContext(t);
      if (!(!i || Vr(t) || !ze(i))) {
        var o = fc + "-" + i.traceId + "-" + i.spanId + "-0" + Number(i.traceFlags || q.NONE).toString(16);
        n.set(r, Yt, o), i.traceState && n.set(r, Wt, i.traceState.serialize());
      }
    }, e.prototype.extract = function(t, r, n) {
      var i = n.get(r, Yt);
      if (!i)
        return t;
      var o = Array.isArray(i) ? i[0] : i;
      if (typeof o != "string")
        return t;
      var a = Tc(o);
      if (!a)
        return t;
      a.isRemote = !0;
      var s = n.get(r, Wt);
      if (s) {
        var u = Array.isArray(s) ? s.join(",") : s;
        a.traceState = new lc(typeof u == "string" ? u : void 0);
      }
      return L.setSpanContext(t, a);
    }, e.prototype.fields = function() {
      return [Yt, Wt];
    }, e;
  }()
), gc = "[object Object]", yc = "[object Null]", mc = "[object Undefined]", Oc = Function.prototype, xi = Oc.toString, Sc = xi.call(Object), Rc = Ac(Object.getPrototypeOf, Object), Di = Object.prototype, Mi = Di.hasOwnProperty, ie = Symbol ? Symbol.toStringTag : void 0, ki = Di.toString;
function Ac(e, t) {
  return function(r) {
    return e(t(r));
  };
}
function vn(e) {
  if (!Nc(e) || Lc(e) !== gc)
    return !1;
  var t = Rc(e);
  if (t === null)
    return !0;
  var r = Mi.call(t, "constructor") && t.constructor;
  return typeof r == "function" && r instanceof r && xi.call(r) === Sc;
}
function Nc(e) {
  return e != null && typeof e == "object";
}
function Lc(e) {
  return e == null ? e === void 0 ? mc : yc : ie && ie in Object(e) ? bc(e) : wc(e);
}
function bc(e) {
  var t = Mi.call(e, ie), r = e[ie], n = !1;
  try {
    e[ie] = void 0, n = !0;
  } catch (o) {
  }
  var i = ki.call(e);
  return n && (t ? e[ie] = r : delete e[ie]), i;
}
function wc(e) {
  return ki.call(e);
}
var Ic = 20;
function Pc() {
  for (var e = [], t = 0; t < arguments.length; t++)
    e[t] = arguments[t];
  for (var r = e.shift(), n = /* @__PURE__ */ new WeakMap(); e.length > 0; )
    r = Ui(r, e.shift(), 0, n);
  return r;
}
function Kt(e) {
  return _t(e) ? e.slice() : e;
}
function Ui(e, t, r, n) {
  r === void 0 && (r = 0);
  var i;
  if (!(r > Ic)) {
    if (r++, st(e) || st(t) || Bi(t))
      i = Kt(t);
    else if (_t(e)) {
      if (i = e.slice(), _t(t))
        for (var o = 0, a = t.length; o < a; o++)
          i.push(Kt(t[o]));
      else if (Ie(t))
        for (var s = Object.keys(t), o = 0, a = s.length; o < a; o++) {
          var u = s[o];
          i[u] = Kt(t[u]);
        }
    } else if (Ie(e))
      if (Ie(t)) {
        if (!Cc(e, t))
          return t;
        i = Object.assign({}, e);
        for (var s = Object.keys(t), o = 0, a = s.length; o < a; o++) {
          var u = s[o], c = t[u];
          if (st(c))
            typeof c == "undefined" ? delete i[u] : i[u] = c;
          else {
            var l = i[u], f = c;
            if (gn(e, u, n) || gn(t, u, n))
              delete i[u];
            else {
              if (Ie(l) && Ie(f)) {
                var d = n.get(l) || [], h = n.get(f) || [];
                d.push({ obj: e, key: u }), h.push({ obj: t, key: u }), n.set(l, d), n.set(f, h);
              }
              i[u] = Ui(i[u], c, r, n);
            }
          }
        }
      } else
        i = t;
    return i;
  }
}
function gn(e, t, r) {
  for (var n = r.get(e[t]) || [], i = 0, o = n.length; i < o; i++) {
    var a = n[i];
    if (a.key === t && a.obj === e)
      return !0;
  }
  return !1;
}
function _t(e) {
  return Array.isArray(e);
}
function Bi(e) {
  return typeof e == "function";
}
function Ie(e) {
  return !st(e) && !_t(e) && !Bi(e) && typeof e == "object";
}
function st(e) {
  return typeof e == "string" || typeof e == "number" || typeof e == "boolean" || typeof e == "undefined" || e instanceof Date || e instanceof RegExp || e === null;
}
function Cc(e, t) {
  return !(!vn(e) || !vn(t));
}
function xc(e, t) {
  return typeof t == "string" ? e === t : !!e.match(t);
}
var Dc = (
  /** @class */
  function() {
    function e() {
      var t = this;
      this._promise = new Promise(function(r, n) {
        t._resolve = r, t._reject = n;
      });
    }
    return Object.defineProperty(e.prototype, "promise", {
      get: function() {
        return this._promise;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.resolve = function(t) {
      this._resolve(t);
    }, e.prototype.reject = function(t) {
      this._reject(t);
    }, e;
  }()
), Mc = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, kc = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, Uc = (
  /** @class */
  function() {
    function e(t, r) {
      this._callback = t, this._that = r, this._isCalled = !1, this._deferred = new Dc();
    }
    return Object.defineProperty(e.prototype, "isCalled", {
      get: function() {
        return this._isCalled;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "promise", {
      get: function() {
        return this._deferred.promise;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.call = function() {
      for (var t, r = this, n = [], i = 0; i < arguments.length; i++)
        n[i] = arguments[i];
      if (!this._isCalled) {
        this._isCalled = !0;
        try {
          Promise.resolve((t = this._callback).call.apply(t, kc([this._that], Mc(n), !1))).then(function(o) {
            return r._deferred.resolve(o);
          }, function(o) {
            return r._deferred.reject(o);
          });
        } catch (o) {
          this._deferred.reject(o);
        }
      }
      return this._deferred.promise;
    }, e;
  }()
), Bc = "exception", Hc = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, yn = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Fc = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, Gc = (
  /** @class */
  function() {
    function e(t, r, n, i, o, a, s, u, c, l) {
      s === void 0 && (s = []), this.attributes = {}, this.links = [], this.events = [], this._droppedAttributesCount = 0, this._droppedEventsCount = 0, this._droppedLinksCount = 0, this.status = {
        code: cr.UNSET
      }, this.endTime = [0, 0], this._ended = !1, this._duration = [-1, -1], this.name = n, this._spanContext = i, this.parentSpanId = a, this.kind = o, this.links = s;
      var f = Date.now();
      this._performanceStartTime = Ee.now(), this._performanceOffset = f - (this._performanceStartTime + $r()), this._startTimeProvided = u != null, this.startTime = this._getTime(u != null ? u : f), this.resource = t.resource, this.instrumentationLibrary = t.instrumentationLibrary, this._spanLimits = t.getSpanLimits(), this._attributeValueLengthLimit = this._spanLimits.attributeValueLengthLimit || 0, l != null && this.setAttributes(l), this._spanProcessor = t.getActiveSpanProcessor(), this._spanProcessor.onStart(this, r);
    }
    return e.prototype.spanContext = function() {
      return this._spanContext;
    }, e.prototype.setAttribute = function(t, r) {
      return r == null || this._isSpanEnded() ? this : t.length === 0 ? (m.warn("Invalid attribute key: " + t), this) : Ni(r) ? Object.keys(this.attributes).length >= this._spanLimits.attributeCountLimit && !Object.prototype.hasOwnProperty.call(this.attributes, t) ? (this._droppedAttributesCount++, this) : (this.attributes[t] = this._truncateToSize(r), this) : (m.warn("Invalid attribute value set for key: " + t), this);
    }, e.prototype.setAttributes = function(t) {
      var r, n;
      try {
        for (var i = Hc(Object.entries(t)), o = i.next(); !o.done; o = i.next()) {
          var a = yn(o.value, 2), s = a[0], u = a[1];
          this.setAttribute(s, u);
        }
      } catch (c) {
        r = { error: c };
      } finally {
        try {
          o && !o.done && (n = i.return) && n.call(i);
        } finally {
          if (r) throw r.error;
        }
      }
      return this;
    }, e.prototype.addEvent = function(t, r, n) {
      if (this._isSpanEnded())
        return this;
      if (this._spanLimits.eventCountLimit === 0)
        return m.warn("No events allowed."), this._droppedEventsCount++, this;
      this.events.length >= this._spanLimits.eventCountLimit && (this._droppedEventsCount === 0 && m.debug("Dropping extra events."), this.events.shift(), this._droppedEventsCount++), hn(r) && (hn(n) || (n = r), r = void 0);
      var i = it(r);
      return this.events.push({
        name: t,
        attributes: i,
        time: this._getTime(n),
        droppedAttributesCount: 0
      }), this;
    }, e.prototype.addLink = function(t) {
      return this.links.push(t), this;
    }, e.prototype.addLinks = function(t) {
      var r;
      return (r = this.links).push.apply(r, Fc([], yn(t), !1)), this;
    }, e.prototype.setStatus = function(t) {
      return this._isSpanEnded() ? this : (this.status = t, this);
    }, e.prototype.updateName = function(t) {
      return this._isSpanEnded() ? this : (this.name = t, this);
    }, e.prototype.end = function(t) {
      if (this._isSpanEnded()) {
        m.error(this.name + " " + this._spanContext.traceId + "-" + this._spanContext.spanId + " - You can only call end() on a span once.");
        return;
      }
      this._ended = !0, this.endTime = this._getTime(t), this._duration = Zu(this.startTime, this.endTime), this._duration[0] < 0 && (m.warn("Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.", this.startTime, this.endTime), this.endTime = this.startTime.slice(), this._duration = [0, 0]), this._droppedEventsCount > 0 && m.warn("Dropped " + this._droppedEventsCount + " events because eventCountLimit reached"), this._spanProcessor.onEnd(this);
    }, e.prototype._getTime = function(t) {
      if (typeof t == "number" && t < Ee.now())
        return Pi(t + this._performanceOffset);
      if (typeof t == "number")
        return Z(t);
      if (t instanceof Date)
        return Z(t.getTime());
      if (Xr(t))
        return t;
      if (this._startTimeProvided)
        return Z(Date.now());
      var r = Ee.now() - this._performanceStartTime;
      return Ci(this.startTime, Z(r));
    }, e.prototype.isRecording = function() {
      return this._ended === !1;
    }, e.prototype.recordException = function(t, r) {
      var n = {};
      typeof t == "string" ? n[Vt] = t : t && (t.code ? n[jt] = t.code.toString() : t.name && (n[jt] = t.name), t.message && (n[Vt] = t.message), t.stack && (n[gs] = t.stack)), n[jt] || n[Vt] ? this.addEvent(Bc, n, r) : m.warn("Failed to record an exception " + t);
    }, Object.defineProperty(e.prototype, "duration", {
      get: function() {
        return this._duration;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "ended", {
      get: function() {
        return this._ended;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "droppedAttributesCount", {
      get: function() {
        return this._droppedAttributesCount;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "droppedEventsCount", {
      get: function() {
        return this._droppedEventsCount;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "droppedLinksCount", {
      get: function() {
        return this._droppedLinksCount;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype._isSpanEnded = function() {
      return this._ended && m.warn("Can not execute the operation on ended Span {traceId: " + this._spanContext.traceId + ", spanId: " + this._spanContext.spanId + "}"), this._ended;
    }, e.prototype._truncateToLimitUtil = function(t, r) {
      return t.length <= r ? t : t.substr(0, r);
    }, e.prototype._truncateToSize = function(t) {
      var r = this, n = this._attributeValueLengthLimit;
      return n <= 0 ? (m.warn("Attribute value limit must be positive, got " + n), t) : typeof t == "string" ? this._truncateToLimitUtil(t, n) : Array.isArray(t) ? t.map(function(i) {
        return typeof i == "string" ? r._truncateToLimitUtil(i, n) : i;
      }) : t;
    }, e;
  }()
), Oe;
(function(e) {
  e[e.NOT_RECORD = 0] = "NOT_RECORD", e[e.RECORD = 1] = "RECORD", e[e.RECORD_AND_SAMPLED = 2] = "RECORD_AND_SAMPLED";
})(Oe || (Oe = {}));
var Et = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.shouldSample = function() {
      return {
        decision: Oe.NOT_RECORD
      };
    }, e.prototype.toString = function() {
      return "AlwaysOffSampler";
    }, e;
  }()
), Te = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.shouldSample = function() {
      return {
        decision: Oe.RECORD_AND_SAMPLED
      };
    }, e.prototype.toString = function() {
      return "AlwaysOnSampler";
    }, e;
  }()
), Jt = (
  /** @class */
  function() {
    function e(t) {
      var r, n, i, o;
      this._root = t.root, this._root || (pt(new Error("ParentBasedSampler must have a root sampler configured")), this._root = new Te()), this._remoteParentSampled = (r = t.remoteParentSampled) !== null && r !== void 0 ? r : new Te(), this._remoteParentNotSampled = (n = t.remoteParentNotSampled) !== null && n !== void 0 ? n : new Et(), this._localParentSampled = (i = t.localParentSampled) !== null && i !== void 0 ? i : new Te(), this._localParentNotSampled = (o = t.localParentNotSampled) !== null && o !== void 0 ? o : new Et();
    }
    return e.prototype.shouldSample = function(t, r, n, i, o, a) {
      var s = L.getSpanContext(t);
      return !s || !ze(s) ? this._root.shouldSample(t, r, n, i, o, a) : s.isRemote ? s.traceFlags & q.SAMPLED ? this._remoteParentSampled.shouldSample(t, r, n, i, o, a) : this._remoteParentNotSampled.shouldSample(t, r, n, i, o, a) : s.traceFlags & q.SAMPLED ? this._localParentSampled.shouldSample(t, r, n, i, o, a) : this._localParentNotSampled.shouldSample(t, r, n, i, o, a);
    }, e.prototype.toString = function() {
      return "ParentBased{root=" + this._root.toString() + ", remoteParentSampled=" + this._remoteParentSampled.toString() + ", remoteParentNotSampled=" + this._remoteParentNotSampled.toString() + ", localParentSampled=" + this._localParentSampled.toString() + ", localParentNotSampled=" + this._localParentNotSampled.toString() + "}";
    }, e;
  }()
), mn = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = 0), this._ratio = t, this._ratio = this._normalize(t), this._upperBound = Math.floor(this._ratio * 4294967295);
    }
    return e.prototype.shouldSample = function(t, r) {
      return {
        decision: ci(r) && this._accumulate(r) < this._upperBound ? Oe.RECORD_AND_SAMPLED : Oe.NOT_RECORD
      };
    }, e.prototype.toString = function() {
      return "TraceIdRatioBased{" + this._ratio + "}";
    }, e.prototype._normalize = function(t) {
      return typeof t != "number" || isNaN(t) ? 0 : t >= 1 ? 1 : t <= 0 ? 0 : t;
    }, e.prototype._accumulate = function(t) {
      for (var r = 0, n = 0; n < t.length / 8; n++) {
        var i = n * 8, o = parseInt(t.slice(i, i + 8), 16);
        r = (r ^ o) >>> 0;
      }
      return r;
    }, e;
  }()
), jc = me(), Vc = $.AlwaysOn, pe = 1;
function Hi() {
  var e = me();
  return {
    sampler: Fi(jc),
    forceFlushTimeoutMillis: 3e4,
    generalLimits: {
      attributeValueLengthLimit: e.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT,
      attributeCountLimit: e.OTEL_ATTRIBUTE_COUNT_LIMIT
    },
    spanLimits: {
      attributeValueLengthLimit: e.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT,
      attributeCountLimit: e.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT,
      linkCountLimit: e.OTEL_SPAN_LINK_COUNT_LIMIT,
      eventCountLimit: e.OTEL_SPAN_EVENT_COUNT_LIMIT,
      attributePerEventCountLimit: e.OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT,
      attributePerLinkCountLimit: e.OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT
    }
  };
}
function Fi(e) {
  switch (e === void 0 && (e = me()), e.OTEL_TRACES_SAMPLER) {
    case $.AlwaysOn:
      return new Te();
    case $.AlwaysOff:
      return new Et();
    case $.ParentBasedAlwaysOn:
      return new Jt({
        root: new Te()
      });
    case $.ParentBasedAlwaysOff:
      return new Jt({
        root: new Et()
      });
    case $.TraceIdRatio:
      return new mn(On(e));
    case $.ParentBasedTraceIdRatio:
      return new Jt({
        root: new mn(On(e))
      });
    default:
      return m.error('OTEL_TRACES_SAMPLER value "' + e.OTEL_TRACES_SAMPLER + " invalid, defaulting to " + Vc + '".'), new Te();
  }
}
function On(e) {
  if (e.OTEL_TRACES_SAMPLER_ARG === void 0 || e.OTEL_TRACES_SAMPLER_ARG === "")
    return m.error("OTEL_TRACES_SAMPLER_ARG is blank, defaulting to " + pe + "."), pe;
  var t = Number(e.OTEL_TRACES_SAMPLER_ARG);
  return isNaN(t) ? (m.error("OTEL_TRACES_SAMPLER_ARG=" + e.OTEL_TRACES_SAMPLER_ARG + " was given, but it is invalid, defaulting to " + pe + "."), pe) : t < 0 || t > 1 ? (m.error("OTEL_TRACES_SAMPLER_ARG=" + e.OTEL_TRACES_SAMPLER_ARG + " was given, but it is out of range ([0..1]), defaulting to " + pe + "."), pe) : t;
}
function $c(e) {
  var t = {
    sampler: Fi()
  }, r = Hi(), n = Object.assign({}, r, t, e);
  return n.generalLimits = Object.assign({}, r.generalLimits, e.generalLimits || {}), n.spanLimits = Object.assign({}, r.spanLimits, e.spanLimits || {}), n;
}
function Xc(e) {
  var t, r, n, i, o, a, s, u, c, l, f, d, h = Object.assign({}, e.spanLimits), E = Yu();
  return h.attributeCountLimit = (a = (o = (i = (r = (t = e.spanLimits) === null || t === void 0 ? void 0 : t.attributeCountLimit) !== null && r !== void 0 ? r : (n = e.generalLimits) === null || n === void 0 ? void 0 : n.attributeCountLimit) !== null && i !== void 0 ? i : E.OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT) !== null && o !== void 0 ? o : E.OTEL_ATTRIBUTE_COUNT_LIMIT) !== null && a !== void 0 ? a : at, h.attributeValueLengthLimit = (d = (f = (l = (u = (s = e.spanLimits) === null || s === void 0 ? void 0 : s.attributeValueLengthLimit) !== null && u !== void 0 ? u : (c = e.generalLimits) === null || c === void 0 ? void 0 : c.attributeValueLengthLimit) !== null && l !== void 0 ? l : E.OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT) !== null && f !== void 0 ? f : E.OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT) !== null && d !== void 0 ? d : ot, Object.assign({}, e, { spanLimits: h });
}
var qc = (
  /** @class */
  function() {
    function e(t, r) {
      this._exporter = t, this._isExporting = !1, this._finishedSpans = [], this._droppedSpansCount = 0;
      var n = me();
      this._maxExportBatchSize = typeof (r == null ? void 0 : r.maxExportBatchSize) == "number" ? r.maxExportBatchSize : n.OTEL_BSP_MAX_EXPORT_BATCH_SIZE, this._maxQueueSize = typeof (r == null ? void 0 : r.maxQueueSize) == "number" ? r.maxQueueSize : n.OTEL_BSP_MAX_QUEUE_SIZE, this._scheduledDelayMillis = typeof (r == null ? void 0 : r.scheduledDelayMillis) == "number" ? r.scheduledDelayMillis : n.OTEL_BSP_SCHEDULE_DELAY, this._exportTimeoutMillis = typeof (r == null ? void 0 : r.exportTimeoutMillis) == "number" ? r.exportTimeoutMillis : n.OTEL_BSP_EXPORT_TIMEOUT, this._shutdownOnce = new Uc(this._shutdown, this), this._maxExportBatchSize > this._maxQueueSize && (m.warn("BatchSpanProcessor: maxExportBatchSize must be smaller or equal to maxQueueSize, setting maxExportBatchSize to match maxQueueSize"), this._maxExportBatchSize = this._maxQueueSize);
    }
    return e.prototype.forceFlush = function() {
      return this._shutdownOnce.isCalled ? this._shutdownOnce.promise : this._flushAll();
    }, e.prototype.onStart = function(t, r) {
    }, e.prototype.onEnd = function(t) {
      this._shutdownOnce.isCalled || t.spanContext().traceFlags & q.SAMPLED && this._addToBuffer(t);
    }, e.prototype.shutdown = function() {
      return this._shutdownOnce.call();
    }, e.prototype._shutdown = function() {
      var t = this;
      return Promise.resolve().then(function() {
        return t.onShutdown();
      }).then(function() {
        return t._flushAll();
      }).then(function() {
        return t._exporter.shutdown();
      });
    }, e.prototype._addToBuffer = function(t) {
      if (this._finishedSpans.length >= this._maxQueueSize) {
        this._droppedSpansCount === 0 && m.debug("maxQueueSize reached, dropping spans"), this._droppedSpansCount++;
        return;
      }
      this._droppedSpansCount > 0 && (m.warn("Dropped " + this._droppedSpansCount + " spans because maxQueueSize reached"), this._droppedSpansCount = 0), this._finishedSpans.push(t), this._maybeStartTimer();
    }, e.prototype._flushAll = function() {
      var t = this;
      return new Promise(function(r, n) {
        for (var i = [], o = Math.ceil(t._finishedSpans.length / t._maxExportBatchSize), a = 0, s = o; a < s; a++)
          i.push(t._flushOneBatch());
        Promise.all(i).then(function() {
          r();
        }).catch(n);
      });
    }, e.prototype._flushOneBatch = function() {
      var t = this;
      return this._clearTimer(), this._finishedSpans.length === 0 ? Promise.resolve() : new Promise(function(r, n) {
        var i = setTimeout(function() {
          n(new Error("Timeout"));
        }, t._exportTimeoutMillis);
        A.with(Tu(A.active()), function() {
          var o;
          t._finishedSpans.length <= t._maxExportBatchSize ? (o = t._finishedSpans, t._finishedSpans = []) : o = t._finishedSpans.splice(0, t._maxExportBatchSize);
          for (var a = function() {
            return t._exporter.export(o, function(f) {
              var d;
              clearTimeout(i), f.code === Tr.SUCCESS ? r() : n((d = f.error) !== null && d !== void 0 ? d : new Error("BatchSpanProcessor: span export failed"));
            });
          }, s = null, u = 0, c = o.length; u < c; u++) {
            var l = o[u];
            l.resource.asyncAttributesPending && l.resource.waitForAsyncAttributes && (s != null || (s = []), s.push(l.resource.waitForAsyncAttributes()));
          }
          s === null ? a() : Promise.all(s).then(a, function(f) {
            pt(f), n(f);
          });
        });
      });
    }, e.prototype._maybeStartTimer = function() {
      var t = this;
      if (!this._isExporting) {
        var r = function() {
          t._isExporting = !0, t._flushOneBatch().finally(function() {
            t._isExporting = !1, t._finishedSpans.length > 0 && (t._clearTimer(), t._maybeStartTimer());
          }).catch(function(n) {
            t._isExporting = !1, pt(n);
          });
        };
        if (this._finishedSpans.length >= this._maxExportBatchSize)
          return r();
        this._timer === void 0 && (this._timer = setTimeout(function() {
          return r();
        }, this._scheduledDelayMillis));
      }
    }, e.prototype._clearTimer = function() {
      this._timer !== void 0 && (clearTimeout(this._timer), this._timer = void 0);
    }, e;
  }()
), zc = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Gi = (
  /** @class */
  function(e) {
    zc(t, e);
    function t(r, n) {
      var i = e.call(this, r, n) || this;
      return i.onInit(n), i;
    }
    return t.prototype.onInit = function(r) {
      var n = this;
      (r == null ? void 0 : r.disableAutoFlushOnDocumentHide) !== !0 && typeof document != "undefined" && (this._visibilityChangeListener = function() {
        document.visibilityState === "hidden" && n.forceFlush();
      }, this._pageHideListener = function() {
        n.forceFlush();
      }, document.addEventListener("visibilitychange", this._visibilityChangeListener), document.addEventListener("pagehide", this._pageHideListener));
    }, t.prototype.onShutdown = function() {
      typeof document != "undefined" && (this._visibilityChangeListener && document.removeEventListener("visibilitychange", this._visibilityChangeListener), this._pageHideListener && document.removeEventListener("pagehide", this._pageHideListener));
    }, t;
  }(qc)
), Yc = 8, Wc = 16, Kc = (
  /** @class */
  /* @__PURE__ */ function() {
    function e() {
      this.generateTraceId = Sn(Wc), this.generateSpanId = Sn(Yc);
    }
    return e;
  }()
), Ze = Array(32);
function Sn(e) {
  return function() {
    for (var r = 0; r < e * 2; r++)
      Ze[r] = Math.floor(Math.random() * 16) + 48, Ze[r] >= 58 && (Ze[r] += 39);
    return String.fromCharCode.apply(null, Ze.slice(0, e * 2));
  };
}
var Jc = (
  /** @class */
  function() {
    function e(t, r, n) {
      this._tracerProvider = n;
      var i = $c(r);
      this._sampler = i.sampler, this._generalLimits = i.generalLimits, this._spanLimits = i.spanLimits, this._idGenerator = r.idGenerator || new Kc(), this.resource = n.resource, this.instrumentationLibrary = t;
    }
    return e.prototype.startSpan = function(t, r, n) {
      var i, o, a;
      r === void 0 && (r = {}), n === void 0 && (n = A.active()), r.root && (n = L.deleteSpan(n));
      var s = L.getSpan(n);
      if (Vr(n)) {
        m.debug("Instrumentation suppressed, returning Noop Span");
        var u = L.wrapSpanContext(si);
        return u;
      }
      var c = s == null ? void 0 : s.spanContext(), l = this._idGenerator.generateSpanId(), f, d, h;
      !c || !L.isSpanContextValid(c) ? f = this._idGenerator.generateTraceId() : (f = c.traceId, d = c.traceState, h = c.spanId);
      var E = (i = r.kind) !== null && i !== void 0 ? i : je.INTERNAL, p = ((o = r.links) !== null && o !== void 0 ? o : []).map(function(B) {
        return {
          context: B.context,
          attributes: it(B.attributes)
        };
      }), v = it(r.attributes), T = this._sampler.shouldSample(n, f, t, E, v, p);
      d = (a = T.traceState) !== null && a !== void 0 ? a : d;
      var S = T.decision === ft.RECORD_AND_SAMPLED ? q.SAMPLED : q.NONE, b = { traceId: f, spanId: l, traceFlags: S, traceState: d };
      if (T.decision === ft.NOT_RECORD) {
        m.debug("Recording is off, propagating context in a non-recording span");
        var u = L.wrapSpanContext(b);
        return u;
      }
      var I = it(Object.assign(v, T.attributes)), H = new Gc(this, n, t, b, E, h, p, r.startTime, void 0, I);
      return H;
    }, e.prototype.startActiveSpan = function(t, r, n, i) {
      var o, a, s;
      if (!(arguments.length < 2)) {
        arguments.length === 2 ? s = r : arguments.length === 3 ? (o = r, s = n) : (o = r, a = n, s = i);
        var u = a != null ? a : A.active(), c = this.startSpan(t, o, u), l = L.setSpan(u, c);
        return A.with(l, s, void 0, c);
      }
    }, e.prototype.getGeneralLimits = function() {
      return this._generalLimits;
    }, e.prototype.getSpanLimits = function() {
      return this._spanLimits;
    }, e.prototype.getActiveSpanProcessor = function() {
      return this._tracerProvider.getActiveSpanProcessor();
    }, e;
  }()
);
function Qc() {
  return "unknown_service";
}
var K = function() {
  return K = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
    }
    return e;
  }, K.apply(this, arguments);
}, Zc = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function s(l) {
      try {
        c(n.next(l));
      } catch (f) {
        a(f);
      }
    }
    function u(l) {
      try {
        c(n.throw(l));
      } catch (f) {
        a(f);
      }
    }
    function c(l) {
      l.done ? o(l.value) : i(l.value).then(s, u);
    }
    c((n = n.apply(e, t || [])).next());
  });
}, el = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function s(c) {
    return function(l) {
      return u([c, l]);
    };
  }
  function u(c) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = c[0] & 2 ? i.return : c[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, c[1])).done) return o;
      switch (i = 0, o && (c = [c[0] & 2, o.value]), c[0]) {
        case 0:
        case 1:
          o = c;
          break;
        case 4:
          return r.label++, { value: c[1], done: !1 };
        case 5:
          r.label++, i = c[1], c = [0];
          continue;
        case 7:
          c = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (c[0] === 6 || c[0] === 2)) {
            r = 0;
            continue;
          }
          if (c[0] === 3 && (!o || c[1] > o[0] && c[1] < o[3])) {
            r.label = c[1];
            break;
          }
          if (c[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = c;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(c);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      c = t.call(e, r);
    } catch (l) {
      c = [6, l], i = 0;
    } finally {
      n = o = 0;
    }
    if (c[0] & 5) throw c[1];
    return { value: c[0] ? c[1] : void 0, done: !0 };
  }
}, tl = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Rn = (
  /** @class */
  function() {
    function e(t, r) {
      var n = this, i;
      this._attributes = t, this.asyncAttributesPending = r != null, this._syncAttributes = (i = this._attributes) !== null && i !== void 0 ? i : {}, this._asyncAttributesPromise = r == null ? void 0 : r.then(function(o) {
        return n._attributes = Object.assign({}, n._attributes, o), n.asyncAttributesPending = !1, o;
      }, function(o) {
        return m.debug("a resource's async attributes promise rejected: %s", o), n.asyncAttributesPending = !1, {};
      });
    }
    return e.empty = function() {
      return e.EMPTY;
    }, e.default = function() {
      var t;
      return new e((t = {}, t[gi] = Qc(), t[ge] = zt[ge], t[ve] = zt[ve], t[ye] = zt[ye], t));
    }, Object.defineProperty(e.prototype, "attributes", {
      get: function() {
        var t;
        return this.asyncAttributesPending && m.error("Accessing resource attributes before async attributes settled"), (t = this._attributes) !== null && t !== void 0 ? t : {};
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.waitForAsyncAttributes = function() {
      return Zc(this, void 0, void 0, function() {
        return el(this, function(t) {
          switch (t.label) {
            case 0:
              return this.asyncAttributesPending ? [4, this._asyncAttributesPromise] : [3, 2];
            case 1:
              t.sent(), t.label = 2;
            case 2:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, e.prototype.merge = function(t) {
      var r = this, n;
      if (!t)
        return this;
      var i = K(K({}, this._syncAttributes), (n = t._syncAttributes) !== null && n !== void 0 ? n : t.attributes);
      if (!this._asyncAttributesPromise && !t._asyncAttributesPromise)
        return new e(i);
      var o = Promise.all([
        this._asyncAttributesPromise,
        t._asyncAttributesPromise
      ]).then(function(a) {
        var s, u = tl(a, 2), c = u[0], l = u[1];
        return K(K(K(K({}, r._syncAttributes), c), (s = t._syncAttributes) !== null && s !== void 0 ? s : t.attributes), l);
      });
      return new e(i, o);
    }, e.EMPTY = new e({}), e;
  }()
), et = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, rl = (
  /** @class */
  function() {
    function e(t) {
      this._spanProcessors = t;
    }
    return e.prototype.forceFlush = function() {
      var t, r, n = [];
      try {
        for (var i = et(this._spanProcessors), o = i.next(); !o.done; o = i.next()) {
          var a = o.value;
          n.push(a.forceFlush());
        }
      } catch (s) {
        t = { error: s };
      } finally {
        try {
          o && !o.done && (r = i.return) && r.call(i);
        } finally {
          if (t) throw t.error;
        }
      }
      return new Promise(function(s) {
        Promise.all(n).then(function() {
          s();
        }).catch(function(u) {
          pt(u || new Error("MultiSpanProcessor: forceFlush failed")), s();
        });
      });
    }, e.prototype.onStart = function(t, r) {
      var n, i;
      try {
        for (var o = et(this._spanProcessors), a = o.next(); !a.done; a = o.next()) {
          var s = a.value;
          s.onStart(t, r);
        }
      } catch (u) {
        n = { error: u };
      } finally {
        try {
          a && !a.done && (i = o.return) && i.call(o);
        } finally {
          if (n) throw n.error;
        }
      }
    }, e.prototype.onEnd = function(t) {
      var r, n;
      try {
        for (var i = et(this._spanProcessors), o = i.next(); !o.done; o = i.next()) {
          var a = o.value;
          a.onEnd(t);
        }
      } catch (s) {
        r = { error: s };
      } finally {
        try {
          o && !o.done && (n = i.return) && n.call(i);
        } finally {
          if (r) throw r.error;
        }
      }
    }, e.prototype.shutdown = function() {
      var t, r, n = [];
      try {
        for (var i = et(this._spanProcessors), o = i.next(); !o.done; o = i.next()) {
          var a = o.value;
          n.push(a.shutdown());
        }
      } catch (s) {
        t = { error: s };
      } finally {
        try {
          o && !o.done && (r = i.return) && r.call(i);
        } finally {
          if (t) throw t.error;
        }
      }
      return new Promise(function(s, u) {
        Promise.all(n).then(function() {
          s();
        }, u);
      });
    }, e;
  }()
), nl = (
  /** @class */
  function() {
    function e() {
    }
    return e.prototype.onStart = function(t, r) {
    }, e.prototype.onEnd = function(t) {
    }, e.prototype.shutdown = function() {
      return Promise.resolve();
    }, e.prototype.forceFlush = function() {
      return Promise.resolve();
    }, e;
  }()
), oe;
(function(e) {
  e[e.resolved = 0] = "resolved", e[e.timeout = 1] = "timeout", e[e.error = 2] = "error", e[e.unresolved = 3] = "unresolved";
})(oe || (oe = {}));
var il = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = {});
      var r;
      this._registeredSpanProcessors = [], this._tracers = /* @__PURE__ */ new Map();
      var n = Pc({}, Hi(), Xc(t));
      this.resource = (r = n.resource) !== null && r !== void 0 ? r : Rn.empty(), this.resource = Rn.default().merge(this.resource), this._config = Object.assign({}, n, {
        resource: this.resource
      });
      var i = this._buildExporterFromEnv();
      if (i !== void 0) {
        var o = new Gi(i);
        this.activeSpanProcessor = o;
      } else
        this.activeSpanProcessor = new nl();
    }
    return e.prototype.getTracer = function(t, r, n) {
      var i = t + "@" + (r || "") + ":" + ((n == null ? void 0 : n.schemaUrl) || "");
      return this._tracers.has(i) || this._tracers.set(i, new Jc({ name: t, version: r, schemaUrl: n == null ? void 0 : n.schemaUrl }, this._config, this)), this._tracers.get(i);
    }, e.prototype.addSpanProcessor = function(t) {
      this._registeredSpanProcessors.length === 0 && this.activeSpanProcessor.shutdown().catch(function(r) {
        return m.error("Error while trying to shutdown current span processor", r);
      }), this._registeredSpanProcessors.push(t), this.activeSpanProcessor = new rl(this._registeredSpanProcessors);
    }, e.prototype.getActiveSpanProcessor = function() {
      return this.activeSpanProcessor;
    }, e.prototype.register = function(t) {
      t === void 0 && (t = {}), L.setGlobalTracerProvider(this), t.propagator === void 0 && (t.propagator = this._buildPropagatorFromEnv()), t.contextManager && A.setGlobalContextManager(t.contextManager), t.propagator && k.setGlobalPropagator(t.propagator);
    }, e.prototype.forceFlush = function() {
      var t = this._config.forceFlushTimeoutMillis, r = this._registeredSpanProcessors.map(function(n) {
        return new Promise(function(i) {
          var o, a = setTimeout(function() {
            i(new Error("Span processor did not completed within timeout period of " + t + " ms")), o = oe.timeout;
          }, t);
          n.forceFlush().then(function() {
            clearTimeout(a), o !== oe.timeout && (o = oe.resolved, i(o));
          }).catch(function(s) {
            clearTimeout(a), o = oe.error, i(s);
          });
        });
      });
      return new Promise(function(n, i) {
        Promise.all(r).then(function(o) {
          var a = o.filter(function(s) {
            return s !== oe.resolved;
          });
          a.length > 0 ? i(a) : n();
        }).catch(function(o) {
          return i([o]);
        });
      });
    }, e.prototype.shutdown = function() {
      return this.activeSpanProcessor.shutdown();
    }, e.prototype._getPropagator = function(t) {
      var r;
      return (r = this.constructor._registeredPropagators.get(t)) === null || r === void 0 ? void 0 : r();
    }, e.prototype._getSpanExporter = function(t) {
      var r;
      return (r = this.constructor._registeredExporters.get(t)) === null || r === void 0 ? void 0 : r();
    }, e.prototype._buildPropagatorFromEnv = function() {
      var t = this, r = Array.from(new Set(me().OTEL_PROPAGATORS)), n = r.map(function(o) {
        var a = t._getPropagator(o);
        return a || m.warn('Propagator "' + o + '" requested through environment variable is unavailable.'), a;
      }), i = n.reduce(function(o, a) {
        return a && o.push(a), o;
      }, []);
      if (i.length !== 0)
        return r.length === 1 ? i[0] : new tc({
          propagators: i
        });
    }, e.prototype._buildExporterFromEnv = function() {
      var t = me().OTEL_TRACES_EXPORTER;
      if (!(t === "none" || t === "")) {
        var r = this._getSpanExporter(t);
        return r || m.error('Exporter "' + t + '" requested through environment variable is unavailable.'), r;
      }
    }, e._registeredPropagators = /* @__PURE__ */ new Map([
      ["tracecontext", function() {
        return new vc();
      }],
      ["baggage", function() {
        return new Nu();
      }]
    ]), e._registeredExporters = /* @__PURE__ */ new Map(), e;
  }()
), ol = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, al = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, ji = (
  /** @class */
  function() {
    function e() {
      this._enabled = !1, this._currentContext = ne;
    }
    return e.prototype._bindFunction = function(t, r) {
      t === void 0 && (t = ne);
      var n = this, i = function() {
        for (var o = this, a = [], s = 0; s < arguments.length; s++)
          a[s] = arguments[s];
        return n.with(t, function() {
          return r.apply(o, a);
        });
      };
      return Object.defineProperty(i, "length", {
        enumerable: !1,
        configurable: !0,
        writable: !1,
        value: r.length
      }), i;
    }, e.prototype.active = function() {
      return this._currentContext;
    }, e.prototype.bind = function(t, r) {
      return t === void 0 && (t = this.active()), typeof r == "function" ? this._bindFunction(t, r) : r;
    }, e.prototype.disable = function() {
      return this._currentContext = ne, this._enabled = !1, this;
    }, e.prototype.enable = function() {
      return this._enabled ? this : (this._enabled = !0, this._currentContext = ne, this);
    }, e.prototype.with = function(t, r, n) {
      for (var i = [], o = 3; o < arguments.length; o++)
        i[o - 3] = arguments[o];
      var a = this._currentContext;
      this._currentContext = t || ne;
      try {
        return r.call.apply(r, al([n], ol(i), !1));
      } finally {
        this._currentContext = a;
      }
    }, e;
  }()
), sl = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), ul = (
  /** @class */
  function(e) {
    sl(t, e);
    function t(r) {
      r === void 0 && (r = {});
      var n = e.call(this, r) || this;
      if (r.contextManager)
        throw "contextManager should be defined in register method not in constructor";
      if (r.propagator)
        throw "propagator should be defined in register method not in constructor";
      return n;
    }
    return t.prototype.register = function(r) {
      r === void 0 && (r = {}), r.contextManager === void 0 && (r.contextManager = new ji()), r.contextManager && r.contextManager.enable(), e.prototype.register.call(this, r);
    }, t;
  }(il)
), y;
(function(e) {
  e.CONNECT_END = "connectEnd", e.CONNECT_START = "connectStart", e.DECODED_BODY_SIZE = "decodedBodySize", e.DOM_COMPLETE = "domComplete", e.DOM_CONTENT_LOADED_EVENT_END = "domContentLoadedEventEnd", e.DOM_CONTENT_LOADED_EVENT_START = "domContentLoadedEventStart", e.DOM_INTERACTIVE = "domInteractive", e.DOMAIN_LOOKUP_END = "domainLookupEnd", e.DOMAIN_LOOKUP_START = "domainLookupStart", e.ENCODED_BODY_SIZE = "encodedBodySize", e.FETCH_START = "fetchStart", e.LOAD_EVENT_END = "loadEventEnd", e.LOAD_EVENT_START = "loadEventStart", e.NAVIGATION_START = "navigationStart", e.REDIRECT_END = "redirectEnd", e.REDIRECT_START = "redirectStart", e.REQUEST_START = "requestStart", e.RESPONSE_END = "responseEnd", e.RESPONSE_START = "responseStart", e.SECURE_CONNECTION_START = "secureConnectionStart", e.UNLOAD_EVENT_END = "unloadEventEnd", e.UNLOAD_EVENT_START = "unloadEventStart";
})(y || (y = {}));
var Qt;
function cl() {
  return Qt || (Qt = document.createElement("a")), Qt;
}
function re(e, t) {
  return t in e;
}
function x(e, t, r, n) {
  var i = void 0, o = void 0;
  re(r, t) && typeof r[t] == "number" && (i = r[t]);
  var a = y.FETCH_START;
  if (re(r, a) && typeof r[a] == "number" && (o = r[a]), i !== void 0 && o !== void 0 && i >= o)
    return e.addEvent(t, i), e;
}
function Se(e, t) {
  x(e, y.FETCH_START, t), x(e, y.DOMAIN_LOOKUP_START, t), x(e, y.DOMAIN_LOOKUP_END, t), x(e, y.CONNECT_START, t), re(t, "name") && t.name.startsWith("https:") && x(e, y.SECURE_CONNECTION_START, t), x(e, y.CONNECT_END, t), x(e, y.REQUEST_START, t), x(e, y.RESPONSE_START, t), x(e, y.RESPONSE_END, t);
  var r = t[y.ENCODED_BODY_SIZE];
  r !== void 0 && e.setAttribute(ys, r);
  var n = t[y.DECODED_BODY_SIZE];
  n !== void 0 && r !== n && e.setAttribute(ms, n);
}
function ll(e) {
  return e.slice().sort(function(t, r) {
    var n = t[y.FETCH_START], i = r[y.FETCH_START];
    return n > i ? 1 : n < i ? -1 : 0;
  });
}
function Vi() {
  return typeof location != "undefined" ? location.origin : void 0;
}
function $i(e, t, r, n, i, o) {
  i === void 0 && (i = /* @__PURE__ */ new WeakSet());
  var a = W(e);
  e = a.toString();
  var s = dl(e, t, r, n, i, o);
  if (s.length === 0)
    return {
      mainRequest: void 0
    };
  if (s.length === 1)
    return {
      mainRequest: s[0]
    };
  var u = ll(s);
  if (a.origin !== Vi() && u.length > 1) {
    var c = u[0], l = fl(u, c[y.RESPONSE_END], r), f = c[y.RESPONSE_END], d = l[y.FETCH_START];
    return d < f && (l = c, c = void 0), {
      corsPreFlightRequest: c,
      mainRequest: l
    };
  } else
    return {
      mainRequest: s[0]
    };
}
function fl(e, t, r) {
  for (var n = ee(r), i = ee(Ue(t)), o = e[1], a, s = e.length, u = 1; u < s; u++) {
    var c = e[u], l = ee(Ue(c[y.FETCH_START])), f = ee(Ue(c[y.RESPONSE_END])), d = n - f;
    l >= i && (!a || d < a) && (a = d, o = c);
  }
  return o;
}
function dl(e, t, r, n, i, o) {
  var a = ee(t), s = ee(r), u = n.filter(function(c) {
    var l = ee(Ue(c[y.FETCH_START])), f = ee(Ue(c[y.RESPONSE_END]));
    return c.initiatorType.toLowerCase() === (o || "xmlhttprequest") && c.name === e && l >= a && f <= s;
  });
  return u.length > 0 && (u = u.filter(function(c) {
    return !i.has(c);
  })), u;
}
function W(e) {
  if (typeof URL == "function")
    return new URL(e, typeof document != "undefined" ? document.baseURI : typeof location != "undefined" ? location.href : void 0);
  var t = cl();
  return t.href = e, t;
}
function Xi(e, t) {
  if (e.nodeType === Node.DOCUMENT_NODE)
    return "/";
  var r = hl(e, t);
  if (t && r.indexOf("@id") > 0)
    return r;
  var n = "";
  return e.parentNode && (n += Xi(e.parentNode, !1)), n += r, n;
}
function pl(e) {
  if (!e.parentNode)
    return 0;
  var t = [e.nodeType];
  e.nodeType === Node.CDATA_SECTION_NODE && t.push(Node.TEXT_NODE);
  var r = Array.from(e.parentNode.childNodes);
  return r = r.filter(function(n) {
    var i = n.localName;
    return t.indexOf(n.nodeType) >= 0 && i === e.localName;
  }), r.length >= 1 ? r.indexOf(e) + 1 : 0;
}
function hl(e, t) {
  var r = e.nodeType, n = pl(e), i = "";
  if (r === Node.ELEMENT_NODE) {
    var o = e.getAttribute("id");
    if (t && o)
      return '//*[@id="' + o + '"]';
    i = e.localName;
  } else if (r === Node.TEXT_NODE || r === Node.CDATA_SECTION_NODE)
    i = "text()";
  else if (r === Node.COMMENT_NODE)
    i = "comment()";
  else
    return "";
  return i && n > 1 ? "/" + i + "[" + n + "]" : "/" + i;
}
function qi(e, t) {
  var r = t || [];
  (typeof r == "string" || r instanceof RegExp) && (r = [r]);
  var n = W(e);
  return n.origin === Vi() ? !0 : r.some(function(i) {
    return xc(e, i);
  });
}
var Be;
(function(e) {
  e.DOCUMENT_LOAD = "documentLoad", e.DOCUMENT_FETCH = "documentFetch", e.RESOURCE_FETCH = "resourceFetch";
})(Be || (Be = {}));
var _l = "0.40.0", El = "@opentelemetry/instrumentation-document-load", Tt;
(function(e) {
  e.FIRST_PAINT = "firstPaint", e.FIRST_CONTENTFUL_PAINT = "firstContentfulPaint";
})(Tt || (Tt = {}));
var Tl = function() {
  var e, t, r = {}, n = (t = (e = ue).getEntriesByType) === null || t === void 0 ? void 0 : t.call(e, "navigation")[0];
  if (n) {
    var i = Object.values(y);
    i.forEach(function(s) {
      if (re(n, s)) {
        var u = n[s];
        typeof u == "number" && (r[s] = u);
      }
    });
  } else {
    var o = ue, a = o.timing;
    if (a) {
      var i = Object.values(y);
      i.forEach(function(u) {
        if (re(a, u)) {
          var c = a[u];
          typeof c == "number" && (r[u] = c);
        }
      });
    }
  }
  return r;
}, An = {
  "first-paint": Tt.FIRST_PAINT,
  "first-contentful-paint": Tt.FIRST_CONTENTFUL_PAINT
}, vl = function(e) {
  var t, r, n = (r = (t = ue).getEntriesByType) === null || r === void 0 ? void 0 : r.call(t, "paint");
  n && n.forEach(function(i) {
    var o = i.name, a = i.startTime;
    re(An, o) && e.addEvent(An[o], a);
  });
}, gl = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), yl = (
  /** @class */
  function(e) {
    gl(t, e);
    function t(r) {
      r === void 0 && (r = {});
      var n = e.call(this, El, _l, r) || this;
      return n.component = "document-load", n.version = "1", n.moduleName = n.component, n;
    }
    return t.prototype.init = function() {
    }, t.prototype._onDocumentLoaded = function() {
      var r = this;
      window.setTimeout(function() {
        r._collectPerformance();
      });
    }, t.prototype._addResourcesSpans = function(r) {
      var n = this, i, o, a = (o = (i = ue).getEntriesByType) === null || o === void 0 ? void 0 : o.call(i, "resource");
      a && a.forEach(function(s) {
        n._initResourceSpan(s, r);
      });
    }, t.prototype._collectPerformance = function() {
      var r = this, n = Array.from(document.getElementsByTagName("meta")).find(function(a) {
        return a.getAttribute("name") === nt;
      }), i = Tl(), o = n && n.content || "";
      A.with(k.extract(ne, { traceparent: o }), function() {
        var a, s = r._startSpan(Be.DOCUMENT_LOAD, y.FETCH_START, i);
        s && (A.with(L.setSpan(A.active(), s), function() {
          var u = r._startSpan(Be.DOCUMENT_FETCH, y.FETCH_START, i);
          u && (u.setAttribute(ke, location.href), A.with(L.setSpan(A.active(), u), function() {
            var c;
            r.getConfig().ignoreNetworkEvents || Se(u, i), r._addCustomAttributesOnSpan(u, (c = r.getConfig().applyCustomAttributesOnSpan) === null || c === void 0 ? void 0 : c.documentFetch), r._endSpan(u, y.RESPONSE_END, i);
          }));
        }), s.setAttribute(ke, location.href), s.setAttribute(jr, navigator.userAgent), r._addResourcesSpans(s), r.getConfig().ignoreNetworkEvents || (x(s, y.FETCH_START, i), x(s, y.UNLOAD_EVENT_START, i), x(s, y.UNLOAD_EVENT_END, i), x(s, y.DOM_INTERACTIVE, i), x(s, y.DOM_CONTENT_LOADED_EVENT_START, i), x(s, y.DOM_CONTENT_LOADED_EVENT_END, i), x(s, y.DOM_COMPLETE, i), x(s, y.LOAD_EVENT_START, i), x(s, y.LOAD_EVENT_END, i)), r.getConfig().ignorePerformancePaintEvents || vl(s), r._addCustomAttributesOnSpan(s, (a = r.getConfig().applyCustomAttributesOnSpan) === null || a === void 0 ? void 0 : a.documentLoad), r._endSpan(s, y.LOAD_EVENT_END, i));
      });
    }, t.prototype._endSpan = function(r, n, i) {
      r && (re(i, n) ? r.end(i[n]) : r.end());
    }, t.prototype._initResourceSpan = function(r, n) {
      var i, o = this._startSpan(Be.RESOURCE_FETCH, y.FETCH_START, r, n);
      o && (o.setAttribute(ke, r.name), this.getConfig().ignoreNetworkEvents || Se(o, r), this._addCustomAttributesOnResourceSpan(o, r, (i = this.getConfig().applyCustomAttributesOnSpan) === null || i === void 0 ? void 0 : i.resourceFetch), this._endSpan(o, y.RESPONSE_END, r));
    }, t.prototype._startSpan = function(r, n, i, o) {
      if (re(i, n) && typeof i[n] == "number") {
        var a = this.tracer.startSpan(r, {
          startTime: i[n]
        }, o ? L.setSpan(A.active(), o) : void 0);
        return a;
      }
    }, t.prototype._waitForPageLoad = function() {
      window.document.readyState === "complete" ? this._onDocumentLoaded() : (this._onDocumentLoaded = this._onDocumentLoaded.bind(this), window.addEventListener("load", this._onDocumentLoaded));
    }, t.prototype._addCustomAttributesOnSpan = function(r, n) {
      var i = this;
      n && dt(function() {
        return n(r);
      }, function(o) {
        o && i._diag.error("addCustomAttributesOnSpan", o);
      }, !0);
    }, t.prototype._addCustomAttributesOnResourceSpan = function(r, n, i) {
      var o = this;
      i && dt(function() {
        return i(r, n);
      }, function(a) {
        a && o._diag.error("addCustomAttributesOnResourceSpan", a);
      }, !0);
    }, t.prototype.enable = function() {
      window.removeEventListener("load", this._onDocumentLoaded), this._waitForPageLoad();
    }, t.prototype.disable = function() {
      window.removeEventListener("load", this._onDocumentLoaded);
    }, t;
  }(Rt)
), Zt = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof global == "object" ? global : {}, gr = performance, ml = 9, Ol = 6, Sl = Math.pow(10, Ol), Nn = Math.pow(10, ml);
function yr(e) {
  var t = e / 1e3, r = Math.trunc(t), n = Math.round(e % 1e3 * Sl);
  return [r, n];
}
function Rl() {
  var e = gr.timeOrigin;
  if (typeof e != "number") {
    var t = gr;
    e = t.timing && t.timing.fetchStart;
  }
  return e;
}
function Ln(e) {
  var t = yr(Rl()), r = yr(gr.now());
  return Al(t, r);
}
function Al(e, t) {
  var r = [e[0] + t[0], e[1] + t[1]];
  return r[1] >= Nn && (r[1] -= Nn, r[0] += 1), r;
}
var Nl = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function Ll(e, t) {
  return typeof t == "string" ? e === t : !!e.match(t);
}
function bl(e, t) {
  var r, n;
  if (!t)
    return !1;
  try {
    for (var i = Nl(t), o = i.next(); !o.done; o = i.next()) {
      var a = o.value;
      if (Ll(e, a))
        return !0;
    }
  } catch (s) {
    r = { error: s };
  } finally {
    try {
      o && !o.done && (n = i.return) && n.call(i);
    } finally {
      if (r) throw r.error;
    }
  }
  return !1;
}
var vt;
(function(e) {
  e.COMPONENT = "component", e.HTTP_ERROR_NAME = "http.error_name", e.HTTP_STATUS_TEXT = "http.status_text";
})(vt || (vt = {}));
var bn = "0.53.0", wl = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), er, Il = 300, wn = typeof process == "object" && ((er = process.release) === null || er === void 0 ? void 0 : er.name) === "node", Pl = (
  /** @class */
  function(e) {
    wl(t, e);
    function t(r) {
      r === void 0 && (r = {});
      var n = e.call(this, "@opentelemetry/instrumentation-fetch", bn, r) || this;
      return n.component = "fetch", n.version = bn, n.moduleName = n.component, n._usedResources = /* @__PURE__ */ new WeakSet(), n._tasksCount = 0, n;
    }
    return t.prototype.init = function() {
    }, t.prototype._addChildSpan = function(r, n) {
      var i = this.tracer.startSpan("CORS Preflight", {
        startTime: n[y.FETCH_START]
      }, L.setSpan(A.active(), r));
      this.getConfig().ignoreNetworkEvents || Se(i, n), i.end(n[y.RESPONSE_END]);
    }, t.prototype._addFinalSpanAttributes = function(r, n) {
      var i = W(n.url);
      r.setAttribute(Ti, n.status), n.statusText != null && r.setAttribute(vt.HTTP_STATUS_TEXT, n.statusText), r.setAttribute(_i, i.host), r.setAttribute(Ei, i.protocol.replace(":", "")), typeof navigator != "undefined" && r.setAttribute(jr, navigator.userAgent);
    }, t.prototype._addHeaders = function(r, n) {
      if (!qi(n, this.getConfig().propagateTraceHeaderCorsUrls)) {
        var i = {};
        k.inject(A.active(), i), Object.keys(i).length > 0 && this._diag.debug("headers inject skipped due to CORS policy");
        return;
      }
      if (r instanceof Request)
        k.inject(A.active(), r.headers, {
          set: function(o, a, s) {
            return o.set(a, typeof s == "string" ? s : String(s));
          }
        });
      else if (r.headers instanceof Headers)
        k.inject(A.active(), r.headers, {
          set: function(o, a, s) {
            return o.set(a, typeof s == "string" ? s : String(s));
          }
        });
      else if (r.headers instanceof Map)
        k.inject(A.active(), r.headers, {
          set: function(o, a, s) {
            return o.set(a, typeof s == "string" ? s : String(s));
          }
        });
      else {
        var i = {};
        k.inject(A.active(), i), r.headers = Object.assign({}, i, r.headers || {});
      }
    }, t.prototype._clearResources = function() {
      this._tasksCount === 0 && this.getConfig().clearTimingResources && (performance.clearResourceTimings(), this._usedResources = /* @__PURE__ */ new WeakSet());
    }, t.prototype._createSpan = function(r, n) {
      var i;
      if (n === void 0 && (n = {}), bl(r, this.getConfig().ignoreUrls)) {
        this._diag.debug("ignoring span as url matches ignored url");
        return;
      }
      var o = (n.method || "GET").toUpperCase(), a = "HTTP " + o;
      return this.tracer.startSpan(a, {
        kind: je.CLIENT,
        attributes: (i = {}, i[vt.COMPONENT] = this.moduleName, i[hi] = o, i[ke] = r, i)
      });
    }, t.prototype._findResourceAndAddNetworkEvents = function(r, n, i) {
      var o = n.entries;
      if (!o.length) {
        if (!performance.getEntriesByType)
          return;
        o = performance.getEntriesByType("resource");
      }
      var a = $i(n.spanUrl, n.startTime, i, o, this._usedResources, "fetch");
      if (a.mainRequest) {
        var s = a.mainRequest;
        this._markResourceAsUsed(s);
        var u = a.corsPreFlightRequest;
        u && (this._addChildSpan(r, u), this._markResourceAsUsed(u)), this.getConfig().ignoreNetworkEvents || Se(r, s);
      }
    }, t.prototype._markResourceAsUsed = function(r) {
      this._usedResources.add(r);
    }, t.prototype._endSpan = function(r, n, i) {
      var o = this, a = yr(Date.now()), s = Ln();
      this._addFinalSpanAttributes(r, i), setTimeout(function() {
        var u;
        (u = n.observer) === null || u === void 0 || u.disconnect(), o._findResourceAndAddNetworkEvents(r, n, s), o._tasksCount--, o._clearResources(), r.end(a);
      }, Il);
    }, t.prototype._patchConstructor = function() {
      var r = this;
      return function(n) {
        var i = r;
        return function() {
          for (var a = [], s = 0; s < arguments.length; s++)
            a[s] = arguments[s];
          var u = this, c = W(a[0] instanceof Request ? a[0].url : String(a[0])).href, l = a[0] instanceof Request ? a[0] : a[1] || {}, f = i._createSpan(c, l);
          if (!f)
            return n.apply(this, a);
          var d = i._prepareSpanData(c);
          function h(T, S) {
            i._applyAttributesAfterFetch(T, l, S), i._endSpan(T, d, {
              status: S.status || 0,
              statusText: S.message,
              url: c
            });
          }
          function E(T, S) {
            i._applyAttributesAfterFetch(T, l, S), S.status >= 200 && S.status < 400 ? i._endSpan(T, d, S) : i._endSpan(T, d, {
              status: S.status,
              statusText: S.statusText,
              url: c
            });
          }
          function p(T, S, b) {
            try {
              var I = b.clone(), H = b.clone(), B = I.body;
              if (B) {
                var It = B.getReader(), We = function() {
                  It.read().then(function(Ne) {
                    var Ro = Ne.done;
                    Ro ? E(T, H) : We();
                  }, function(Ne) {
                    h(T, Ne);
                  });
                };
                We();
              } else
                E(T, b);
            } finally {
              S(b);
            }
          }
          function v(T, S, b) {
            try {
              h(T, b);
            } finally {
              S(b);
            }
          }
          return new Promise(function(T, S) {
            return A.with(L.setSpan(A.active(), f), function() {
              return i._addHeaders(l, c), i._tasksCount++, n.apply(u, l instanceof Request ? [l] : [c, l]).then(p.bind(u, f, T), v.bind(u, f, S));
            });
          });
        };
      };
    }, t.prototype._applyAttributesAfterFetch = function(r, n, i) {
      var o = this, a = this.getConfig().applyCustomAttributesOnSpan;
      a && dt(function() {
        return a(r, n, i);
      }, function(s) {
        s && o._diag.error("applyCustomAttributesOnSpan", s);
      }, !0);
    }, t.prototype._prepareSpanData = function(r) {
      var n = Ln(), i = [];
      if (typeof PerformanceObserver != "function")
        return { entries: i, startTime: n, spanUrl: r };
      var o = new PerformanceObserver(function(a) {
        var s = a.getEntries();
        s.forEach(function(u) {
          u.initiatorType === "fetch" && u.name === r && i.push(u);
        });
      });
      return o.observe({
        entryTypes: ["resource"]
      }), { entries: i, observer: o, startTime: n, spanUrl: r };
    }, t.prototype.enable = function() {
      if (wn) {
        this._diag.warn("this instrumentation is intended for web usage only, it does not instrument Node.js's fetch()");
        return;
      }
      C(fetch) && (this._unwrap(Zt, "fetch"), this._diag.debug("removing previous patch for constructor")), this._wrap(Zt, "fetch", this._patchConstructor());
    }, t.prototype.disable = function() {
      wn || (this._unwrap(Zt, "fetch"), this._usedResources = /* @__PURE__ */ new WeakSet());
    }, t;
  }(Rt)
), Ve = performance, Cl = 9, xl = 6, Dl = Math.pow(10, xl), In = Math.pow(10, Cl);
function Pn(e) {
  var t = e / 1e3, r = Math.trunc(t), n = Math.round(e % 1e3 * Dl);
  return [r, n];
}
function Ml() {
  var e = Ve.timeOrigin;
  if (typeof e != "number") {
    var t = Ve;
    e = t.timing && t.timing.fetchStart;
  }
  return e;
}
function Cn(e) {
  var t = Pn(Ml()), r = Pn(Ve.now());
  return kl(t, r);
}
function kl(e, t) {
  var r = [e[0] + t[0], e[1] + t[1]];
  return r[1] >= In && (r[1] -= In, r[0] += 1), r;
}
var Ul = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function Bl(e, t) {
  return typeof t == "string" ? e === t : !!e.match(t);
}
function Hl(e, t) {
  var r, n;
  if (!t)
    return !1;
  try {
    for (var i = Ul(t), o = i.next(); !o.done; o = i.next()) {
      var a = o.value;
      if (Bl(e, a))
        return !0;
    }
  } catch (s) {
    r = { error: s };
  } finally {
    try {
      o && !o.done && (n = i.return) && n.call(i);
    } finally {
      if (r) throw r.error;
    }
  }
  return !1;
}
var Y;
(function(e) {
  e.METHOD_OPEN = "open", e.METHOD_SEND = "send", e.EVENT_ABORT = "abort", e.EVENT_ERROR = "error", e.EVENT_LOAD = "loaded", e.EVENT_TIMEOUT = "timeout";
})(Y || (Y = {}));
var xn = "0.53.0", mr;
(function(e) {
  e.HTTP_STATUS_TEXT = "http.status_text";
})(mr || (mr = {}));
var Fl = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Gl = 300, jl = (
  /** @class */
  function(e) {
    Fl(t, e);
    function t(r) {
      r === void 0 && (r = {});
      var n = e.call(this, "@opentelemetry/instrumentation-xml-http-request", xn, r) || this;
      return n.component = "xml-http-request", n.version = xn, n.moduleName = n.component, n._tasksCount = 0, n._xhrMem = /* @__PURE__ */ new WeakMap(), n._usedResources = /* @__PURE__ */ new WeakSet(), n;
    }
    return t.prototype.init = function() {
    }, t.prototype._addHeaders = function(r, n) {
      var i = W(n).href;
      if (!qi(i, this.getConfig().propagateTraceHeaderCorsUrls)) {
        var o = {};
        k.inject(A.active(), o), Object.keys(o).length > 0 && this._diag.debug("headers inject skipped due to CORS policy");
        return;
      }
      var a = {};
      k.inject(A.active(), a), Object.keys(a).forEach(function(s) {
        r.setRequestHeader(s, String(a[s]));
      });
    }, t.prototype._addChildSpan = function(r, n) {
      var i = this;
      A.with(L.setSpan(A.active(), r), function() {
        var o = i.tracer.startSpan("CORS Preflight", {
          startTime: n[y.FETCH_START]
        });
        i.getConfig().ignoreNetworkEvents || Se(o, n), o.end(n[y.RESPONSE_END]);
      });
    }, t.prototype._addFinalSpanAttributes = function(r, n, i) {
      if (typeof i == "string") {
        var o = W(i);
        n.status !== void 0 && r.setAttribute(Ti, n.status), n.statusText !== void 0 && r.setAttribute(mr.HTTP_STATUS_TEXT, n.statusText), r.setAttribute(_i, o.host), r.setAttribute(Ei, o.protocol.replace(":", "")), r.setAttribute(jr, navigator.userAgent);
      }
    }, t.prototype._applyAttributesAfterXHR = function(r, n) {
      var i = this, o = this.getConfig().applyCustomAttributesOnSpan;
      typeof o == "function" && dt(function() {
        return o(r, n);
      }, function(a) {
        a && i._diag.error("applyCustomAttributesOnSpan", a);
      }, !0);
    }, t.prototype._addResourceObserver = function(r, n) {
      var i = this._xhrMem.get(r);
      !i || typeof PerformanceObserver != "function" || typeof PerformanceResourceTiming != "function" || (i.createdResources = {
        observer: new PerformanceObserver(function(o) {
          var a = o.getEntries(), s = W(n);
          a.forEach(function(u) {
            u.initiatorType === "xmlhttprequest" && u.name === s.href && i.createdResources && i.createdResources.entries.push(u);
          });
        }),
        entries: []
      }, i.createdResources.observer.observe({
        entryTypes: ["resource"]
      }));
    }, t.prototype._clearResources = function() {
      this._tasksCount === 0 && this.getConfig().clearTimingResources && (Ve.clearResourceTimings(), this._xhrMem = /* @__PURE__ */ new WeakMap(), this._usedResources = /* @__PURE__ */ new WeakSet());
    }, t.prototype._findResourceAndAddNetworkEvents = function(r, n, i, o, a) {
      if (!(!i || !o || !a || !r.createdResources)) {
        var s = r.createdResources.entries;
        (!s || !s.length) && (s = Ve.getEntriesByType("resource"));
        var u = $i(W(i).href, o, a, s, this._usedResources);
        if (u.mainRequest) {
          var c = u.mainRequest;
          this._markResourceAsUsed(c);
          var l = u.corsPreFlightRequest;
          l && (this._addChildSpan(n, l), this._markResourceAsUsed(l)), this.getConfig().ignoreNetworkEvents || Se(n, c);
        }
      }
    }, t.prototype._cleanPreviousSpanInformation = function(r) {
      var n = this._xhrMem.get(r);
      if (n) {
        var i = n.callbackToRemoveEvents;
        i && i(), this._xhrMem.delete(r);
      }
    }, t.prototype._createSpan = function(r, n, i) {
      var o;
      if (Hl(n, this.getConfig().ignoreUrls)) {
        this._diag.debug("ignoring span as url matches ignored url");
        return;
      }
      var a = i.toUpperCase(), s = this.tracer.startSpan(a, {
        kind: je.CLIENT,
        attributes: (o = {}, o[hi] = i, o[ke] = W(n).toString(), o)
      });
      return s.addEvent(Y.METHOD_OPEN), this._cleanPreviousSpanInformation(r), this._xhrMem.set(r, {
        span: s,
        spanUrl: n
      }), s;
    }, t.prototype._markResourceAsUsed = function(r) {
      this._usedResources.add(r);
    }, t.prototype._patchOpen = function() {
      var r = this;
      return function(n) {
        var i = r;
        return function() {
          for (var a = [], s = 0; s < arguments.length; s++)
            a[s] = arguments[s];
          var u = a[0], c = a[1];
          return i._createSpan(this, c, u), n.apply(this, a);
        };
      };
    }, t.prototype._patchSend = function() {
      var r = this;
      function n(l, f, d, h) {
        var E = f.callbackToRemoveEvents;
        typeof E == "function" && E();
        var p = f.span, v = f.spanUrl, T = f.sendStartTime;
        p && (r._findResourceAndAddNetworkEvents(f, p, v, T, d), p.addEvent(l, h), r._addFinalSpanAttributes(p, f, v), p.end(h), r._tasksCount--), r._clearResources();
      }
      function i(l, f) {
        var d = r._xhrMem.get(f);
        if (d) {
          d.status = f.status, d.statusText = f.statusText, r._xhrMem.delete(f), d.span && r._applyAttributesAfterXHR(d.span, f);
          var h = Cn(), E = Date.now();
          setTimeout(function() {
            n(l, d, h, E);
          }, Gl);
        }
      }
      function o() {
        i(Y.EVENT_ERROR, this);
      }
      function a() {
        i(Y.EVENT_ABORT, this);
      }
      function s() {
        i(Y.EVENT_TIMEOUT, this);
      }
      function u() {
        this.status < 299 ? i(Y.EVENT_LOAD, this) : i(Y.EVENT_ERROR, this);
      }
      function c(l) {
        l.removeEventListener("abort", a), l.removeEventListener("error", o), l.removeEventListener("load", u), l.removeEventListener("timeout", s);
        var f = r._xhrMem.get(l);
        f && (f.callbackToRemoveEvents = void 0);
      }
      return function(l) {
        return function() {
          for (var d = this, h = [], E = 0; E < arguments.length; E++)
            h[E] = arguments[E];
          var p = r._xhrMem.get(this);
          if (!p)
            return l.apply(this, h);
          var v = p.span, T = p.spanUrl;
          return v && T && A.with(L.setSpan(A.active(), v), function() {
            r._tasksCount++, p.sendStartTime = Cn(), v.addEvent(Y.METHOD_SEND), d.addEventListener("abort", a), d.addEventListener("error", o), d.addEventListener("load", u), d.addEventListener("timeout", s), p.callbackToRemoveEvents = function() {
              c(d), p.createdResources && p.createdResources.observer.disconnect();
            }, r._addHeaders(d, T), r._addResourceObserver(d, T);
          }), l.apply(this, h);
        };
      };
    }, t.prototype.enable = function() {
      this._diag.debug("applying patch to", this.moduleName, this.version), C(XMLHttpRequest.prototype.open) && (this._unwrap(XMLHttpRequest.prototype, "open"), this._diag.debug("removing previous patch from method open")), C(XMLHttpRequest.prototype.send) && (this._unwrap(XMLHttpRequest.prototype, "send"), this._diag.debug("removing previous patch from method send")), this._wrap(XMLHttpRequest.prototype, "open", this._patchOpen()), this._wrap(XMLHttpRequest.prototype, "send", this._patchSend());
    }, t.prototype.disable = function() {
      this._diag.debug("removing patch from", this.moduleName, this.version), this._unwrap(XMLHttpRequest.prototype, "open"), this._unwrap(XMLHttpRequest.prototype, "send"), this._tasksCount = 0, this._xhrMem = /* @__PURE__ */ new WeakMap(), this._usedResources = /* @__PURE__ */ new WeakSet();
    }, t;
  }(Rt)
);
function Vl() {
  return "unknown_service";
}
var J = function() {
  return J = Object.assign || function(e) {
    for (var t, r = 1, n = arguments.length; r < n; r++) {
      t = arguments[r];
      for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
    }
    return e;
  }, J.apply(this, arguments);
}, $l = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function s(l) {
      try {
        c(n.next(l));
      } catch (f) {
        a(f);
      }
    }
    function u(l) {
      try {
        c(n.throw(l));
      } catch (f) {
        a(f);
      }
    }
    function c(l) {
      l.done ? o(l.value) : i(l.value).then(s, u);
    }
    c((n = n.apply(e, t || [])).next());
  });
}, Xl = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function s(c) {
    return function(l) {
      return u([c, l]);
    };
  }
  function u(c) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = c[0] & 2 ? i.return : c[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, c[1])).done) return o;
      switch (i = 0, o && (c = [c[0] & 2, o.value]), c[0]) {
        case 0:
        case 1:
          o = c;
          break;
        case 4:
          return r.label++, { value: c[1], done: !1 };
        case 5:
          r.label++, i = c[1], c = [0];
          continue;
        case 7:
          c = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (c[0] === 6 || c[0] === 2)) {
            r = 0;
            continue;
          }
          if (c[0] === 3 && (!o || c[1] > o[0] && c[1] < o[3])) {
            r.label = c[1];
            break;
          }
          if (c[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = c;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(c);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      c = t.call(e, r);
    } catch (l) {
      c = [6, l], i = 0;
    } finally {
      n = o = 0;
    }
    if (c[0] & 5) throw c[1];
    return { value: c[0] ? c[1] : void 0, done: !0 };
  }
}, ql = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, zl = (
  /** @class */
  function() {
    function e(t, r) {
      var n = this, i;
      this._attributes = t, this.asyncAttributesPending = r != null, this._syncAttributes = (i = this._attributes) !== null && i !== void 0 ? i : {}, this._asyncAttributesPromise = r == null ? void 0 : r.then(function(o) {
        return n._attributes = Object.assign({}, n._attributes, o), n.asyncAttributesPending = !1, o;
      }, function(o) {
        return m.debug("a resource's async attributes promise rejected: %s", o), n.asyncAttributesPending = !1, {};
      });
    }
    return e.empty = function() {
      return e.EMPTY;
    }, e.default = function() {
      var t;
      return new e((t = {}, t[gi] = Vl(), t[ge] = $t[ge], t[ve] = $t[ve], t[ye] = $t[ye], t));
    }, Object.defineProperty(e.prototype, "attributes", {
      get: function() {
        var t;
        return this.asyncAttributesPending && m.error("Accessing resource attributes before async attributes settled"), (t = this._attributes) !== null && t !== void 0 ? t : {};
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.waitForAsyncAttributes = function() {
      return $l(this, void 0, void 0, function() {
        return Xl(this, function(t) {
          switch (t.label) {
            case 0:
              return this.asyncAttributesPending ? [4, this._asyncAttributesPromise] : [3, 2];
            case 1:
              t.sent(), t.label = 2;
            case 2:
              return [
                2
                /*return*/
              ];
          }
        });
      });
    }, e.prototype.merge = function(t) {
      var r = this, n;
      if (!t)
        return this;
      var i = J(J({}, this._syncAttributes), (n = t._syncAttributes) !== null && n !== void 0 ? n : t.attributes);
      if (!this._asyncAttributesPromise && !t._asyncAttributesPromise)
        return new e(i);
      var o = Promise.all([
        this._asyncAttributesPromise,
        t._asyncAttributesPromise
      ]).then(function(a) {
        var s, u = ql(a, 2), c = u[0], l = u[1];
        return J(J(J(J({}, r._syncAttributes), c), (s = t._syncAttributes) !== null && s !== void 0 ? s : t.attributes), l);
      });
      return new e(i, o);
    }, e.EMPTY = new e({}), e;
  }()
);
function tr(e, t) {
  if (!!!e)
    throw new Error(t);
}
function Yl(e) {
  return typeof e == "object" && e !== null;
}
function Wl(e, t) {
  if (!!!e)
    throw new Error(
      "Unexpected invariant triggered."
    );
}
const Kl = /\r\n|[\n\r]/g;
function Or(e, t) {
  let r = 0, n = 1;
  for (const i of e.body.matchAll(Kl)) {
    if (typeof i.index == "number" || Wl(!1), i.index >= t)
      break;
    r = i.index + i[0].length, n += 1;
  }
  return {
    line: n,
    column: t + 1 - r
  };
}
function Jl(e) {
  return zi(
    e.source,
    Or(e.source, e.start)
  );
}
function zi(e, t) {
  const r = e.locationOffset.column - 1, n = "".padStart(r) + e.body, i = t.line - 1, o = e.locationOffset.line - 1, a = t.line + o, s = t.line === 1 ? r : 0, u = t.column + s, c = `${e.name}:${a}:${u}
`, l = n.split(/\r\n|[\n\r]/g), f = l[i];
  if (f.length > 120) {
    const d = Math.floor(u / 80), h = u % 80, E = [];
    for (let p = 0; p < f.length; p += 80)
      E.push(f.slice(p, p + 80));
    return c + Dn([
      [`${a} |`, E[0]],
      ...E.slice(1, d + 1).map((p) => ["|", p]),
      ["|", "^".padStart(h)],
      ["|", E[d + 1]]
    ]);
  }
  return c + Dn([
    // Lines specified like this: ["prefix", "string"],
    [`${a - 1} |`, l[i - 1]],
    [`${a} |`, f],
    ["|", "^".padStart(u)],
    [`${a + 1} |`, l[i + 1]]
  ]);
}
function Dn(e) {
  const t = e.filter(([n, i]) => i !== void 0), r = Math.max(...t.map(([n]) => n.length));
  return t.map(([n, i]) => n.padStart(r) + (i ? " " + i : "")).join(`
`);
}
function Ql(e) {
  const t = e[0];
  return t == null || "kind" in t || "length" in t ? {
    nodes: t,
    source: e[1],
    positions: e[2],
    path: e[3],
    originalError: e[4],
    extensions: e[5]
  } : t;
}
class qr extends Error {
  /**
   * An array of `{ line, column }` locations within the source GraphQL document
   * which correspond to this error.
   *
   * Errors during validation often contain multiple locations, for example to
   * point out two things with the same name. Errors during execution include a
   * single location, the field which produced the error.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */
  /**
   * An array describing the JSON-path into the execution response which
   * corresponds to this error. Only included for errors during execution.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */
  /**
   * An array of GraphQL AST Nodes corresponding to this error.
   */
  /**
   * The source GraphQL document for the first location of this error.
   *
   * Note that if this Error represents more than one node, the source may not
   * represent nodes after the first node.
   */
  /**
   * An array of character offsets within the source GraphQL document
   * which correspond to this error.
   */
  /**
   * The original error thrown from a field resolver during execution.
   */
  /**
   * Extension fields to add to the formatted error.
   */
  /**
   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.
   */
  constructor(t, ...r) {
    var n, i, o;
    const { nodes: a, source: s, positions: u, path: c, originalError: l, extensions: f } = Ql(r);
    super(t), this.name = "GraphQLError", this.path = c != null ? c : void 0, this.originalError = l != null ? l : void 0, this.nodes = Mn(
      Array.isArray(a) ? a : a ? [a] : void 0
    );
    const d = Mn(
      (n = this.nodes) === null || n === void 0 ? void 0 : n.map((E) => E.loc).filter((E) => E != null)
    );
    this.source = s != null ? s : d == null || (i = d[0]) === null || i === void 0 ? void 0 : i.source, this.positions = u != null ? u : d == null ? void 0 : d.map((E) => E.start), this.locations = u && s ? u.map((E) => Or(s, E)) : d == null ? void 0 : d.map((E) => Or(E.source, E.start));
    const h = Yl(
      l == null ? void 0 : l.extensions
    ) ? l == null ? void 0 : l.extensions : void 0;
    this.extensions = (o = f != null ? f : h) !== null && o !== void 0 ? o : /* @__PURE__ */ Object.create(null), Object.defineProperties(this, {
      message: {
        writable: !0,
        enumerable: !0
      },
      name: {
        enumerable: !1
      },
      nodes: {
        enumerable: !1
      },
      source: {
        enumerable: !1
      },
      positions: {
        enumerable: !1
      },
      originalError: {
        enumerable: !1
      }
    }), l != null && l.stack ? Object.defineProperty(this, "stack", {
      value: l.stack,
      writable: !0,
      configurable: !0
    }) : Error.captureStackTrace ? Error.captureStackTrace(this, qr) : Object.defineProperty(this, "stack", {
      value: Error().stack,
      writable: !0,
      configurable: !0
    });
  }
  get [Symbol.toStringTag]() {
    return "GraphQLError";
  }
  toString() {
    let t = this.message;
    if (this.nodes)
      for (const r of this.nodes)
        r.loc && (t += `

` + Jl(r.loc));
    else if (this.source && this.locations)
      for (const r of this.locations)
        t += `

` + zi(this.source, r);
    return t;
  }
  toJSON() {
    const t = {
      message: this.message
    };
    return this.locations != null && (t.locations = this.locations), this.path != null && (t.path = this.path), this.extensions != null && Object.keys(this.extensions).length > 0 && (t.extensions = this.extensions), t;
  }
}
function Mn(e) {
  return e === void 0 || e.length === 0 ? void 0 : e;
}
function D(e, t, r) {
  return new qr(`Syntax Error: ${r}`, {
    source: e,
    positions: [t]
  });
}
class Zl {
  /**
   * The character offset at which this Node begins.
   */
  /**
   * The character offset at which this Node ends.
   */
  /**
   * The Token at which this Node begins.
   */
  /**
   * The Token at which this Node ends.
   */
  /**
   * The Source document the AST represents.
   */
  constructor(t, r, n) {
    this.start = t.start, this.end = r.end, this.startToken = t, this.endToken = r, this.source = n;
  }
  get [Symbol.toStringTag]() {
    return "Location";
  }
  toJSON() {
    return {
      start: this.start,
      end: this.end
    };
  }
}
class Yi {
  /**
   * The kind of Token.
   */
  /**
   * The character offset at which this Node begins.
   */
  /**
   * The character offset at which this Node ends.
   */
  /**
   * The 1-indexed line number on which this Token appears.
   */
  /**
   * The 1-indexed column number at which this Token begins.
   */
  /**
   * For non-punctuation tokens, represents the interpreted value of the token.
   *
   * Note: is undefined for punctuation tokens, but typed as string for
   * convenience in the parser.
   */
  /**
   * Tokens exist as nodes in a double-linked-list amongst all tokens
   * including ignored tokens. <SOF> is always the first node and <EOF>
   * the last.
   */
  constructor(t, r, n, i, o, a) {
    this.kind = t, this.start = r, this.end = n, this.line = i, this.column = o, this.value = a, this.prev = null, this.next = null;
  }
  get [Symbol.toStringTag]() {
    return "Token";
  }
  toJSON() {
    return {
      kind: this.kind,
      value: this.value,
      line: this.line,
      column: this.column
    };
  }
}
const ef = {
  Name: [],
  Document: ["definitions"],
  OperationDefinition: [
    "name",
    "variableDefinitions",
    "directives",
    "selectionSet"
  ],
  VariableDefinition: ["variable", "type", "defaultValue", "directives"],
  Variable: ["name"],
  SelectionSet: ["selections"],
  Field: ["alias", "name", "arguments", "directives", "selectionSet"],
  Argument: ["name", "value"],
  FragmentSpread: ["name", "directives"],
  InlineFragment: ["typeCondition", "directives", "selectionSet"],
  FragmentDefinition: [
    "name",
    // Note: fragment variable definitions are deprecated and will removed in v17.0.0
    "variableDefinitions",
    "typeCondition",
    "directives",
    "selectionSet"
  ],
  IntValue: [],
  FloatValue: [],
  StringValue: [],
  BooleanValue: [],
  NullValue: [],
  EnumValue: [],
  ListValue: ["values"],
  ObjectValue: ["fields"],
  ObjectField: ["name", "value"],
  Directive: ["name", "arguments"],
  NamedType: ["name"],
  ListType: ["type"],
  NonNullType: ["type"],
  SchemaDefinition: ["description", "directives", "operationTypes"],
  OperationTypeDefinition: ["type"],
  ScalarTypeDefinition: ["description", "name", "directives"],
  ObjectTypeDefinition: [
    "description",
    "name",
    "interfaces",
    "directives",
    "fields"
  ],
  FieldDefinition: ["description", "name", "arguments", "type", "directives"],
  InputValueDefinition: [
    "description",
    "name",
    "type",
    "defaultValue",
    "directives"
  ],
  InterfaceTypeDefinition: [
    "description",
    "name",
    "interfaces",
    "directives",
    "fields"
  ],
  UnionTypeDefinition: ["description", "name", "directives", "types"],
  EnumTypeDefinition: ["description", "name", "directives", "values"],
  EnumValueDefinition: ["description", "name", "directives"],
  InputObjectTypeDefinition: ["description", "name", "directives", "fields"],
  DirectiveDefinition: ["description", "name", "arguments", "locations"],
  SchemaExtension: ["directives", "operationTypes"],
  ScalarTypeExtension: ["name", "directives"],
  ObjectTypeExtension: ["name", "interfaces", "directives", "fields"],
  InterfaceTypeExtension: ["name", "interfaces", "directives", "fields"],
  UnionTypeExtension: ["name", "directives", "types"],
  EnumTypeExtension: ["name", "directives", "values"],
  InputObjectTypeExtension: ["name", "directives", "fields"]
}, tf = new Set(Object.keys(ef));
function Xp(e) {
  const t = e == null ? void 0 : e.kind;
  return typeof t == "string" && tf.has(t);
}
var he;
(function(e) {
  e.QUERY = "query", e.MUTATION = "mutation", e.SUBSCRIPTION = "subscription";
})(he || (he = {}));
var Sr;
(function(e) {
  e.QUERY = "QUERY", e.MUTATION = "MUTATION", e.SUBSCRIPTION = "SUBSCRIPTION", e.FIELD = "FIELD", e.FRAGMENT_DEFINITION = "FRAGMENT_DEFINITION", e.FRAGMENT_SPREAD = "FRAGMENT_SPREAD", e.INLINE_FRAGMENT = "INLINE_FRAGMENT", e.VARIABLE_DEFINITION = "VARIABLE_DEFINITION", e.SCHEMA = "SCHEMA", e.SCALAR = "SCALAR", e.OBJECT = "OBJECT", e.FIELD_DEFINITION = "FIELD_DEFINITION", e.ARGUMENT_DEFINITION = "ARGUMENT_DEFINITION", e.INTERFACE = "INTERFACE", e.UNION = "UNION", e.ENUM = "ENUM", e.ENUM_VALUE = "ENUM_VALUE", e.INPUT_OBJECT = "INPUT_OBJECT", e.INPUT_FIELD_DEFINITION = "INPUT_FIELD_DEFINITION";
})(Sr || (Sr = {}));
var g;
(function(e) {
  e.NAME = "Name", e.DOCUMENT = "Document", e.OPERATION_DEFINITION = "OperationDefinition", e.VARIABLE_DEFINITION = "VariableDefinition", e.SELECTION_SET = "SelectionSet", e.FIELD = "Field", e.ARGUMENT = "Argument", e.FRAGMENT_SPREAD = "FragmentSpread", e.INLINE_FRAGMENT = "InlineFragment", e.FRAGMENT_DEFINITION = "FragmentDefinition", e.VARIABLE = "Variable", e.INT = "IntValue", e.FLOAT = "FloatValue", e.STRING = "StringValue", e.BOOLEAN = "BooleanValue", e.NULL = "NullValue", e.ENUM = "EnumValue", e.LIST = "ListValue", e.OBJECT = "ObjectValue", e.OBJECT_FIELD = "ObjectField", e.DIRECTIVE = "Directive", e.NAMED_TYPE = "NamedType", e.LIST_TYPE = "ListType", e.NON_NULL_TYPE = "NonNullType", e.SCHEMA_DEFINITION = "SchemaDefinition", e.OPERATION_TYPE_DEFINITION = "OperationTypeDefinition", e.SCALAR_TYPE_DEFINITION = "ScalarTypeDefinition", e.OBJECT_TYPE_DEFINITION = "ObjectTypeDefinition", e.FIELD_DEFINITION = "FieldDefinition", e.INPUT_VALUE_DEFINITION = "InputValueDefinition", e.INTERFACE_TYPE_DEFINITION = "InterfaceTypeDefinition", e.UNION_TYPE_DEFINITION = "UnionTypeDefinition", e.ENUM_TYPE_DEFINITION = "EnumTypeDefinition", e.ENUM_VALUE_DEFINITION = "EnumValueDefinition", e.INPUT_OBJECT_TYPE_DEFINITION = "InputObjectTypeDefinition", e.DIRECTIVE_DEFINITION = "DirectiveDefinition", e.SCHEMA_EXTENSION = "SchemaExtension", e.SCALAR_TYPE_EXTENSION = "ScalarTypeExtension", e.OBJECT_TYPE_EXTENSION = "ObjectTypeExtension", e.INTERFACE_TYPE_EXTENSION = "InterfaceTypeExtension", e.UNION_TYPE_EXTENSION = "UnionTypeExtension", e.ENUM_TYPE_EXTENSION = "EnumTypeExtension", e.INPUT_OBJECT_TYPE_EXTENSION = "InputObjectTypeExtension";
})(g || (g = {}));
function Rr(e) {
  return e === 9 || e === 32;
}
function $e(e) {
  return e >= 48 && e <= 57;
}
function Wi(e) {
  return e >= 97 && e <= 122 || // A-Z
  e >= 65 && e <= 90;
}
function Ki(e) {
  return Wi(e) || e === 95;
}
function rf(e) {
  return Wi(e) || $e(e) || e === 95;
}
function nf(e) {
  var t;
  let r = Number.MAX_SAFE_INTEGER, n = null, i = -1;
  for (let a = 0; a < e.length; ++a) {
    var o;
    const s = e[a], u = of(s);
    u !== s.length && (n = (o = n) !== null && o !== void 0 ? o : a, i = a, a !== 0 && u < r && (r = u));
  }
  return e.map((a, s) => s === 0 ? a : a.slice(r)).slice(
    (t = n) !== null && t !== void 0 ? t : 0,
    i + 1
  );
}
function of(e) {
  let t = 0;
  for (; t < e.length && Rr(e.charCodeAt(t)); )
    ++t;
  return t;
}
function qp(e, t) {
  const r = e.replace(/"""/g, '\\"""'), n = r.split(/\r\n|[\n\r]/g), i = n.length === 1, o = n.length > 1 && n.slice(1).every((h) => h.length === 0 || Rr(h.charCodeAt(0))), a = r.endsWith('\\"""'), s = e.endsWith('"') && !a, u = e.endsWith("\\"), c = s || u, l = (
    // add leading and trailing new lines only if it improves readability
    !i || e.length > 70 || c || o || a
  );
  let f = "";
  const d = i && Rr(e.charCodeAt(0));
  return (l && !d || o) && (f += `
`), f += r, (l || c) && (f += `
`), '"""' + f + '"""';
}
var _;
(function(e) {
  e.SOF = "<SOF>", e.EOF = "<EOF>", e.BANG = "!", e.DOLLAR = "$", e.AMP = "&", e.PAREN_L = "(", e.PAREN_R = ")", e.SPREAD = "...", e.COLON = ":", e.EQUALS = "=", e.AT = "@", e.BRACKET_L = "[", e.BRACKET_R = "]", e.BRACE_L = "{", e.PIPE = "|", e.BRACE_R = "}", e.NAME = "Name", e.INT = "Int", e.FLOAT = "Float", e.STRING = "String", e.BLOCK_STRING = "BlockString", e.COMMENT = "Comment";
})(_ || (_ = {}));
class af {
  /**
   * The previously focused non-ignored token.
   */
  /**
   * The currently focused non-ignored token.
   */
  /**
   * The (1-indexed) line containing the current token.
   */
  /**
   * The character offset at which the current line begins.
   */
  constructor(t) {
    const r = new Yi(_.SOF, 0, 0, 0, 0);
    this.source = t, this.lastToken = r, this.token = r, this.line = 1, this.lineStart = 0;
  }
  get [Symbol.toStringTag]() {
    return "Lexer";
  }
  /**
   * Advances the token stream to the next non-ignored token.
   */
  advance() {
    return this.lastToken = this.token, this.token = this.lookahead();
  }
  /**
   * Looks ahead and returns the next non-ignored token, but does not change
   * the state of Lexer.
   */
  lookahead() {
    let t = this.token;
    if (t.kind !== _.EOF)
      do
        if (t.next)
          t = t.next;
        else {
          const r = uf(this, t.end);
          t.next = r, r.prev = t, t = r;
        }
      while (t.kind === _.COMMENT);
    return t;
  }
}
function sf(e) {
  return e === _.BANG || e === _.DOLLAR || e === _.AMP || e === _.PAREN_L || e === _.PAREN_R || e === _.SPREAD || e === _.COLON || e === _.EQUALS || e === _.AT || e === _.BRACKET_L || e === _.BRACKET_R || e === _.BRACE_L || e === _.PIPE || e === _.BRACE_R;
}
function Ae(e) {
  return e >= 0 && e <= 55295 || e >= 57344 && e <= 1114111;
}
function At(e, t) {
  return Ji(e.charCodeAt(t)) && Qi(e.charCodeAt(t + 1));
}
function Ji(e) {
  return e >= 55296 && e <= 56319;
}
function Qi(e) {
  return e >= 56320 && e <= 57343;
}
function ce(e, t) {
  const r = e.source.body.codePointAt(t);
  if (r === void 0)
    return _.EOF;
  if (r >= 32 && r <= 126) {
    const n = String.fromCodePoint(r);
    return n === '"' ? `'"'` : `"${n}"`;
  }
  return "U+" + r.toString(16).toUpperCase().padStart(4, "0");
}
function P(e, t, r, n, i) {
  const o = e.line, a = 1 + r - e.lineStart;
  return new Yi(t, r, n, o, a, i);
}
function uf(e, t) {
  const r = e.source.body, n = r.length;
  let i = t;
  for (; i < n; ) {
    const o = r.charCodeAt(i);
    switch (o) {
      case 65279:
      case 9:
      case 32:
      case 44:
        ++i;
        continue;
      case 10:
        ++i, ++e.line, e.lineStart = i;
        continue;
      case 13:
        r.charCodeAt(i + 1) === 10 ? i += 2 : ++i, ++e.line, e.lineStart = i;
        continue;
      case 35:
        return cf(e, i);
      case 33:
        return P(e, _.BANG, i, i + 1);
      case 36:
        return P(e, _.DOLLAR, i, i + 1);
      case 38:
        return P(e, _.AMP, i, i + 1);
      case 40:
        return P(e, _.PAREN_L, i, i + 1);
      case 41:
        return P(e, _.PAREN_R, i, i + 1);
      case 46:
        if (r.charCodeAt(i + 1) === 46 && r.charCodeAt(i + 2) === 46)
          return P(e, _.SPREAD, i, i + 3);
        break;
      case 58:
        return P(e, _.COLON, i, i + 1);
      case 61:
        return P(e, _.EQUALS, i, i + 1);
      case 64:
        return P(e, _.AT, i, i + 1);
      case 91:
        return P(e, _.BRACKET_L, i, i + 1);
      case 93:
        return P(e, _.BRACKET_R, i, i + 1);
      case 123:
        return P(e, _.BRACE_L, i, i + 1);
      case 124:
        return P(e, _.PIPE, i, i + 1);
      case 125:
        return P(e, _.BRACE_R, i, i + 1);
      case 34:
        return r.charCodeAt(i + 1) === 34 && r.charCodeAt(i + 2) === 34 ? _f(e, i) : ff(e, i);
    }
    if ($e(o) || o === 45)
      return lf(e, i, o);
    if (Ki(o))
      return Ef(e, i);
    throw D(
      e.source,
      i,
      o === 39 ? `Unexpected single quote character ('), did you mean to use a double quote (")?` : Ae(o) || At(r, i) ? `Unexpected character: ${ce(e, i)}.` : `Invalid character: ${ce(e, i)}.`
    );
  }
  return P(e, _.EOF, n, n);
}
function cf(e, t) {
  const r = e.source.body, n = r.length;
  let i = t + 1;
  for (; i < n; ) {
    const o = r.charCodeAt(i);
    if (o === 10 || o === 13)
      break;
    if (Ae(o))
      ++i;
    else if (At(r, i))
      i += 2;
    else
      break;
  }
  return P(
    e,
    _.COMMENT,
    t,
    i,
    r.slice(t + 1, i)
  );
}
function lf(e, t, r) {
  const n = e.source.body;
  let i = t, o = r, a = !1;
  if (o === 45 && (o = n.charCodeAt(++i)), o === 48) {
    if (o = n.charCodeAt(++i), $e(o))
      throw D(
        e.source,
        i,
        `Invalid number, unexpected digit after 0: ${ce(
          e,
          i
        )}.`
      );
  } else
    i = rr(e, i, o), o = n.charCodeAt(i);
  if (o === 46 && (a = !0, o = n.charCodeAt(++i), i = rr(e, i, o), o = n.charCodeAt(i)), (o === 69 || o === 101) && (a = !0, o = n.charCodeAt(++i), (o === 43 || o === 45) && (o = n.charCodeAt(++i)), i = rr(e, i, o), o = n.charCodeAt(i)), o === 46 || Ki(o))
    throw D(
      e.source,
      i,
      `Invalid number, expected digit but got: ${ce(
        e,
        i
      )}.`
    );
  return P(
    e,
    a ? _.FLOAT : _.INT,
    t,
    i,
    n.slice(t, i)
  );
}
function rr(e, t, r) {
  if (!$e(r))
    throw D(
      e.source,
      t,
      `Invalid number, expected digit but got: ${ce(
        e,
        t
      )}.`
    );
  const n = e.source.body;
  let i = t + 1;
  for (; $e(n.charCodeAt(i)); )
    ++i;
  return i;
}
function ff(e, t) {
  const r = e.source.body, n = r.length;
  let i = t + 1, o = i, a = "";
  for (; i < n; ) {
    const s = r.charCodeAt(i);
    if (s === 34)
      return a += r.slice(o, i), P(e, _.STRING, t, i + 1, a);
    if (s === 92) {
      a += r.slice(o, i);
      const u = r.charCodeAt(i + 1) === 117 ? r.charCodeAt(i + 2) === 123 ? df(e, i) : pf(e, i) : hf(e, i);
      a += u.value, i += u.size, o = i;
      continue;
    }
    if (s === 10 || s === 13)
      break;
    if (Ae(s))
      ++i;
    else if (At(r, i))
      i += 2;
    else
      throw D(
        e.source,
        i,
        `Invalid character within String: ${ce(
          e,
          i
        )}.`
      );
  }
  throw D(e.source, i, "Unterminated string.");
}
function df(e, t) {
  const r = e.source.body;
  let n = 0, i = 3;
  for (; i < 12; ) {
    const o = r.charCodeAt(t + i++);
    if (o === 125) {
      if (i < 5 || !Ae(n))
        break;
      return {
        value: String.fromCodePoint(n),
        size: i
      };
    }
    if (n = n << 4 | Ce(o), n < 0)
      break;
  }
  throw D(
    e.source,
    t,
    `Invalid Unicode escape sequence: "${r.slice(
      t,
      t + i
    )}".`
  );
}
function pf(e, t) {
  const r = e.source.body, n = kn(r, t + 2);
  if (Ae(n))
    return {
      value: String.fromCodePoint(n),
      size: 6
    };
  if (Ji(n) && r.charCodeAt(t + 6) === 92 && r.charCodeAt(t + 7) === 117) {
    const i = kn(r, t + 8);
    if (Qi(i))
      return {
        value: String.fromCodePoint(n, i),
        size: 12
      };
  }
  throw D(
    e.source,
    t,
    `Invalid Unicode escape sequence: "${r.slice(t, t + 6)}".`
  );
}
function kn(e, t) {
  return Ce(e.charCodeAt(t)) << 12 | Ce(e.charCodeAt(t + 1)) << 8 | Ce(e.charCodeAt(t + 2)) << 4 | Ce(e.charCodeAt(t + 3));
}
function Ce(e) {
  return e >= 48 && e <= 57 ? e - 48 : e >= 65 && e <= 70 ? e - 55 : e >= 97 && e <= 102 ? e - 87 : -1;
}
function hf(e, t) {
  const r = e.source.body;
  switch (r.charCodeAt(t + 1)) {
    case 34:
      return {
        value: '"',
        size: 2
      };
    case 92:
      return {
        value: "\\",
        size: 2
      };
    case 47:
      return {
        value: "/",
        size: 2
      };
    case 98:
      return {
        value: "\b",
        size: 2
      };
    case 102:
      return {
        value: "\f",
        size: 2
      };
    case 110:
      return {
        value: `
`,
        size: 2
      };
    case 114:
      return {
        value: "\r",
        size: 2
      };
    case 116:
      return {
        value: "	",
        size: 2
      };
  }
  throw D(
    e.source,
    t,
    `Invalid character escape sequence: "${r.slice(
      t,
      t + 2
    )}".`
  );
}
function _f(e, t) {
  const r = e.source.body, n = r.length;
  let i = e.lineStart, o = t + 3, a = o, s = "";
  const u = [];
  for (; o < n; ) {
    const c = r.charCodeAt(o);
    if (c === 34 && r.charCodeAt(o + 1) === 34 && r.charCodeAt(o + 2) === 34) {
      s += r.slice(a, o), u.push(s);
      const l = P(
        e,
        _.BLOCK_STRING,
        t,
        o + 3,
        // Return a string of the lines joined with U+000A.
        nf(u).join(`
`)
      );
      return e.line += u.length - 1, e.lineStart = i, l;
    }
    if (c === 92 && r.charCodeAt(o + 1) === 34 && r.charCodeAt(o + 2) === 34 && r.charCodeAt(o + 3) === 34) {
      s += r.slice(a, o), a = o + 1, o += 4;
      continue;
    }
    if (c === 10 || c === 13) {
      s += r.slice(a, o), u.push(s), c === 13 && r.charCodeAt(o + 1) === 10 ? o += 2 : ++o, s = "", a = o, i = o;
      continue;
    }
    if (Ae(c))
      ++o;
    else if (At(r, o))
      o += 2;
    else
      throw D(
        e.source,
        o,
        `Invalid character within String: ${ce(
          e,
          o
        )}.`
      );
  }
  throw D(e.source, o, "Unterminated string.");
}
function Ef(e, t) {
  const r = e.source.body, n = r.length;
  let i = t + 1;
  for (; i < n; ) {
    const o = r.charCodeAt(i);
    if (rf(o))
      ++i;
    else
      break;
  }
  return P(
    e,
    _.NAME,
    t,
    i,
    r.slice(t, i)
  );
}
const Tf = 10, Zi = 2;
function eo(e) {
  return Nt(e, []);
}
function Nt(e, t) {
  switch (typeof e) {
    case "string":
      return JSON.stringify(e);
    case "function":
      return e.name ? `[function ${e.name}]` : "[function]";
    case "object":
      return vf(e, t);
    default:
      return String(e);
  }
}
function vf(e, t) {
  if (e === null)
    return "null";
  if (t.includes(e))
    return "[Circular]";
  const r = [...t, e];
  if (gf(e)) {
    const n = e.toJSON();
    if (n !== e)
      return typeof n == "string" ? n : Nt(n, r);
  } else if (Array.isArray(e))
    return mf(e, r);
  return yf(e, r);
}
function gf(e) {
  return typeof e.toJSON == "function";
}
function yf(e, t) {
  const r = Object.entries(e);
  return r.length === 0 ? "{}" : t.length > Zi ? "[" + Of(e) + "]" : "{ " + r.map(
    ([i, o]) => i + ": " + Nt(o, t)
  ).join(", ") + " }";
}
function mf(e, t) {
  if (e.length === 0)
    return "[]";
  if (t.length > Zi)
    return "[Array]";
  const r = Math.min(Tf, e.length), n = e.length - r, i = [];
  for (let o = 0; o < r; ++o)
    i.push(Nt(e[o], t));
  return n === 1 ? i.push("... 1 more item") : n > 1 && i.push(`... ${n} more items`), "[" + i.join(", ") + "]";
}
function Of(e) {
  const t = Object.prototype.toString.call(e).replace(/^\[object /, "").replace(/]$/, "");
  if (t === "Object" && typeof e.constructor == "function") {
    const r = e.constructor.name;
    if (typeof r == "string" && r !== "")
      return r;
  }
  return t;
}
const Sf = (
  /* c8 ignore next 6 */
  // FIXME: https://github.com/graphql/graphql-js/issues/2317
  globalThis.process && globalThis.process.env.NODE_ENV === "production" ? function(t, r) {
    return t instanceof r;
  } : function(t, r) {
    if (t instanceof r)
      return !0;
    if (typeof t == "object" && t !== null) {
      var n;
      const i = r.prototype[Symbol.toStringTag], o = (
        // We still need to support constructor's name to detect conflicts with older versions of this library.
        Symbol.toStringTag in t ? t[Symbol.toStringTag] : (n = t.constructor) === null || n === void 0 ? void 0 : n.name
      );
      if (i === o) {
        const a = eo(t);
        throw new Error(`Cannot use ${i} "${a}" from another module or realm.

Ensure that there is only one instance of "graphql" in the node_modules
directory. If different versions of "graphql" are the dependencies of other
relied on modules, use "resolutions" to ensure only one version is installed.

https://yarnpkg.com/en/docs/selective-version-resolutions

Duplicate "graphql" modules cannot be used at the same time since different
versions may have different capabilities and behavior. The data from one
version used in the function from another could produce confusing and
spurious results.`);
      }
    }
    return !1;
  }
);
class to {
  constructor(t, r = "GraphQL request", n = {
    line: 1,
    column: 1
  }) {
    typeof t == "string" || tr(!1, `Body must be a string. Received: ${eo(t)}.`), this.body = t, this.name = r, this.locationOffset = n, this.locationOffset.line > 0 || tr(
      !1,
      "line in locationOffset is 1-indexed and must be positive."
    ), this.locationOffset.column > 0 || tr(
      !1,
      "column in locationOffset is 1-indexed and must be positive."
    );
  }
  get [Symbol.toStringTag]() {
    return "Source";
  }
}
function Rf(e) {
  return Sf(e, to);
}
function Af(e, t) {
  return new Nf(e, t).parseDocument();
}
class Nf {
  constructor(t, r = {}) {
    const n = Rf(t) ? t : new to(t);
    this._lexer = new af(n), this._options = r, this._tokenCounter = 0;
  }
  /**
   * Converts a name lex token into a name parse node.
   */
  parseName() {
    const t = this.expectToken(_.NAME);
    return this.node(t, {
      kind: g.NAME,
      value: t.value
    });
  }
  // Implements the parsing rules in the Document section.
  /**
   * Document : Definition+
   */
  parseDocument() {
    return this.node(this._lexer.token, {
      kind: g.DOCUMENT,
      definitions: this.many(
        _.SOF,
        this.parseDefinition,
        _.EOF
      )
    });
  }
  /**
   * Definition :
   *   - ExecutableDefinition
   *   - TypeSystemDefinition
   *   - TypeSystemExtension
   *
   * ExecutableDefinition :
   *   - OperationDefinition
   *   - FragmentDefinition
   *
   * TypeSystemDefinition :
   *   - SchemaDefinition
   *   - TypeDefinition
   *   - DirectiveDefinition
   *
   * TypeDefinition :
   *   - ScalarTypeDefinition
   *   - ObjectTypeDefinition
   *   - InterfaceTypeDefinition
   *   - UnionTypeDefinition
   *   - EnumTypeDefinition
   *   - InputObjectTypeDefinition
   */
  parseDefinition() {
    if (this.peek(_.BRACE_L))
      return this.parseOperationDefinition();
    const t = this.peekDescription(), r = t ? this._lexer.lookahead() : this._lexer.token;
    if (r.kind === _.NAME) {
      switch (r.value) {
        case "schema":
          return this.parseSchemaDefinition();
        case "scalar":
          return this.parseScalarTypeDefinition();
        case "type":
          return this.parseObjectTypeDefinition();
        case "interface":
          return this.parseInterfaceTypeDefinition();
        case "union":
          return this.parseUnionTypeDefinition();
        case "enum":
          return this.parseEnumTypeDefinition();
        case "input":
          return this.parseInputObjectTypeDefinition();
        case "directive":
          return this.parseDirectiveDefinition();
      }
      if (t)
        throw D(
          this._lexer.source,
          this._lexer.token.start,
          "Unexpected description, descriptions are supported only on type definitions."
        );
      switch (r.value) {
        case "query":
        case "mutation":
        case "subscription":
          return this.parseOperationDefinition();
        case "fragment":
          return this.parseFragmentDefinition();
        case "extend":
          return this.parseTypeSystemExtension();
      }
    }
    throw this.unexpected(r);
  }
  // Implements the parsing rules in the Operations section.
  /**
   * OperationDefinition :
   *  - SelectionSet
   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet
   */
  parseOperationDefinition() {
    const t = this._lexer.token;
    if (this.peek(_.BRACE_L))
      return this.node(t, {
        kind: g.OPERATION_DEFINITION,
        operation: he.QUERY,
        name: void 0,
        variableDefinitions: [],
        directives: [],
        selectionSet: this.parseSelectionSet()
      });
    const r = this.parseOperationType();
    let n;
    return this.peek(_.NAME) && (n = this.parseName()), this.node(t, {
      kind: g.OPERATION_DEFINITION,
      operation: r,
      name: n,
      variableDefinitions: this.parseVariableDefinitions(),
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    });
  }
  /**
   * OperationType : one of query mutation subscription
   */
  parseOperationType() {
    const t = this.expectToken(_.NAME);
    switch (t.value) {
      case "query":
        return he.QUERY;
      case "mutation":
        return he.MUTATION;
      case "subscription":
        return he.SUBSCRIPTION;
    }
    throw this.unexpected(t);
  }
  /**
   * VariableDefinitions : ( VariableDefinition+ )
   */
  parseVariableDefinitions() {
    return this.optionalMany(
      _.PAREN_L,
      this.parseVariableDefinition,
      _.PAREN_R
    );
  }
  /**
   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?
   */
  parseVariableDefinition() {
    return this.node(this._lexer.token, {
      kind: g.VARIABLE_DEFINITION,
      variable: this.parseVariable(),
      type: (this.expectToken(_.COLON), this.parseTypeReference()),
      defaultValue: this.expectOptionalToken(_.EQUALS) ? this.parseConstValueLiteral() : void 0,
      directives: this.parseConstDirectives()
    });
  }
  /**
   * Variable : $ Name
   */
  parseVariable() {
    const t = this._lexer.token;
    return this.expectToken(_.DOLLAR), this.node(t, {
      kind: g.VARIABLE,
      name: this.parseName()
    });
  }
  /**
   * ```
   * SelectionSet : { Selection+ }
   * ```
   */
  parseSelectionSet() {
    return this.node(this._lexer.token, {
      kind: g.SELECTION_SET,
      selections: this.many(
        _.BRACE_L,
        this.parseSelection,
        _.BRACE_R
      )
    });
  }
  /**
   * Selection :
   *   - Field
   *   - FragmentSpread
   *   - InlineFragment
   */
  parseSelection() {
    return this.peek(_.SPREAD) ? this.parseFragment() : this.parseField();
  }
  /**
   * Field : Alias? Name Arguments? Directives? SelectionSet?
   *
   * Alias : Name :
   */
  parseField() {
    const t = this._lexer.token, r = this.parseName();
    let n, i;
    return this.expectOptionalToken(_.COLON) ? (n = r, i = this.parseName()) : i = r, this.node(t, {
      kind: g.FIELD,
      alias: n,
      name: i,
      arguments: this.parseArguments(!1),
      directives: this.parseDirectives(!1),
      selectionSet: this.peek(_.BRACE_L) ? this.parseSelectionSet() : void 0
    });
  }
  /**
   * Arguments[Const] : ( Argument[?Const]+ )
   */
  parseArguments(t) {
    const r = t ? this.parseConstArgument : this.parseArgument;
    return this.optionalMany(_.PAREN_L, r, _.PAREN_R);
  }
  /**
   * Argument[Const] : Name : Value[?Const]
   */
  parseArgument(t = !1) {
    const r = this._lexer.token, n = this.parseName();
    return this.expectToken(_.COLON), this.node(r, {
      kind: g.ARGUMENT,
      name: n,
      value: this.parseValueLiteral(t)
    });
  }
  parseConstArgument() {
    return this.parseArgument(!0);
  }
  // Implements the parsing rules in the Fragments section.
  /**
   * Corresponds to both FragmentSpread and InlineFragment in the spec.
   *
   * FragmentSpread : ... FragmentName Directives?
   *
   * InlineFragment : ... TypeCondition? Directives? SelectionSet
   */
  parseFragment() {
    const t = this._lexer.token;
    this.expectToken(_.SPREAD);
    const r = this.expectOptionalKeyword("on");
    return !r && this.peek(_.NAME) ? this.node(t, {
      kind: g.FRAGMENT_SPREAD,
      name: this.parseFragmentName(),
      directives: this.parseDirectives(!1)
    }) : this.node(t, {
      kind: g.INLINE_FRAGMENT,
      typeCondition: r ? this.parseNamedType() : void 0,
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    });
  }
  /**
   * FragmentDefinition :
   *   - fragment FragmentName on TypeCondition Directives? SelectionSet
   *
   * TypeCondition : NamedType
   */
  parseFragmentDefinition() {
    const t = this._lexer.token;
    return this.expectKeyword("fragment"), this._options.allowLegacyFragmentVariables === !0 ? this.node(t, {
      kind: g.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      variableDefinitions: this.parseVariableDefinitions(),
      typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    }) : this.node(t, {
      kind: g.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      typeCondition: (this.expectKeyword("on"), this.parseNamedType()),
      directives: this.parseDirectives(!1),
      selectionSet: this.parseSelectionSet()
    });
  }
  /**
   * FragmentName : Name but not `on`
   */
  parseFragmentName() {
    if (this._lexer.token.value === "on")
      throw this.unexpected();
    return this.parseName();
  }
  // Implements the parsing rules in the Values section.
  /**
   * Value[Const] :
   *   - [~Const] Variable
   *   - IntValue
   *   - FloatValue
   *   - StringValue
   *   - BooleanValue
   *   - NullValue
   *   - EnumValue
   *   - ListValue[?Const]
   *   - ObjectValue[?Const]
   *
   * BooleanValue : one of `true` `false`
   *
   * NullValue : `null`
   *
   * EnumValue : Name but not `true`, `false` or `null`
   */
  parseValueLiteral(t) {
    const r = this._lexer.token;
    switch (r.kind) {
      case _.BRACKET_L:
        return this.parseList(t);
      case _.BRACE_L:
        return this.parseObject(t);
      case _.INT:
        return this.advanceLexer(), this.node(r, {
          kind: g.INT,
          value: r.value
        });
      case _.FLOAT:
        return this.advanceLexer(), this.node(r, {
          kind: g.FLOAT,
          value: r.value
        });
      case _.STRING:
      case _.BLOCK_STRING:
        return this.parseStringLiteral();
      case _.NAME:
        switch (this.advanceLexer(), r.value) {
          case "true":
            return this.node(r, {
              kind: g.BOOLEAN,
              value: !0
            });
          case "false":
            return this.node(r, {
              kind: g.BOOLEAN,
              value: !1
            });
          case "null":
            return this.node(r, {
              kind: g.NULL
            });
          default:
            return this.node(r, {
              kind: g.ENUM,
              value: r.value
            });
        }
      case _.DOLLAR:
        if (t)
          if (this.expectToken(_.DOLLAR), this._lexer.token.kind === _.NAME) {
            const n = this._lexer.token.value;
            throw D(
              this._lexer.source,
              r.start,
              `Unexpected variable "$${n}" in constant value.`
            );
          } else
            throw this.unexpected(r);
        return this.parseVariable();
      default:
        throw this.unexpected();
    }
  }
  parseConstValueLiteral() {
    return this.parseValueLiteral(!0);
  }
  parseStringLiteral() {
    const t = this._lexer.token;
    return this.advanceLexer(), this.node(t, {
      kind: g.STRING,
      value: t.value,
      block: t.kind === _.BLOCK_STRING
    });
  }
  /**
   * ListValue[Const] :
   *   - [ ]
   *   - [ Value[?Const]+ ]
   */
  parseList(t) {
    const r = () => this.parseValueLiteral(t);
    return this.node(this._lexer.token, {
      kind: g.LIST,
      values: this.any(_.BRACKET_L, r, _.BRACKET_R)
    });
  }
  /**
   * ```
   * ObjectValue[Const] :
   *   - { }
   *   - { ObjectField[?Const]+ }
   * ```
   */
  parseObject(t) {
    const r = () => this.parseObjectField(t);
    return this.node(this._lexer.token, {
      kind: g.OBJECT,
      fields: this.any(_.BRACE_L, r, _.BRACE_R)
    });
  }
  /**
   * ObjectField[Const] : Name : Value[?Const]
   */
  parseObjectField(t) {
    const r = this._lexer.token, n = this.parseName();
    return this.expectToken(_.COLON), this.node(r, {
      kind: g.OBJECT_FIELD,
      name: n,
      value: this.parseValueLiteral(t)
    });
  }
  // Implements the parsing rules in the Directives section.
  /**
   * Directives[Const] : Directive[?Const]+
   */
  parseDirectives(t) {
    const r = [];
    for (; this.peek(_.AT); )
      r.push(this.parseDirective(t));
    return r;
  }
  parseConstDirectives() {
    return this.parseDirectives(!0);
  }
  /**
   * ```
   * Directive[Const] : @ Name Arguments[?Const]?
   * ```
   */
  parseDirective(t) {
    const r = this._lexer.token;
    return this.expectToken(_.AT), this.node(r, {
      kind: g.DIRECTIVE,
      name: this.parseName(),
      arguments: this.parseArguments(t)
    });
  }
  // Implements the parsing rules in the Types section.
  /**
   * Type :
   *   - NamedType
   *   - ListType
   *   - NonNullType
   */
  parseTypeReference() {
    const t = this._lexer.token;
    let r;
    if (this.expectOptionalToken(_.BRACKET_L)) {
      const n = this.parseTypeReference();
      this.expectToken(_.BRACKET_R), r = this.node(t, {
        kind: g.LIST_TYPE,
        type: n
      });
    } else
      r = this.parseNamedType();
    return this.expectOptionalToken(_.BANG) ? this.node(t, {
      kind: g.NON_NULL_TYPE,
      type: r
    }) : r;
  }
  /**
   * NamedType : Name
   */
  parseNamedType() {
    return this.node(this._lexer.token, {
      kind: g.NAMED_TYPE,
      name: this.parseName()
    });
  }
  // Implements the parsing rules in the Type Definition section.
  peekDescription() {
    return this.peek(_.STRING) || this.peek(_.BLOCK_STRING);
  }
  /**
   * Description : StringValue
   */
  parseDescription() {
    if (this.peekDescription())
      return this.parseStringLiteral();
  }
  /**
   * ```
   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }
   * ```
   */
  parseSchemaDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("schema");
    const n = this.parseConstDirectives(), i = this.many(
      _.BRACE_L,
      this.parseOperationTypeDefinition,
      _.BRACE_R
    );
    return this.node(t, {
      kind: g.SCHEMA_DEFINITION,
      description: r,
      directives: n,
      operationTypes: i
    });
  }
  /**
   * OperationTypeDefinition : OperationType : NamedType
   */
  parseOperationTypeDefinition() {
    const t = this._lexer.token, r = this.parseOperationType();
    this.expectToken(_.COLON);
    const n = this.parseNamedType();
    return this.node(t, {
      kind: g.OPERATION_TYPE_DEFINITION,
      operation: r,
      type: n
    });
  }
  /**
   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?
   */
  parseScalarTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("scalar");
    const n = this.parseName(), i = this.parseConstDirectives();
    return this.node(t, {
      kind: g.SCALAR_TYPE_DEFINITION,
      description: r,
      name: n,
      directives: i
    });
  }
  /**
   * ObjectTypeDefinition :
   *   Description?
   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?
   */
  parseObjectTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("type");
    const n = this.parseName(), i = this.parseImplementsInterfaces(), o = this.parseConstDirectives(), a = this.parseFieldsDefinition();
    return this.node(t, {
      kind: g.OBJECT_TYPE_DEFINITION,
      description: r,
      name: n,
      interfaces: i,
      directives: o,
      fields: a
    });
  }
  /**
   * ImplementsInterfaces :
   *   - implements `&`? NamedType
   *   - ImplementsInterfaces & NamedType
   */
  parseImplementsInterfaces() {
    return this.expectOptionalKeyword("implements") ? this.delimitedMany(_.AMP, this.parseNamedType) : [];
  }
  /**
   * ```
   * FieldsDefinition : { FieldDefinition+ }
   * ```
   */
  parseFieldsDefinition() {
    return this.optionalMany(
      _.BRACE_L,
      this.parseFieldDefinition,
      _.BRACE_R
    );
  }
  /**
   * FieldDefinition :
   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?
   */
  parseFieldDefinition() {
    const t = this._lexer.token, r = this.parseDescription(), n = this.parseName(), i = this.parseArgumentDefs();
    this.expectToken(_.COLON);
    const o = this.parseTypeReference(), a = this.parseConstDirectives();
    return this.node(t, {
      kind: g.FIELD_DEFINITION,
      description: r,
      name: n,
      arguments: i,
      type: o,
      directives: a
    });
  }
  /**
   * ArgumentsDefinition : ( InputValueDefinition+ )
   */
  parseArgumentDefs() {
    return this.optionalMany(
      _.PAREN_L,
      this.parseInputValueDef,
      _.PAREN_R
    );
  }
  /**
   * InputValueDefinition :
   *   - Description? Name : Type DefaultValue? Directives[Const]?
   */
  parseInputValueDef() {
    const t = this._lexer.token, r = this.parseDescription(), n = this.parseName();
    this.expectToken(_.COLON);
    const i = this.parseTypeReference();
    let o;
    this.expectOptionalToken(_.EQUALS) && (o = this.parseConstValueLiteral());
    const a = this.parseConstDirectives();
    return this.node(t, {
      kind: g.INPUT_VALUE_DEFINITION,
      description: r,
      name: n,
      type: i,
      defaultValue: o,
      directives: a
    });
  }
  /**
   * InterfaceTypeDefinition :
   *   - Description? interface Name Directives[Const]? FieldsDefinition?
   */
  parseInterfaceTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("interface");
    const n = this.parseName(), i = this.parseImplementsInterfaces(), o = this.parseConstDirectives(), a = this.parseFieldsDefinition();
    return this.node(t, {
      kind: g.INTERFACE_TYPE_DEFINITION,
      description: r,
      name: n,
      interfaces: i,
      directives: o,
      fields: a
    });
  }
  /**
   * UnionTypeDefinition :
   *   - Description? union Name Directives[Const]? UnionMemberTypes?
   */
  parseUnionTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("union");
    const n = this.parseName(), i = this.parseConstDirectives(), o = this.parseUnionMemberTypes();
    return this.node(t, {
      kind: g.UNION_TYPE_DEFINITION,
      description: r,
      name: n,
      directives: i,
      types: o
    });
  }
  /**
   * UnionMemberTypes :
   *   - = `|`? NamedType
   *   - UnionMemberTypes | NamedType
   */
  parseUnionMemberTypes() {
    return this.expectOptionalToken(_.EQUALS) ? this.delimitedMany(_.PIPE, this.parseNamedType) : [];
  }
  /**
   * EnumTypeDefinition :
   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?
   */
  parseEnumTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("enum");
    const n = this.parseName(), i = this.parseConstDirectives(), o = this.parseEnumValuesDefinition();
    return this.node(t, {
      kind: g.ENUM_TYPE_DEFINITION,
      description: r,
      name: n,
      directives: i,
      values: o
    });
  }
  /**
   * ```
   * EnumValuesDefinition : { EnumValueDefinition+ }
   * ```
   */
  parseEnumValuesDefinition() {
    return this.optionalMany(
      _.BRACE_L,
      this.parseEnumValueDefinition,
      _.BRACE_R
    );
  }
  /**
   * EnumValueDefinition : Description? EnumValue Directives[Const]?
   */
  parseEnumValueDefinition() {
    const t = this._lexer.token, r = this.parseDescription(), n = this.parseEnumValueName(), i = this.parseConstDirectives();
    return this.node(t, {
      kind: g.ENUM_VALUE_DEFINITION,
      description: r,
      name: n,
      directives: i
    });
  }
  /**
   * EnumValue : Name but not `true`, `false` or `null`
   */
  parseEnumValueName() {
    if (this._lexer.token.value === "true" || this._lexer.token.value === "false" || this._lexer.token.value === "null")
      throw D(
        this._lexer.source,
        this._lexer.token.start,
        `${tt(
          this._lexer.token
        )} is reserved and cannot be used for an enum value.`
      );
    return this.parseName();
  }
  /**
   * InputObjectTypeDefinition :
   *   - Description? input Name Directives[Const]? InputFieldsDefinition?
   */
  parseInputObjectTypeDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("input");
    const n = this.parseName(), i = this.parseConstDirectives(), o = this.parseInputFieldsDefinition();
    return this.node(t, {
      kind: g.INPUT_OBJECT_TYPE_DEFINITION,
      description: r,
      name: n,
      directives: i,
      fields: o
    });
  }
  /**
   * ```
   * InputFieldsDefinition : { InputValueDefinition+ }
   * ```
   */
  parseInputFieldsDefinition() {
    return this.optionalMany(
      _.BRACE_L,
      this.parseInputValueDef,
      _.BRACE_R
    );
  }
  /**
   * TypeSystemExtension :
   *   - SchemaExtension
   *   - TypeExtension
   *
   * TypeExtension :
   *   - ScalarTypeExtension
   *   - ObjectTypeExtension
   *   - InterfaceTypeExtension
   *   - UnionTypeExtension
   *   - EnumTypeExtension
   *   - InputObjectTypeDefinition
   */
  parseTypeSystemExtension() {
    const t = this._lexer.lookahead();
    if (t.kind === _.NAME)
      switch (t.value) {
        case "schema":
          return this.parseSchemaExtension();
        case "scalar":
          return this.parseScalarTypeExtension();
        case "type":
          return this.parseObjectTypeExtension();
        case "interface":
          return this.parseInterfaceTypeExtension();
        case "union":
          return this.parseUnionTypeExtension();
        case "enum":
          return this.parseEnumTypeExtension();
        case "input":
          return this.parseInputObjectTypeExtension();
      }
    throw this.unexpected(t);
  }
  /**
   * ```
   * SchemaExtension :
   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }
   *  - extend schema Directives[Const]
   * ```
   */
  parseSchemaExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("schema");
    const r = this.parseConstDirectives(), n = this.optionalMany(
      _.BRACE_L,
      this.parseOperationTypeDefinition,
      _.BRACE_R
    );
    if (r.length === 0 && n.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: g.SCHEMA_EXTENSION,
      directives: r,
      operationTypes: n
    });
  }
  /**
   * ScalarTypeExtension :
   *   - extend scalar Name Directives[Const]
   */
  parseScalarTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("scalar");
    const r = this.parseName(), n = this.parseConstDirectives();
    if (n.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: g.SCALAR_TYPE_EXTENSION,
      name: r,
      directives: n
    });
  }
  /**
   * ObjectTypeExtension :
   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend type Name ImplementsInterfaces? Directives[Const]
   *  - extend type Name ImplementsInterfaces
   */
  parseObjectTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("type");
    const r = this.parseName(), n = this.parseImplementsInterfaces(), i = this.parseConstDirectives(), o = this.parseFieldsDefinition();
    if (n.length === 0 && i.length === 0 && o.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: g.OBJECT_TYPE_EXTENSION,
      name: r,
      interfaces: n,
      directives: i,
      fields: o
    });
  }
  /**
   * InterfaceTypeExtension :
   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend interface Name ImplementsInterfaces? Directives[Const]
   *  - extend interface Name ImplementsInterfaces
   */
  parseInterfaceTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("interface");
    const r = this.parseName(), n = this.parseImplementsInterfaces(), i = this.parseConstDirectives(), o = this.parseFieldsDefinition();
    if (n.length === 0 && i.length === 0 && o.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: g.INTERFACE_TYPE_EXTENSION,
      name: r,
      interfaces: n,
      directives: i,
      fields: o
    });
  }
  /**
   * UnionTypeExtension :
   *   - extend union Name Directives[Const]? UnionMemberTypes
   *   - extend union Name Directives[Const]
   */
  parseUnionTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("union");
    const r = this.parseName(), n = this.parseConstDirectives(), i = this.parseUnionMemberTypes();
    if (n.length === 0 && i.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: g.UNION_TYPE_EXTENSION,
      name: r,
      directives: n,
      types: i
    });
  }
  /**
   * EnumTypeExtension :
   *   - extend enum Name Directives[Const]? EnumValuesDefinition
   *   - extend enum Name Directives[Const]
   */
  parseEnumTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("enum");
    const r = this.parseName(), n = this.parseConstDirectives(), i = this.parseEnumValuesDefinition();
    if (n.length === 0 && i.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: g.ENUM_TYPE_EXTENSION,
      name: r,
      directives: n,
      values: i
    });
  }
  /**
   * InputObjectTypeExtension :
   *   - extend input Name Directives[Const]? InputFieldsDefinition
   *   - extend input Name Directives[Const]
   */
  parseInputObjectTypeExtension() {
    const t = this._lexer.token;
    this.expectKeyword("extend"), this.expectKeyword("input");
    const r = this.parseName(), n = this.parseConstDirectives(), i = this.parseInputFieldsDefinition();
    if (n.length === 0 && i.length === 0)
      throw this.unexpected();
    return this.node(t, {
      kind: g.INPUT_OBJECT_TYPE_EXTENSION,
      name: r,
      directives: n,
      fields: i
    });
  }
  /**
   * ```
   * DirectiveDefinition :
   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations
   * ```
   */
  parseDirectiveDefinition() {
    const t = this._lexer.token, r = this.parseDescription();
    this.expectKeyword("directive"), this.expectToken(_.AT);
    const n = this.parseName(), i = this.parseArgumentDefs(), o = this.expectOptionalKeyword("repeatable");
    this.expectKeyword("on");
    const a = this.parseDirectiveLocations();
    return this.node(t, {
      kind: g.DIRECTIVE_DEFINITION,
      description: r,
      name: n,
      arguments: i,
      repeatable: o,
      locations: a
    });
  }
  /**
   * DirectiveLocations :
   *   - `|`? DirectiveLocation
   *   - DirectiveLocations | DirectiveLocation
   */
  parseDirectiveLocations() {
    return this.delimitedMany(_.PIPE, this.parseDirectiveLocation);
  }
  /*
   * DirectiveLocation :
   *   - ExecutableDirectiveLocation
   *   - TypeSystemDirectiveLocation
   *
   * ExecutableDirectiveLocation : one of
   *   `QUERY`
   *   `MUTATION`
   *   `SUBSCRIPTION`
   *   `FIELD`
   *   `FRAGMENT_DEFINITION`
   *   `FRAGMENT_SPREAD`
   *   `INLINE_FRAGMENT`
   *
   * TypeSystemDirectiveLocation : one of
   *   `SCHEMA`
   *   `SCALAR`
   *   `OBJECT`
   *   `FIELD_DEFINITION`
   *   `ARGUMENT_DEFINITION`
   *   `INTERFACE`
   *   `UNION`
   *   `ENUM`
   *   `ENUM_VALUE`
   *   `INPUT_OBJECT`
   *   `INPUT_FIELD_DEFINITION`
   */
  parseDirectiveLocation() {
    const t = this._lexer.token, r = this.parseName();
    if (Object.prototype.hasOwnProperty.call(Sr, r.value))
      return r;
    throw this.unexpected(t);
  }
  // Core parsing utility functions
  /**
   * Returns a node that, if configured to do so, sets a "loc" field as a
   * location object, used to identify the place in the source that created a
   * given parsed object.
   */
  node(t, r) {
    return this._options.noLocation !== !0 && (r.loc = new Zl(
      t,
      this._lexer.lastToken,
      this._lexer.source
    )), r;
  }
  /**
   * Determines if the next token is of a given kind
   */
  peek(t) {
    return this._lexer.token.kind === t;
  }
  /**
   * If the next token is of the given kind, return that token after advancing the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */
  expectToken(t) {
    const r = this._lexer.token;
    if (r.kind === t)
      return this.advanceLexer(), r;
    throw D(
      this._lexer.source,
      r.start,
      `Expected ${ro(t)}, found ${tt(r)}.`
    );
  }
  /**
   * If the next token is of the given kind, return "true" after advancing the lexer.
   * Otherwise, do not change the parser state and return "false".
   */
  expectOptionalToken(t) {
    return this._lexer.token.kind === t ? (this.advanceLexer(), !0) : !1;
  }
  /**
   * If the next token is a given keyword, advance the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */
  expectKeyword(t) {
    const r = this._lexer.token;
    if (r.kind === _.NAME && r.value === t)
      this.advanceLexer();
    else
      throw D(
        this._lexer.source,
        r.start,
        `Expected "${t}", found ${tt(r)}.`
      );
  }
  /**
   * If the next token is a given keyword, return "true" after advancing the lexer.
   * Otherwise, do not change the parser state and return "false".
   */
  expectOptionalKeyword(t) {
    const r = this._lexer.token;
    return r.kind === _.NAME && r.value === t ? (this.advanceLexer(), !0) : !1;
  }
  /**
   * Helper function for creating an error when an unexpected lexed token is encountered.
   */
  unexpected(t) {
    const r = t != null ? t : this._lexer.token;
    return D(
      this._lexer.source,
      r.start,
      `Unexpected ${tt(r)}.`
    );
  }
  /**
   * Returns a possibly empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  any(t, r, n) {
    this.expectToken(t);
    const i = [];
    for (; !this.expectOptionalToken(n); )
      i.push(r.call(this));
    return i;
  }
  /**
   * Returns a list of parse nodes, determined by the parseFn.
   * It can be empty only if open token is missing otherwise it will always return non-empty list
   * that begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  optionalMany(t, r, n) {
    if (this.expectOptionalToken(t)) {
      const i = [];
      do
        i.push(r.call(this));
      while (!this.expectOptionalToken(n));
      return i;
    }
    return [];
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */
  many(t, r, n) {
    this.expectToken(t);
    const i = [];
    do
      i.push(r.call(this));
    while (!this.expectOptionalToken(n));
    return i;
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.
   * Advances the parser to the next lex token after last item in the list.
   */
  delimitedMany(t, r) {
    this.expectOptionalToken(t);
    const n = [];
    do
      n.push(r.call(this));
    while (this.expectOptionalToken(t));
    return n;
  }
  advanceLexer() {
    const { maxTokens: t } = this._options, r = this._lexer.advance();
    if (t !== void 0 && r.kind !== _.EOF && (++this._tokenCounter, this._tokenCounter > t))
      throw D(
        this._lexer.source,
        r.start,
        `Document contains more that ${t} tokens. Parsing aborted.`
      );
  }
}
function tt(e) {
  const t = e.value;
  return ro(e.kind) + (t != null ? ` "${t}"` : "");
}
function ro(e) {
  return sf(e) ? `"${e}"` : e;
}
/*! js-cookie v3.0.5 | MIT */
function rt(e) {
  for (var t = 1; t < arguments.length; t++) {
    var r = arguments[t];
    for (var n in r)
      e[n] = r[n];
  }
  return e;
}
var Lf = {
  read: function(e) {
    return e[0] === '"' && (e = e.slice(1, -1)), e.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent);
  },
  write: function(e) {
    return encodeURIComponent(e).replace(
      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,
      decodeURIComponent
    );
  }
};
function Ar(e, t) {
  function r(i, o, a) {
    if (typeof document != "undefined") {
      a = rt({}, t, a), typeof a.expires == "number" && (a.expires = new Date(Date.now() + a.expires * 864e5)), a.expires && (a.expires = a.expires.toUTCString()), i = encodeURIComponent(i).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);
      var s = "";
      for (var u in a)
        a[u] && (s += "; " + u, a[u] !== !0 && (s += "=" + a[u].split(";")[0]));
      return document.cookie = i + "=" + e.write(o, i) + s;
    }
  }
  function n(i) {
    if (!(typeof document == "undefined" || arguments.length && !i)) {
      for (var o = document.cookie ? document.cookie.split("; ") : [], a = {}, s = 0; s < o.length; s++) {
        var u = o[s].split("="), c = u.slice(1).join("=");
        try {
          var l = decodeURIComponent(u[0]);
          if (a[l] = e.read(c, l), i === l)
            break;
        } catch (f) {
        }
      }
      return i ? a[i] : a;
    }
  }
  return Object.create(
    {
      set: r,
      get: n,
      remove: function(i, o) {
        r(
          i,
          "",
          rt({}, o, {
            expires: -1
          })
        );
      },
      withAttributes: function(i) {
        return Ar(this.converter, rt({}, this.attributes, i));
      },
      withConverter: function(i) {
        return Ar(rt({}, this.converter, i), this.attributes);
      }
    },
    {
      attributes: { value: Object.freeze(t) },
      converter: { value: Object.freeze(e) }
    }
  );
}
var nr = Ar(Lf, { path: "/" });
let zr = "localStorage", Nr = !0;
class bf {
  constructor() {
    O(this, "storage", {});
  }
  getItem(t) {
    var r;
    return (r = this.storage[t]) != null ? r : "";
  }
  setItem(t, r) {
    this.storage[t] = r;
  }
  removeItem(t) {
    delete this.storage[t];
  }
}
class wf {
  getItem(t) {
    var r;
    return (r = nr.get(t)) != null ? r : "";
  }
  setItem(t, r) {
    if (!Nr)
      return;
    const n = /* @__PURE__ */ new Date();
    n.setTime(n.getTime() + 9e5), nr.set(t, r, { expires: n });
  }
  removeItem(t) {
    Nr && nr.remove(t);
  }
}
let If = new bf();
const gt = new wf(), Yr = () => {
  try {
    switch (zr) {
      case "localStorage":
        return window.localStorage;
      case "sessionStorage":
        return window.sessionStorage;
    }
  } catch (e) {
    return If;
  }
}, zp = (e) => {
  zr = e;
}, Pf = (e) => {
  Nr = e;
}, no = (e) => Yr().getItem(e), io = (e, t) => (gt.setItem(e, t), Yr().setItem(e, t)), Cf = (e) => (gt.removeItem(e), Yr().removeItem(e)), Yp = (e) => {
  if (zr === "sessionStorage") {
    console.warn("highlight.io cannot use local storage; segment integration will not work");
    return;
  }
  const t = window.localStorage.setItem;
  window.localStorage.setItem = function() {
    const [r, n] = arguments;
    e({ keyName: r, keyValue: n }), t.apply(this, [r, n]);
  };
};
var Re;
(function(e) {
  e.SEGMENT_LAST_SENT_HASH_KEY = "HIGHLIGHT_SEGMENT_LAST_SENT_HASH_KEY", e.SESSION_ID = "sessionID", e.SESSION_DATA = "sessionData", e.USER_IDENTIFIER = "highlightIdentifier", e.USER_OBJECT = "highlightUserObject";
})(Re || (Re = {}));
const Lt = (e) => `${Re.SESSION_DATA}_${e}`;
let oo = "";
const xf = () => oo, Df = (e) => {
  e && (oo = e);
}, Mf = () => {
  var e;
  return (e = no(Re.SESSION_ID)) != null ? e : "";
}, kf = (e) => {
  io(Re.SESSION_ID, e);
}, Uf = (e) => {
  const t = Lt(e);
  return JSON.parse(no(t) || "{}");
}, ir = (e) => {
  e || (e = Mf());
  let t = Uf(e);
  if (t && t.lastPushTime && Date.now() - t.lastPushTime < 9e5)
    return t;
  Cf(Lt(e));
}, Bf = function(e) {
  if (!(e != null && e.sessionSecureID))
    return;
  const t = e.sessionSecureID;
  Df(t), io(Lt(t), JSON.stringify(e));
}, Hf = function() {
  const e = gt.getItem(Re.SESSION_ID);
  kf(e);
  const t = Lt(e), r = gt.getItem(t);
  try {
    Bf(JSON.parse(r));
  } catch (n) {
  }
}, Un = (e, t, r) => {
  const n = ao(t, e.headers, r);
  return F(M({}, e), {
    headers: n
  });
}, ao = (e, t, r) => {
  var i, o;
  const n = M({}, t);
  return r ? ((i = Object.keys(n)) == null || i.forEach((a) => {
    [...r].includes(a == null ? void 0 : a.toLowerCase()) || (n[a] = "[REDACTED]");
  }), n) : ((o = Object.keys(n)) == null || o.forEach((a) => {
    [...Ff, ...e].includes(a == null ? void 0 : a.toLowerCase()) && (n[a] = "[REDACTED]");
  }), n);
}, Ff = [
  "authorization",
  "cookie",
  "proxy-authorization",
  "token"
], so = [
  "https://www.googleapis.com/identitytoolkit",
  "https://securetoken.googleapis.com"
], uo = "X-Highlight-Request", Bn = (e) => {
  let t = e;
  return !e.startsWith("https://") && !e.startsWith("http://") && (t = `${window.location.origin}${t}`), t.replace(/\/+$/, "");
}, Gf = (e, { headersToRedact: t, headersToRecord: r, requestResponseSanitizer: n }) => {
  var u, c;
  let i = e;
  if (n) {
    let f = !0;
    try {
      i.request.body = JSON.parse(i.request.body);
    } catch (h) {
      f = !1;
    }
    let d = !0;
    try {
      i.response.body = JSON.parse(i.response.body);
    } catch (h) {
      d = !1;
    }
    try {
      i = n(i);
    } catch (h) {
    } finally {
      f = f && !!((u = i == null ? void 0 : i.request) != null && u.body), d = d && !!((c = i == null ? void 0 : i.response) != null && c.body), f && (i.request.body = JSON.stringify(i.request.body)), d && (i.response.body = JSON.stringify(i.response.body));
    }
    if (!i)
      return null;
  }
  const l = i, { request: o, response: a } = l, s = Ct(l, ["request", "response"]);
  return M({
    request: Un(o, t, r),
    response: Un(a, t, r)
  }, s);
}, Hn = (e, t, r, n) => {
  e.sort((u, c) => u.responseEnd - c.responseEnd);
  const i = {
    xmlhttprequest: {},
    others: {},
    fetch: {}
  }, o = e.reduce((u, c) => {
    const l = Bn(c.name);
    return c.initiatorType === r ? u[r][l] = [
      ...u[r][l] || [],
      c
    ] : u.others[l] = [
      ...u.others[l] || [],
      c
    ], u;
  }, i);
  let a = {};
  a = t.reduce((u, c) => {
    const l = Bn(c.request.url);
    return u[l] = [...u[l] || [], c], u;
  }, a);
  for (let u in o[r]) {
    const c = o[r][u], l = a[u];
    if (!l)
      continue;
    const f = Math.max(c.length - l.length, 0);
    for (let d = f; d < c.length; d++)
      c[d] && (c[d].requestResponsePair = l[d - f]);
  }
  let s = [];
  for (let u in o)
    for (let c in o[u])
      s = s.concat(o[u][c]);
  return s.sort((u, c) => u.fetchStart - c.fetchStart).reduce((u, c) => {
    let l = c.requestResponsePair;
    return l && (l = Gf(c.requestResponsePair, n), !l) || (c.toJSON = function() {
      const f = window.performance.timeOrigin;
      return {
        initiatorType: this.initiatorType,
        startTimeAbs: f + this.startTime,
        connectStartAbs: f + this.connectStart,
        connectEndAbs: f + this.connectEnd,
        domainLookupStartAbs: f + this.domainLookupStart,
        domainLookupEndAbs: f + this.domainLookupEnd,
        fetchStartAbs: f + this.fetchStart,
        redirectStartAbs: f + this.redirectStart,
        redirectEndAbs: f + this.redirectEnd,
        requestStartAbs: f + this.requestStart,
        responseStartAbs: f + this.responseStart,
        responseEndAbs: f + this.responseEnd,
        secureConnectionStartAbs: f + this.secureConnectionStart,
        workerStartAbs: f + this.workerStart,
        name: this.name,
        transferSize: this.transferSize,
        encodedBodySize: this.encodedBodySize,
        decodedBodySize: this.decodedBodySize,
        nextHopProtocol: this.nextHopProtocol,
        requestResponsePairs: l
      };
    }, u.push(c)), u;
  }, []);
}, jf = (e, t) => e.toLocaleLowerCase().includes("pub.highlight.io") || e.toLocaleLowerCase().includes("pub.highlight.io") || e.toLocaleLowerCase().includes("otel.highlight.io") || t.some((r) => e.toLocaleLowerCase().includes(r)), bt = (e, t, r) => !jf(e, t) || Wr(e, r != null ? r : [], []), Wr = (e, t, r) => {
  var o;
  if (r.some((a) => e.toLowerCase().includes(a)))
    return !1;
  let n = [];
  t === !0 ? (n = ["localhost", /^\//], (o = window == null ? void 0 : window.location) != null && o.host && n.push(window.location.host)) : t instanceof Array && (n = t);
  let i = !1;
  return n.forEach((a) => {
    e.match(a) && (i = !0);
  }), i;
};
function Vf(e) {
  for (var t = "", r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", n = r.length, i = 0; i < e; i++)
    t += r.charAt(Math.floor(Math.random() * n));
  return t;
}
const Kr = () => {
  const e = Vf(10), t = Np(), r = t == null ? void 0 : t.spanContext().traceId;
  return [xf(), r != null ? r : e];
}, co = (e, t) => e + "/" + t, $f = (e, t, r, n, i, o) => {
  const a = XMLHttpRequest.prototype, s = a.open, u = a.send, c = a.setRequestHeader;
  return a.open = function(l, f) {
    return typeof f == "string" ? this._url = f : this._url = f.toString(), this._method = l, this._requestHeaders = {}, this._shouldRecordHeaderAndBody = !n.some((d) => this._url.toLowerCase().includes(d)), s.apply(this, arguments);
  }, a.setRequestHeader = function(l, f) {
    return this._requestHeaders[l] = f, c.apply(this, arguments);
  }, a.send = function(l) {
    if (!bt(this._url, t, r))
      return u.apply(this, arguments);
    const [f, d] = Kr();
    Wr(this._url, r, n) && this.setRequestHeader(uo, co(f, d));
    const h = this._shouldRecordHeaderAndBody, E = {
      sessionSecureID: f,
      id: d,
      url: this._url,
      verb: this._method,
      headers: h ? this._requestHeaders : {},
      body: void 0
    };
    if (h && l) {
      const p = Fn(l, E.url);
      p && (this._body = p, E.body = Q(p, i, o, E.headers));
    }
    return this.addEventListener("load", function() {
      return G(this, null, function* () {
        const p = {
          status: this.status,
          headers: {},
          body: void 0
        };
        if (h) {
          const S = this.getAllResponseHeaders().trim().split(/[\r\n]+/), b = {};
          if (S.forEach(function(I) {
            const H = I.split(": "), B = H.shift();
            b[B] = H.join(": ");
          }), p.headers = b, l) {
            const I = Fn(l, E.url);
            I && (E.body = Q(I, i, o, p.headers));
          }
          if (this.responseType === "" || this.responseType === "text")
            p.body = Q(this.responseText, i, o, p.headers), p.size = this.responseText.length * 8;
          else if (this.responseType === "blob") {
            if (this.response instanceof Blob)
              try {
                const I = yield this.response.text();
                p.body = Q(I, i, o, p.headers), p.size = this.response.size;
              } catch (I) {
              }
          } else
            try {
              p.body = Q(this.response, i, o, p.headers);
            } catch (I) {
            }
        }
        e({
          request: E,
          response: p,
          urlBlocked: !h
        });
      });
    }), this.addEventListener("error", function() {
      return G(this, null, function* () {
        const p = {
          status: this.status,
          headers: void 0,
          body: void 0
        };
        e({
          request: E,
          response: p,
          urlBlocked: !1
        });
      });
    }), u.apply(this, arguments);
  }, () => {
    a.open = s, a.send = u, a.setRequestHeader = c;
  };
}, Fn = (e, t) => {
  if (typeof e == "string") {
    if (!((t != null && t.includes("localhost") || t != null && t.includes("highlight.run")) && e.includes("pushPayload")))
      return e;
  } else if (typeof e == "object" || typeof e == "number" || typeof e == "boolean")
    return lt(e);
  return null;
}, Gn = 64 * 1024, Xf = {
  "application/json": 64 * 1024 * 1024,
  // MB
  "text/plain": 64 * 1024 * 1024
  // MB
}, Q = (e, t, r, n) => {
  var o, a, s;
  let i = Gn;
  if (n) {
    let u = "";
    typeof n.get == "function" ? u = (o = n.get("content-type")) != null ? o : "" : u = (a = n["content-type"]) != null ? a : "";
    try {
      u = u.split(";")[0];
    } catch (c) {
    }
    i = (s = Xf[u]) != null ? s : Gn;
  }
  if (e) {
    if (t)
      try {
        const u = JSON.parse(e);
        Array.isArray(u) ? u.forEach((c) => {
          Object.keys(c).forEach((l) => {
            t.includes(l.toLocaleLowerCase()) && (c[l] = "[REDACTED]");
          });
        }) : Object.keys(u).forEach((c) => {
          t.includes(c.toLocaleLowerCase()) && (u[c] = "[REDACTED]");
        }), e = JSON.stringify(u);
      } catch (u) {
      }
    if (r)
      try {
        const u = JSON.parse(e);
        Object.keys(u).forEach((c) => {
          r.includes(c.toLocaleLowerCase()) || (u[c] = "[REDACTED]");
        }), e = JSON.stringify(u);
      } catch (u) {
      }
  }
  try {
    e = e.slice(0, i);
  } catch (u) {
  }
  return e;
}, qf = (e, t, r, n, i, o) => {
  const a = window._fetchProxy;
  return window._fetchProxy = function(s, u) {
    const { method: c, url: l } = zf(s, u);
    if (!bt(l, t, r))
      return a.call(this, s, u);
    const [f, d] = Kr();
    if (Wr(l, r, n)) {
      u = u || {};
      let v = new Headers(u.headers);
      s instanceof Request && [...s.headers].forEach(([T, S]) => v.set(T, S)), v.set(uo, co(f, d)), u.headers = Object.fromEntries(v.entries());
    }
    const h = {
      sessionSecureID: f,
      id: d,
      headers: {},
      body: void 0,
      url: l,
      verb: c
    }, E = !n.some((v) => l.toLowerCase().includes(v));
    E && (h.headers = Object.fromEntries(new Headers(u == null ? void 0 : u.headers).entries()), h.body = Q(u == null ? void 0 : u.body, i, o, u == null ? void 0 : u.headers));
    let p = a.call(this, s, u);
    return Yf(p, h, e, E, i, o), p;
  }, () => {
    window._fetchProxy = a;
  };
}, zf = (e, t) => {
  const r = t && t.method || typeof e == "object" && "method" in e && e.method || "GET";
  let n;
  return typeof e == "object" ? "url" in e && e.url ? n = e.url : n = e.toString() : n = e, {
    method: r,
    url: n
  };
}, Yf = (e, t, r, n, i, o) => {
  const a = (s) => G(void 0, null, function* () {
    let u = {
      body: void 0,
      headers: void 0,
      status: 0,
      size: 0
    }, c = !1, l = !n;
    "stack" in s || s instanceof Error ? (u = F(M({}, u), {
      body: s.message,
      status: 0,
      size: void 0
    }), c = !0) : "status" in s && (u = F(M({}, u), {
      status: s.status
    }), n && (u.body = yield lo(s, o, i), u.headers = Object.fromEntries(s.headers.entries()), u.size = u.body.length * 8), (s.type === "opaque" || s.type === "opaqueredirect") && (l = !0, u = F(M({}, u), {
      body: "CORS blocked request"
    })), c = !0), c && r({
      request: t,
      response: u,
      urlBlocked: l
    });
  });
  e.then(a).catch(() => {
  });
}, lo = (e, t, r) => G(void 0, null, function* () {
  let n;
  try {
    const o = e.clone().body;
    if (o) {
      let a = o.getReader(), s = new TextDecoder(), u, c = "";
      for (; !(u = yield a.read()).done; ) {
        let l = u.value;
        c += s.decode(l);
      }
      n = c, n = Q(n, r, t, e.headers);
    } else
      n = "";
  } catch (i) {
    n = `Unable to clone response: ${i}`;
  }
  return n;
});
var Wf = "=", Lr = ";", fo = ",", Kf = 8192, Jf = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function Qf(e) {
  return e.reduce(function(t, r) {
    var n = "" + t + (t !== "" ? fo : "") + r;
    return n.length > Kf ? t : n;
  }, "");
}
function Zf(e) {
  return e.getAllEntries().map(function(t) {
    var r = Jf(t, 2), n = r[0], i = r[1], o = encodeURIComponent(n) + "=" + encodeURIComponent(i.value);
    return i.metadata !== void 0 && (o += Lr + i.metadata.toString()), o;
  });
}
function po(e) {
  var t = e.split(Lr);
  if (!(t.length <= 0)) {
    var r = t.shift();
    if (r) {
      var n = r.indexOf(Wf);
      if (!(n <= 0)) {
        var i = decodeURIComponent(r.substring(0, n).trim()), o = decodeURIComponent(r.substring(n + 1).trim()), a;
        return t.length > 0 && (a = kr(t.join(Lr))), { key: i, value: o, metadata: a };
      }
    }
  }
}
function ed(e) {
  return typeof e != "string" || e.length === 0 ? {} : e.split(fo).map(function(t) {
    return po(t);
  }).filter(function(t) {
    return t !== void 0 && t.value.length > 0;
  }).reduce(function(t, r) {
    return t[r.key] = r.value, t;
  }, {});
}
var br;
(function(e) {
  e.AlwaysOff = "always_off", e.AlwaysOn = "always_on", e.ParentBasedAlwaysOff = "parentbased_always_off", e.ParentBasedAlwaysOn = "parentbased_always_on", e.ParentBasedTraceIdRatio = "parentbased_traceidratio", e.TraceIdRatio = "traceidratio";
})(br || (br = {}));
var td = ",", rd = ["OTEL_SDK_DISABLED"];
function nd(e) {
  return rd.indexOf(e) > -1;
}
var id = [
  "OTEL_BSP_EXPORT_TIMEOUT",
  "OTEL_BSP_MAX_EXPORT_BATCH_SIZE",
  "OTEL_BSP_MAX_QUEUE_SIZE",
  "OTEL_BSP_SCHEDULE_DELAY",
  "OTEL_BLRP_EXPORT_TIMEOUT",
  "OTEL_BLRP_MAX_EXPORT_BATCH_SIZE",
  "OTEL_BLRP_MAX_QUEUE_SIZE",
  "OTEL_BLRP_SCHEDULE_DELAY",
  "OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT",
  "OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT",
  "OTEL_SPAN_EVENT_COUNT_LIMIT",
  "OTEL_SPAN_LINK_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT",
  "OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT",
  "OTEL_EXPORTER_OTLP_TIMEOUT",
  "OTEL_EXPORTER_OTLP_TRACES_TIMEOUT",
  "OTEL_EXPORTER_OTLP_METRICS_TIMEOUT",
  "OTEL_EXPORTER_OTLP_LOGS_TIMEOUT",
  "OTEL_EXPORTER_JAEGER_AGENT_PORT"
];
function od(e) {
  return id.indexOf(e) > -1;
}
var ad = [
  "OTEL_NO_PATCH_MODULES",
  "OTEL_PROPAGATORS"
];
function sd(e) {
  return ad.indexOf(e) > -1;
}
var or = 1 / 0, ar = 128, ud = 128, cd = 128, ho = {
  OTEL_SDK_DISABLED: !1,
  CONTAINER_NAME: "",
  ECS_CONTAINER_METADATA_URI_V4: "",
  ECS_CONTAINER_METADATA_URI: "",
  HOSTNAME: "",
  KUBERNETES_SERVICE_HOST: "",
  NAMESPACE: "",
  OTEL_BSP_EXPORT_TIMEOUT: 3e4,
  OTEL_BSP_MAX_EXPORT_BATCH_SIZE: 512,
  OTEL_BSP_MAX_QUEUE_SIZE: 2048,
  OTEL_BSP_SCHEDULE_DELAY: 5e3,
  OTEL_BLRP_EXPORT_TIMEOUT: 3e4,
  OTEL_BLRP_MAX_EXPORT_BATCH_SIZE: 512,
  OTEL_BLRP_MAX_QUEUE_SIZE: 2048,
  OTEL_BLRP_SCHEDULE_DELAY: 5e3,
  OTEL_EXPORTER_JAEGER_AGENT_HOST: "",
  OTEL_EXPORTER_JAEGER_AGENT_PORT: 6832,
  OTEL_EXPORTER_JAEGER_ENDPOINT: "",
  OTEL_EXPORTER_JAEGER_PASSWORD: "",
  OTEL_EXPORTER_JAEGER_USER: "",
  OTEL_EXPORTER_OTLP_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_LOGS_ENDPOINT: "",
  OTEL_EXPORTER_OTLP_HEADERS: "",
  OTEL_EXPORTER_OTLP_TRACES_HEADERS: "",
  OTEL_EXPORTER_OTLP_METRICS_HEADERS: "",
  OTEL_EXPORTER_OTLP_LOGS_HEADERS: "",
  OTEL_EXPORTER_OTLP_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_TRACES_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_METRICS_TIMEOUT: 1e4,
  OTEL_EXPORTER_OTLP_LOGS_TIMEOUT: 1e4,
  OTEL_EXPORTER_ZIPKIN_ENDPOINT: "http://localhost:9411/api/v2/spans",
  OTEL_LOG_LEVEL: N.INFO,
  OTEL_NO_PATCH_MODULES: [],
  OTEL_PROPAGATORS: ["tracecontext", "baggage"],
  OTEL_RESOURCE_ATTRIBUTES: "",
  OTEL_SERVICE_NAME: "",
  OTEL_ATTRIBUTE_VALUE_LENGTH_LIMIT: or,
  OTEL_ATTRIBUTE_COUNT_LIMIT: ar,
  OTEL_SPAN_ATTRIBUTE_VALUE_LENGTH_LIMIT: or,
  OTEL_SPAN_ATTRIBUTE_COUNT_LIMIT: ar,
  OTEL_LOGRECORD_ATTRIBUTE_VALUE_LENGTH_LIMIT: or,
  OTEL_LOGRECORD_ATTRIBUTE_COUNT_LIMIT: ar,
  OTEL_SPAN_EVENT_COUNT_LIMIT: 128,
  OTEL_SPAN_LINK_COUNT_LIMIT: 128,
  OTEL_SPAN_ATTRIBUTE_PER_EVENT_COUNT_LIMIT: ud,
  OTEL_SPAN_ATTRIBUTE_PER_LINK_COUNT_LIMIT: cd,
  OTEL_TRACES_EXPORTER: "",
  OTEL_TRACES_SAMPLER: br.ParentBasedAlwaysOn,
  OTEL_TRACES_SAMPLER_ARG: "",
  OTEL_LOGS_EXPORTER: "",
  OTEL_EXPORTER_OTLP_INSECURE: "",
  OTEL_EXPORTER_OTLP_TRACES_INSECURE: "",
  OTEL_EXPORTER_OTLP_METRICS_INSECURE: "",
  OTEL_EXPORTER_OTLP_LOGS_INSECURE: "",
  OTEL_EXPORTER_OTLP_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_TRACES_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_METRICS_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_LOGS_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_TRACES_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_METRICS_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_LOGS_COMPRESSION: "",
  OTEL_EXPORTER_OTLP_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_TRACES_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_LOGS_CLIENT_KEY: "",
  OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_TRACES_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_LOGS_CLIENT_CERTIFICATE: "",
  OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_TRACES_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_METRICS_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_LOGS_PROTOCOL: "http/protobuf",
  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: "cumulative"
};
function ld(e, t, r) {
  if (typeof r[e] != "undefined") {
    var n = String(r[e]);
    t[e] = n.toLowerCase() === "true";
  }
}
function fd(e, t, r, n, i) {
  if (n === void 0 && (n = -1 / 0), i === void 0 && (i = 1 / 0), typeof r[e] != "undefined") {
    var o = Number(r[e]);
    isNaN(o) || (o < n ? t[e] = n : o > i ? t[e] = i : t[e] = o);
  }
}
function dd(e, t, r, n) {
  n === void 0 && (n = td);
  var i = r[e];
  typeof i == "string" && (t[e] = i.split(n).map(function(o) {
    return o.trim();
  }));
}
var pd = {
  ALL: N.ALL,
  VERBOSE: N.VERBOSE,
  DEBUG: N.DEBUG,
  INFO: N.INFO,
  WARN: N.WARN,
  ERROR: N.ERROR,
  NONE: N.NONE
};
function hd(e, t, r) {
  var n = r[e];
  if (typeof n == "string") {
    var i = pd[n.toUpperCase()];
    i != null && (t[e] = i);
  }
}
function _d(e) {
  var t = {};
  for (var r in ho) {
    var n = r;
    switch (n) {
      case "OTEL_LOG_LEVEL":
        hd(n, t, e);
        break;
      default:
        if (nd(n))
          ld(n, t, e);
        else if (od(n))
          fd(n, t, e);
        else if (sd(n))
          dd(n, t, e);
        else {
          var i = e[n];
          typeof i != "undefined" && i !== null && (t[n] = String(i));
        }
    }
  }
  return t;
}
var Ed = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof window == "object" ? window : typeof global == "object" ? global : {};
function wr() {
  var e = _d(Ed);
  return Object.assign({}, ho, e);
}
var _e;
(function(e) {
  e[e.SUCCESS = 0] = "SUCCESS", e[e.FAILED = 1] = "FAILED";
})(_e || (_e = {}));
var Td = (
  /** @class */
  function() {
    function e() {
      var t = this;
      this._promise = new Promise(function(r, n) {
        t._resolve = r, t._reject = n;
      });
    }
    return Object.defineProperty(e.prototype, "promise", {
      get: function() {
        return this._promise;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.resolve = function(t) {
      this._resolve(t);
    }, e.prototype.reject = function(t) {
      this._reject(t);
    }, e;
  }()
), vd = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, gd = function(e, t, r) {
  if (r || arguments.length === 2) for (var n = 0, i = t.length, o; n < i; n++)
    (o || !(n in t)) && (o || (o = Array.prototype.slice.call(t, 0, n)), o[n] = t[n]);
  return e.concat(o || Array.prototype.slice.call(t));
}, yd = (
  /** @class */
  function() {
    function e(t, r) {
      this._callback = t, this._that = r, this._isCalled = !1, this._deferred = new Td();
    }
    return Object.defineProperty(e.prototype, "isCalled", {
      get: function() {
        return this._isCalled;
      },
      enumerable: !1,
      configurable: !0
    }), Object.defineProperty(e.prototype, "promise", {
      get: function() {
        return this._deferred.promise;
      },
      enumerable: !1,
      configurable: !0
    }), e.prototype.call = function() {
      for (var t, r = this, n = [], i = 0; i < arguments.length; i++)
        n[i] = arguments[i];
      if (!this._isCalled) {
        this._isCalled = !0;
        try {
          Promise.resolve((t = this._callback).call.apply(t, gd([this._that], vd(n), !1))).then(function(o) {
            return r._deferred.resolve(o);
          }, function(o) {
            return r._deferred.reject(o);
          });
        } catch (o) {
          this._deferred.reject(o);
        }
      }
      return this._deferred.promise;
    }, e;
  }()
), md = {
  getKeyPairs: Zf,
  serializeKeyPairs: Qf,
  parseKeyPairsIntoRecord: ed,
  parsePairKeyValue: po
}, Od = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, _o = 1e4;
function Sd(e) {
  e === void 0 && (e = {});
  var t = {};
  return Object.entries(e).forEach(function(r) {
    var n = Od(r, 2), i = n[0], o = n[1];
    typeof o != "undefined" ? t[i] = String(o) : m.warn('Header "' + i + '" has invalid value (' + o + ") and will be ignored");
  }), t;
}
function Rd(e) {
  return typeof e == "number" ? e <= 0 ? Eo(e, _o) : e : Ad();
}
function Ad() {
  var e, t = Number((e = wr().OTEL_EXPORTER_OTLP_TRACES_TIMEOUT) !== null && e !== void 0 ? e : wr().OTEL_EXPORTER_OTLP_TIMEOUT);
  return t <= 0 ? Eo(t, _o) : t;
}
function Eo(e, t) {
  return m.warn("Timeout must be greater than 0", e), t;
}
function Nd(e) {
  var t = [429, 502, 503, 504];
  return t.includes(e);
}
function Ld(e) {
  if (e == null)
    return -1;
  var t = Number.parseInt(e, 10);
  if (Number.isInteger(t))
    return t > 0 ? t * 1e3 : -1;
  var r = new Date(e).getTime() - Date.now();
  return r >= 0 ? r : 0;
}
var bd = (
  /** @class */
  function() {
    function e(t) {
      t === void 0 && (t = {}), this._sendingPromises = [], this.url = this.getDefaultUrl(t), typeof t.hostname == "string" && (this.hostname = t.hostname), this.shutdown = this.shutdown.bind(this), this._shutdownOnce = new yd(this._shutdown, this), this._concurrencyLimit = typeof t.concurrencyLimit == "number" ? t.concurrencyLimit : 30, this.timeoutMillis = Rd(t.timeoutMillis), this.onInit(t);
    }
    return e.prototype.export = function(t, r) {
      if (this._shutdownOnce.isCalled) {
        r({
          code: _e.FAILED,
          error: new Error("Exporter has been shutdown")
        });
        return;
      }
      if (this._sendingPromises.length >= this._concurrencyLimit) {
        r({
          code: _e.FAILED,
          error: new Error("Concurrent export limit reached")
        });
        return;
      }
      this._export(t).then(function() {
        r({ code: _e.SUCCESS });
      }).catch(function(n) {
        r({ code: _e.FAILED, error: n });
      });
    }, e.prototype._export = function(t) {
      var r = this;
      return new Promise(function(n, i) {
        try {
          m.debug("items to be sent", t), r.send(t, n, i);
        } catch (o) {
          i(o);
        }
      });
    }, e.prototype.shutdown = function() {
      return this._shutdownOnce.call();
    }, e.prototype.forceFlush = function() {
      return Promise.all(this._sendingPromises).then(function() {
      });
    }, e.prototype._shutdown = function() {
      return m.debug("shutdown started"), this.onShutdown(), this.forceFlush();
    }, e;
  }()
), wd = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), jn = (
  /** @class */
  function(e) {
    wd(t, e);
    function t(r, n, i) {
      var o = e.call(this, r) || this;
      return o.name = "OTLPExporterError", o.data = i, o.code = n, o;
    }
    return t;
  }(Error)
), Id = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
}, Pd = (
  /** @class */
  function() {
    function e(t) {
      this._parameters = t;
    }
    return e.prototype.send = function(t, r) {
      var n = this;
      return new Promise(function(i) {
        var o = new XMLHttpRequest();
        o.timeout = r, o.open("POST", n._parameters.url), Object.entries(n._parameters.headers).forEach(function(a) {
          var s = Id(a, 2), u = s[0], c = s[1];
          o.setRequestHeader(u, c);
        }), o.ontimeout = function(a) {
          i({
            status: "failure",
            error: new Error("XHR request timed out")
          });
        }, o.onreadystatechange = function() {
          o.status >= 200 && o.status <= 299 ? (m.debug("XHR success"), i({
            status: "success"
          })) : o.status && Nd(o.status) ? i({
            status: "retryable",
            retryInMillis: Ld(o.getResponseHeader("Retry-After"))
          }) : o.status !== 0 && i({
            status: "failure",
            error: new Error("XHR request failed with non-retryable status")
          });
        }, o.onabort = function() {
          i({
            status: "failure",
            error: new Error("XHR request aborted")
          });
        }, o.onerror = function() {
          i({
            status: "failure",
            error: new Error("XHR request errored")
          });
        }, o.send(new Blob([t], { type: n._parameters.headers["Content-Type"] }));
      });
    }, e.prototype.shutdown = function() {
    }, e;
  }()
);
function Cd(e) {
  return new Pd(e);
}
var xd = (
  /** @class */
  function() {
    function e(t) {
      this._params = t;
    }
    return e.prototype.send = function(t) {
      var r = this;
      return new Promise(function(n) {
        navigator.sendBeacon(r._params.url, new Blob([t], { type: r._params.blobType })) ? (m.debug("SendBeacon success"), n({
          status: "success"
        })) : n({
          status: "failure",
          error: new Error("SendBeacon failed")
        });
      });
    }, e.prototype.shutdown = function() {
    }, e;
  }()
);
function Dd(e) {
  return new xd(e);
}
var Md = function(e, t, r, n) {
  function i(o) {
    return o instanceof r ? o : new r(function(a) {
      a(o);
    });
  }
  return new (r || (r = Promise))(function(o, a) {
    function s(l) {
      try {
        c(n.next(l));
      } catch (f) {
        a(f);
      }
    }
    function u(l) {
      try {
        c(n.throw(l));
      } catch (f) {
        a(f);
      }
    }
    function c(l) {
      l.done ? o(l.value) : i(l.value).then(s, u);
    }
    c((n = n.apply(e, t || [])).next());
  });
}, kd = function(e, t) {
  var r = { label: 0, sent: function() {
    if (o[0] & 1) throw o[1];
    return o[1];
  }, trys: [], ops: [] }, n, i, o, a;
  return a = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol == "function" && (a[Symbol.iterator] = function() {
    return this;
  }), a;
  function s(c) {
    return function(l) {
      return u([c, l]);
    };
  }
  function u(c) {
    if (n) throw new TypeError("Generator is already executing.");
    for (; r; ) try {
      if (n = 1, i && (o = c[0] & 2 ? i.return : c[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, c[1])).done) return o;
      switch (i = 0, o && (c = [c[0] & 2, o.value]), c[0]) {
        case 0:
        case 1:
          o = c;
          break;
        case 4:
          return r.label++, { value: c[1], done: !1 };
        case 5:
          r.label++, i = c[1], c = [0];
          continue;
        case 7:
          c = r.ops.pop(), r.trys.pop();
          continue;
        default:
          if (o = r.trys, !(o = o.length > 0 && o[o.length - 1]) && (c[0] === 6 || c[0] === 2)) {
            r = 0;
            continue;
          }
          if (c[0] === 3 && (!o || c[1] > o[0] && c[1] < o[3])) {
            r.label = c[1];
            break;
          }
          if (c[0] === 6 && r.label < o[1]) {
            r.label = o[1], o = c;
            break;
          }
          if (o && r.label < o[2]) {
            r.label = o[2], r.ops.push(c);
            break;
          }
          o[2] && r.ops.pop(), r.trys.pop();
          continue;
      }
      c = t.call(e, r);
    } catch (l) {
      c = [6, l], i = 0;
    } finally {
      n = o = 0;
    }
    if (c[0] & 5) throw c[1];
    return { value: c[0] ? c[1] : void 0, done: !0 };
  }
}, Ud = 5, Bd = 1e3, Hd = 5e3, Fd = 1.5, Vn = 0.2;
function Gd() {
  return Math.random() * (2 * Vn) - Vn;
}
var jd = (
  /** @class */
  function() {
    function e(t) {
      this._transport = t;
    }
    return e.prototype.retry = function(t, r, n) {
      var i = this;
      return new Promise(function(o, a) {
        setTimeout(function() {
          i._transport.send(t, r).then(o, a);
        }, n);
      });
    }, e.prototype.send = function(t, r) {
      var n;
      return Md(this, void 0, void 0, function() {
        var i, o, a, s, u, c, l;
        return kd(this, function(f) {
          switch (f.label) {
            case 0:
              return i = Date.now() + r, [4, this._transport.send(t, r)];
            case 1:
              o = f.sent(), a = Ud, s = Bd, f.label = 2;
            case 2:
              return o.status === "retryable" && a > 0 ? (a--, u = Math.max(Math.min(s, Hd) + Gd(), 0), s = s * Fd, c = (n = o.retryInMillis) !== null && n !== void 0 ? n : u, l = i - Date.now(), c > l ? [2, o] : [4, this.retry(t, l, c)]) : [3, 4];
            case 3:
              return o = f.sent(), [3, 2];
            case 4:
              return [2, o];
          }
        });
      });
    }, e.prototype.shutdown = function() {
      return this._transport.shutdown();
    }, e;
  }()
);
function Vd(e) {
  return new jd(e.transport);
}
var $d = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), Xd = (
  /** @class */
  function(e) {
    $d(t, e);
    function t(r, n, i) {
      r === void 0 && (r = {});
      var o = e.call(this, r) || this;
      o._serializer = n;
      var a = !!r.headers || typeof navigator.sendBeacon != "function";
      return a ? o._transport = Vd({
        transport: Cd({
          headers: Object.assign({}, Sd(r.headers), md.parseKeyPairsIntoRecord(wr().OTEL_EXPORTER_OTLP_HEADERS), { "Content-Type": i }),
          url: o.url
        })
      }) : o._transport = Dd({
        url: o.url,
        blobType: i
      }), o;
    }
    return t.prototype.onInit = function() {
    }, t.prototype.onShutdown = function() {
    }, t.prototype.send = function(r, n, i) {
      var o = this;
      if (this._shutdownOnce.isCalled) {
        m.debug("Shutdown already started. Cannot send objects");
        return;
      }
      var a = this._serializer.serializeRequest(r);
      if (a == null) {
        i(new Error("Could not serialize message"));
        return;
      }
      var s = this._transport.send(a, this.timeoutMillis).then(function(c) {
        c.status === "success" ? n() : c.status === "failure" && c.error ? i(c.error) : c.status === "retryable" ? i(new jn("Export failed with retryable status")) : i(new jn("Export failed with unknown error"));
      }, i);
      this._sendingPromises.push(s);
      var u = function() {
        var c = o._sendingPromises.indexOf(s);
        o._sendingPromises.splice(c, 1);
      };
      s.then(u, u);
    }, t;
  }(bd)
);
function $n(e) {
  return e >= 48 && e <= 57 ? e - 48 : e >= 97 && e <= 102 ? e - 87 : e - 55;
}
function Jr(e) {
  for (var t = new Uint8Array(e.length / 2), r = 0, n = 0; n < e.length; n += 2) {
    var i = $n(e.charCodeAt(n)), o = $n(e.charCodeAt(n + 1));
    t[r++] = i << 4 | o;
  }
  return t;
}
var qd = 9, zd = Math.pow(10, qd);
function Yd(e) {
  return e[0] * zd + e[1];
}
function To(e) {
  var t = BigInt(1e9);
  return BigInt(e[0]) * t + BigInt(e[1]);
}
function Wd(e) {
  var t = Number(BigInt.asUintN(32, e)), r = Number(BigInt.asUintN(32, e >> BigInt(32)));
  return { low: t, high: r };
}
function vo(e) {
  var t = To(e);
  return Wd(t);
}
function Kd(e) {
  var t = To(e);
  return t.toString();
}
var Jd = typeof BigInt != "undefined" ? Kd : Yd;
function Xn(e) {
  return e;
}
function go(e) {
  if (e !== void 0)
    return Jr(e);
}
var Qd = {
  encodeHrTime: vo,
  encodeSpanContext: Jr,
  encodeOptionalSpanContext: go
};
function Zd(e) {
  var t, r;
  if (e === void 0)
    return Qd;
  var n = (t = e.useLongBits) !== null && t !== void 0 ? t : !0, i = (r = e.useHex) !== null && r !== void 0 ? r : !1;
  return {
    encodeHrTime: n ? vo : Jd,
    encodeSpanContext: i ? Xn : Jr,
    encodeOptionalSpanContext: i ? Xn : go
  };
}
var ep = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function tp(e) {
  return {
    name: e.name,
    version: e.version
  };
}
function wt(e) {
  return Object.keys(e).map(function(t) {
    return yo(t, e[t]);
  });
}
function yo(e, t) {
  return {
    key: e,
    value: mo(t)
  };
}
function mo(e) {
  var t = typeof e;
  return t === "string" ? { stringValue: e } : t === "number" ? Number.isInteger(e) ? { intValue: e } : { doubleValue: e } : t === "boolean" ? { boolValue: e } : e instanceof Uint8Array ? { bytesValue: e } : Array.isArray(e) ? { arrayValue: { values: e.map(mo) } } : t === "object" && e != null ? {
    kvlistValue: {
      values: Object.entries(e).map(function(r) {
        var n = ep(r, 2), i = n[0], o = n[1];
        return yo(i, o);
      })
    }
  } : {};
}
function rp(e, t) {
  var r, n = e.spanContext(), i = e.status;
  return {
    traceId: t.encodeSpanContext(n.traceId),
    spanId: t.encodeSpanContext(n.spanId),
    parentSpanId: t.encodeOptionalSpanContext(e.parentSpanId),
    traceState: (r = n.traceState) === null || r === void 0 ? void 0 : r.serialize(),
    name: e.name,
    // Span kind is offset by 1 because the API does not define a value for unset
    kind: e.kind == null ? 0 : e.kind + 1,
    startTimeUnixNano: t.encodeHrTime(e.startTime),
    endTimeUnixNano: t.encodeHrTime(e.endTime),
    attributes: wt(e.attributes),
    droppedAttributesCount: e.droppedAttributesCount,
    events: e.events.map(function(o) {
      return ip(o, t);
    }),
    droppedEventsCount: e.droppedEventsCount,
    status: {
      // API and proto enums share the same values
      code: i.code,
      message: i.message
    },
    links: e.links.map(function(o) {
      return np(o, t);
    }),
    droppedLinksCount: e.droppedLinksCount
  };
}
function np(e, t) {
  var r;
  return {
    attributes: e.attributes ? wt(e.attributes) : [],
    spanId: t.encodeSpanContext(e.context.spanId),
    traceId: t.encodeSpanContext(e.context.traceId),
    traceState: (r = e.context.traceState) === null || r === void 0 ? void 0 : r.serialize(),
    droppedAttributesCount: e.droppedAttributesCount || 0
  };
}
function ip(e, t) {
  return {
    attributes: e.attributes ? wt(e.attributes) : [],
    name: e.name,
    timeUnixNano: t.encodeHrTime(e.time),
    droppedAttributesCount: e.droppedAttributesCount || 0
  };
}
function op(e) {
  return {
    attributes: wt(e.attributes),
    droppedAttributesCount: 0
  };
}
var ap = function(e) {
  var t = typeof Symbol == "function" && Symbol.iterator, r = t && e[t], n = 0;
  if (r) return r.call(e);
  if (e && typeof e.length == "number") return {
    next: function() {
      return e && n >= e.length && (e = void 0), { value: e && e[n++], done: !e };
    }
  };
  throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.");
}, sp = function(e, t) {
  var r = typeof Symbol == "function" && e[Symbol.iterator];
  if (!r) return e;
  var n = r.call(e), i, o = [], a;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = n.next()).done; ) o.push(i.value);
  } catch (s) {
    a = { error: s };
  } finally {
    try {
      i && !i.done && (r = n.return) && r.call(n);
    } finally {
      if (a) throw a.error;
    }
  }
  return o;
};
function up(e, t) {
  var r = Zd(t);
  return {
    resourceSpans: lp(e, r)
  };
}
function cp(e) {
  var t, r, n = /* @__PURE__ */ new Map();
  try {
    for (var i = ap(e), o = i.next(); !o.done; o = i.next()) {
      var a = o.value, s = n.get(a.resource);
      s || (s = /* @__PURE__ */ new Map(), n.set(a.resource, s));
      var u = a.instrumentationLibrary.name + "@" + (a.instrumentationLibrary.version || "") + ":" + (a.instrumentationLibrary.schemaUrl || ""), c = s.get(u);
      c || (c = [], s.set(u, c)), c.push(a);
    }
  } catch (l) {
    t = { error: l };
  } finally {
    try {
      o && !o.done && (r = i.return) && r.call(i);
    } finally {
      if (t) throw t.error;
    }
  }
  return n;
}
function lp(e, t) {
  for (var r = cp(e), n = [], i = r.entries(), o = i.next(); !o.done; ) {
    for (var a = sp(o.value, 2), s = a[0], u = a[1], c = [], l = u.values(), f = l.next(); !f.done; ) {
      var d = f.value;
      if (d.length > 0) {
        var h = d.map(function(p) {
          return rp(p, t);
        });
        c.push({
          scope: tp(d[0].instrumentationLibrary),
          spans: h,
          schemaUrl: d[0].instrumentationLibrary.schemaUrl
        });
      }
      f = l.next();
    }
    var E = {
      resource: op(s),
      scopeSpans: c,
      schemaUrl: void 0
    };
    n.push(E), o = i.next();
  }
  return n;
}
var fp = {
  serializeRequest: function(e) {
    var t = up(e, {
      useHex: !0,
      useLongBits: !1
    }), r = new TextEncoder();
    return r.encode(JSON.stringify(t));
  },
  deserializeResponse: function(e) {
    var t = new TextDecoder();
    return JSON.parse(t.decode(e));
  }
}, dp = /* @__PURE__ */ function() {
  var e = function(t, r) {
    return e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(n, i) {
      n.__proto__ = i;
    } || function(n, i) {
      for (var o in i) Object.prototype.hasOwnProperty.call(i, o) && (n[o] = i[o]);
    }, e(t, r);
  };
  return function(t, r) {
    if (typeof r != "function" && r !== null)
      throw new TypeError("Class extends value " + String(r) + " is not a constructor or null");
    e(t, r);
    function n() {
      this.constructor = t;
    }
    t.prototype = r === null ? Object.create(r) : (n.prototype = r.prototype, new n());
  };
}(), pp = "v1/traces", hp = "http://localhost:4318/" + pp, qn = (
  /** @class */
  function(e) {
    dp(t, e);
    function t(r) {
      return r === void 0 && (r = {}), e.call(this, r, fp, "application/json") || this;
    }
    return t.prototype.getDefaultUrl = function(r) {
      return typeof r.url == "string" ? r.url : hp;
    }, t;
  }(Xd)
);
class He extends Error {
  constructor(t, r) {
    const n = `${He.extractMessage(t)}: ${JSON.stringify({
      response: t,
      request: r
    })}`;
    super(n), Object.setPrototypeOf(this, He.prototype), this.response = t, this.request = r, typeof Error.captureStackTrace == "function" && Error.captureStackTrace(this, He);
  }
  static extractMessage(t) {
    var r, n, i;
    return (i = (n = (r = t.errors) == null ? void 0 : r[0]) == null ? void 0 : n.message) != null ? i : `GraphQL Error (Code: ${t.status})`;
  }
}
var Ir;
(function(e) {
  e.BillingQuotaExceeded = "BillingQuotaExceeded";
})(Ir || (Ir = {}));
const Oo = 10, _p = 1e3, Ep = 500, Tp = [Ir.BillingQuotaExceeded.toString()], vp = (e) => {
  var r;
  return ((r = e.response.errors) == null ? void 0 : r.find((n) => Tp.includes(n.message))) === void 0;
}, Wp = (e) => {
  const t = (r, n, i, o, a = 0) => G(void 0, null, function* () {
    try {
      return yield r();
    } catch (s) {
      if (s instanceof He && !vp(s))
        throw s;
      if (a < Oo)
        return yield new Promise((u) => setTimeout(u, _p + Ep * Math.pow(2, a))), yield t(r, n, i, o, a + 1);
      throw console.error(`highlight.io: [${e || e}] data request failed after ${a} retries`), s;
    }
  });
  return t;
};
class gp extends qn {
  constructor(r) {
    super(r);
    O(this, "xhrTraceExporter");
    this.xhrTraceExporter = new qn(F(M({}, r != null ? r : {}), {
      headers: {}
      // a truthy value enables sending with XHR instead of beacon
    }));
  }
  send(r, n, i) {
    let o = 0;
    const a = (s) => {
      o++, o > Oo ? (console.error(`[highlight.io] failed to export OTeL traces: ${s.message}`, s), i(s)) : this.xhrTraceExporter.send(r, n, a);
    };
    super.send(r, n, a);
  }
}
const yp = "OT_ZONE_CONTEXT", mp = "Navigation:";
function Op() {
  return !1;
}
const V = class V extends Rt {
  constructor(r = {}) {
    super(V.moduleName, V.version, r);
    O(this, "_spansData", /* @__PURE__ */ new WeakMap());
    O(this, "_zonePatched");
    // for addEventListener/removeEventListener state
    O(this, "_wrappedListeners", /* @__PURE__ */ new WeakMap());
    // for event bubbling
    O(this, "_eventsSpanMap", /* @__PURE__ */ new WeakMap());
    O(this, "_shouldPreventSpanCreation");
    this._shouldPreventSpanCreation = typeof (r == null ? void 0 : r.shouldPreventSpanCreation) == "function" ? r.shouldPreventSpanCreation : Op;
  }
  init() {
  }
  /**
   * This will check if last task was timeout and will save the time to
   * fix the user interaction when nothing happens
   * This timeout comes from xhr plugin which is needed to collect information
   * about last xhr main request from observer
   * @param task
   * @param span
   */
  _checkForTimeout(r, n) {
    const i = this._spansData.get(n);
    i && (r.source === "setTimeout" ? i.hrTimeLastTimeout = Bs() : r.source !== "Promise.then" && r.source !== "setTimeout" && (i.hrTimeLastTimeout = void 0));
  }
  /**
   * Controls whether or not to create a span, based on the event type.
   */
  _allowEventName(r) {
    return !0;
  }
  /**
   * Creates a new span
   * @param event
   * @param parentSpan
   */
  _createSpan(r, n) {
    var s;
    const i = r == null ? void 0 : r.target, o = r == null ? void 0 : r.type;
    if (!(i instanceof HTMLElement) || !i.getAttribute || i.hasAttribute("disabled") || !this._allowEventName(o))
      return;
    const a = Xi(i, !0);
    try {
      const u = this.tracer.startSpan(o, {
        attributes: {
          "event.type": o,
          "event.tag": i.tagName,
          "event.xpath": a,
          "event.id": i.id,
          "event.text": (s = i.textContent) != null ? s : "",
          "event.url": window.location.href,
          "viewport.width": window.innerWidth,
          "viewport.height": window.innerHeight
        }
      }, n ? L.setSpan(A.active(), n) : void 0);
      return r instanceof MouseEvent && (u.setAttribute("event.x", r.clientX), u.setAttribute("event.y", r.clientY), u.setAttribute("event.relativeX", r.clientX / window.innerWidth), u.setAttribute("event.relativeY", r.clientY / window.innerHeight), o === "scroll" && (u.setAttribute("event.scrollX", window.scrollX), u.setAttribute("event.scrollY", window.scrollY))), this._shouldPreventSpanCreation(o, i, u) === !0 ? void 0 : (this._spansData.set(u, {
        taskCount: 0
      }), u);
    } catch (u) {
      this._diag.error("failed to start create new user interaction span", u);
    }
  }
  /**
   * Decrement number of tasks that left in zone,
   * This is needed to be able to end span when no more tasks left
   * @param span
   */
  _decrementTask(r) {
    const n = this._spansData.get(r);
    n && (n.taskCount--, n.taskCount === 0 && this._tryToEndSpan(r, n.hrTimeLastTimeout));
  }
  /**
   * Return the current span
   * @param zone
   * @private
   */
  _getCurrentSpan(r) {
    const n = r.get(yp);
    return n && L.getSpan(n);
  }
  /**
   * Increment number of tasks that are run within the same zone.
   *     This is needed to be able to end span when no more tasks left
   * @param span
   */
  _incrementTask(r) {
    const n = this._spansData.get(r);
    n && n.taskCount++;
  }
  /**
   * Returns true iff we should use the patched callback; false if it's already been patched
   */
  addPatchedListener(r, n, i, o) {
    let a = this._wrappedListeners.get(i);
    a || (a = /* @__PURE__ */ new Map(), this._wrappedListeners.set(i, a));
    let s = a.get(n);
    return s || (s = /* @__PURE__ */ new Map(), a.set(n, s)), s.has(r) ? !1 : (s.set(r, o), !0);
  }
  /**
   * Returns the patched version of the callback (or undefined)
   */
  removePatchedListener(r, n, i) {
    const o = this._wrappedListeners.get(i);
    if (!o)
      return;
    const a = o.get(n);
    if (!a)
      return;
    const s = a.get(r);
    return s && (a.delete(r), a.size === 0 && (o.delete(n), o.size === 0 && this._wrappedListeners.delete(i))), s;
  }
  // utility method to deal with the Function|EventListener nature of addEventListener
  _invokeListener(r, n, i) {
    return typeof r == "function" ? r.apply(n, i) : r.handleEvent(i[0]);
  }
  /**
   * This patches the addEventListener of HTMLElement to be able to
   * auto instrument the click events
   * This is done when zone is not available
   */
  _patchAddEventListener() {
    const r = this;
    let n = /* @__PURE__ */ new Map();
    return (i) => function(a, s, u) {
      if (!s)
        return i.call(this, a, s, u);
      const c = u && typeof u == "object" && u.once, l = function(...f) {
        var p;
        let d;
        const h = f[0];
        if (!(h != null && h.type))
          return r._invokeListener(s, this, f);
        if (Date.now() - ((p = n.get(h.type)) != null ? p : 0) < 1e3 / 60)
          return r._invokeListener(s, this, f);
        n.set(h.type, Date.now()), h && (d = r._eventsSpanMap.get(h)), c && r.removePatchedListener(this, a, s);
        const E = r._createSpan(h, d);
        return E ? (h && r._eventsSpanMap.set(h, E), A.with(L.setSpan(A.active(), E), () => {
          const v = r._invokeListener(s, this, f);
          return E.end(), v;
        })) : r._invokeListener(s, this, f);
      };
      if (r.addPatchedListener(this, a, s, l))
        return i.call(this, a, l, u);
    };
  }
  /**
   * This patches the removeEventListener of HTMLElement to handle the fact that
   * we patched the original callbacks
   * This is done when zone is not available
   */
  _patchRemoveEventListener() {
    const r = this;
    return (n) => function(o, a, s) {
      const u = r.removePatchedListener(this, o, a);
      return u ? n.call(this, o, u, s) : n.call(this, o, a, s);
    };
  }
  /**
   * Most browser provide event listener api via EventTarget in prototype chain.
   * Exception to this is IE 11 which has it on the prototypes closest to EventTarget:
   *
   * * - has addEventListener in IE
   * ** - has addEventListener in all other browsers
   * ! - missing in IE
   *
   * HTMLElement -> Element -> Node * -> EventTarget **! -> Object
   * Document -> Node * -> EventTarget **! -> Object
   * Window * -> WindowProperties ! -> EventTarget **! -> Object
   */
  _getPatchableEventTargets() {
    return window.EventTarget ? [EventTarget.prototype] : [Node.prototype, Window.prototype];
  }
  /**
   * Patches the history api
   */
  _patchHistoryApi() {
    this._unpatchHistoryApi(), this._wrap(history, "replaceState", this._patchHistoryMethod()), this._wrap(history, "pushState", this._patchHistoryMethod()), this._wrap(history, "back", this._patchHistoryMethod()), this._wrap(history, "forward", this._patchHistoryMethod()), this._wrap(history, "go", this._patchHistoryMethod());
  }
  /**
   * Patches the certain history api method
   */
  _patchHistoryMethod() {
    const r = this;
    return (n) => function(...o) {
      const a = `${location.pathname}${location.hash}${location.search}`, s = n.apply(this, o), u = `${location.pathname}${location.hash}${location.search}`;
      return a !== u && r._updateInteractionName(u), s;
    };
  }
  /**
   * unpatch the history api methods
   */
  _unpatchHistoryApi() {
    C(history.replaceState) && this._unwrap(history, "replaceState"), C(history.pushState) && this._unwrap(history, "pushState"), C(history.back) && this._unwrap(history, "back"), C(history.forward) && this._unwrap(history, "forward"), C(history.go) && this._unwrap(history, "go");
  }
  /**
   * Updates interaction span name
   * @param url
   */
  _updateInteractionName(r) {
    const n = L.getSpan(A.active());
    n && typeof n.updateName == "function" && n.updateName(`${mp} ${r}`);
  }
  /**
   * Patches zone cancel task - this is done to be able to correctly
   * decrement the number of remaining tasks
   */
  _patchZoneCancelTask() {
    const r = this;
    return (n) => function(o) {
      const a = Zone.current, s = r._getCurrentSpan(a);
      return s && r._shouldCountTask(o, a) && r._decrementTask(s), n.call(this, o);
    };
  }
  /**
   * Patches zone schedule task - this is done to be able to correctly
   * increment the number of tasks running within current zone but also to
   * save time in case of timeout running from xhr plugin when waiting for
   * main request from PerformanceResourceTiming
   */
  _patchZoneScheduleTask() {
    const r = this;
    return (n) => function(o) {
      const a = Zone.current, s = r._getCurrentSpan(a);
      return s && r._shouldCountTask(o, a) && (r._incrementTask(s), r._checkForTimeout(o, s)), n.call(this, o);
    };
  }
  /**
   * Patches zone run task - this is done to be able to create a span when
   * user interaction starts
   * @private
   */
  _patchZoneRunTask() {
    const r = this;
    return (n) => function(o, a, s) {
      const u = Array.isArray(s) && s[0] instanceof Event ? s[0] : void 0, c = u == null ? void 0 : u.target;
      let l;
      const f = this;
      if (c) {
        if (l = r._createSpan(u), l)
          return r._incrementTask(l), f.run(() => {
            try {
              return A.with(L.setSpan(A.active(), l), () => {
                const d = Zone.current;
                return o._zone = d, n.call(d, o, a, s);
              });
            } finally {
              r._decrementTask(l);
            }
          });
      } else
        l = r._getCurrentSpan(f);
      try {
        return n.call(f, o, a, s);
      } finally {
        l && r._shouldCountTask(o, f) && r._decrementTask(l);
      }
    };
  }
  /**
   * Decides if task should be counted.
   * @param task
   * @param currentZone
   * @private
   */
  _shouldCountTask(r, n) {
    if (r._zone && (n = r._zone), !n || !r.data || r.data.isPeriodic)
      return !1;
    const i = this._getCurrentSpan(n);
    return !i || !this._spansData.get(i) ? !1 : r.type === "macroTask" || r.type === "microTask";
  }
  /**
   * Will try to end span when such span still exists.
   * @param span
   * @param endTime
   * @private
   */
  _tryToEndSpan(r, n) {
    r && this._spansData.get(r) && (r.end(n), this._spansData.delete(r));
  }
  /**
   * implements enable function
   */
  enable() {
    const r = this._getZoneWithPrototype();
    this._diag.debug("applying patch to", V.moduleName, V.version, "zone:", !!r), r ? (C(r.prototype.runTask) && (this._unwrap(r.prototype, "runTask"), this._diag.debug("removing previous patch from method runTask")), C(r.prototype.scheduleTask) && (this._unwrap(r.prototype, "scheduleTask"), this._diag.debug("removing previous patch from method scheduleTask")), C(r.prototype.cancelTask) && (this._unwrap(r.prototype, "cancelTask"), this._diag.debug("removing previous patch from method cancelTask")), this._zonePatched = !0, this._wrap(r.prototype, "runTask", this._patchZoneRunTask()), this._wrap(r.prototype, "scheduleTask", this._patchZoneScheduleTask()), this._wrap(r.prototype, "cancelTask", this._patchZoneCancelTask())) : (this._zonePatched = !1, this._getPatchableEventTargets().forEach((i) => {
      C(i.addEventListener) && (this._unwrap(i, "addEventListener"), this._diag.debug("removing previous patch from method addEventListener")), C(i.removeEventListener) && (this._unwrap(i, "removeEventListener"), this._diag.debug("removing previous patch from method removeEventListener")), this._wrap(i, "addEventListener", this._patchAddEventListener()), this._wrap(i, "removeEventListener", this._patchRemoveEventListener());
    })), this._patchHistoryApi();
  }
  /**
   * implements unpatch function
   */
  disable() {
    const r = this._getZoneWithPrototype();
    this._diag.debug("removing patch from", V.moduleName, V.version, "zone:", !!r), r && this._zonePatched ? (C(r.prototype.runTask) && this._unwrap(r.prototype, "runTask"), C(r.prototype.scheduleTask) && this._unwrap(r.prototype, "scheduleTask"), C(r.prototype.cancelTask) && this._unwrap(r.prototype, "cancelTask")) : this._getPatchableEventTargets().forEach((i) => {
      C(i.addEventListener) && this._unwrap(i, "addEventListener"), C(i.removeEventListener) && this._unwrap(i, "removeEventListener");
    }), this._unpatchHistoryApi();
  }
  /**
   * returns Zone
   */
  _getZoneWithPrototype() {
    return window.Zone;
  }
};
O(V, "version", "0.1.0"), O(V, "moduleName", "user-interaction");
let Pr = V, te;
const yt = "highlight.record", Kp = (e) => {
  var u, c, l, f, d;
  if (te !== void 0) {
    console.warn("OTEL already initialized. Skipping...");
    return;
  }
  const t = e.backendUrl || void 0 || "https://pub.highlight.run", r = [
    ...(c = (u = e.networkRecordingOptions) == null ? void 0 : u.urlBlocklist) != null ? c : [],
    ...so
  ], n = (l = e.environment) != null ? l : "production";
  te = new ul({
    resource: new zl({
      [Is]: (f = e.serviceName) != null ? f : "highlight-browser",
      [bs]: n,
      "highlight.project_id": e.projectId,
      "highlight.session_id": e.sessionSecureId
    })
  });
  const i = new gp({
    url: e.otlpEndpoint + "/v1/traces",
    concurrencyLimit: 100,
    timeoutMillis: 3e4,
    // Using any because we were getting an error importing CompressionAlgorithm
    // from @opentelemetry/otlp-exporter-base.
    compression: "gzip",
    keepAlive: !0,
    httpAgentOptions: {
      timeout: 3e4,
      keepAlive: !0
    }
  }), o = new Sp(i, {
    maxExportBatchSize: 100,
    maxQueueSize: 1e3
  });
  te.addSpanProcessor(o);
  let a = [
    new yl({
      applyCustomAttributesOnSpan: {
        documentLoad: Wn,
        documentFetch: Wn,
        resourceFetch: wp
      }
    }),
    new Pr()
  ];
  (d = e.networkRecordingOptions) != null && d.enabled && (a.push(new Pl({
    propagateTraceHeaderCorsUrls: Kn(e.tracingOrigins),
    applyCustomAttributesOnSpan: (h, E, p) => G(void 0, null, function* () {
      var I, H, B;
      const v = h;
      if (v.attributes[yt] === !1)
        return;
      const T = v.attributes["http.url"], S = (I = E.method) != null ? I : "GET";
      if (h.updateName(zn(T, S, E.body)), !(p instanceof Response)) {
        h.setAttributes({
          "http.response.error": p.message,
          "http.response.status": p.status
        });
        return;
      }
      Yn(h, E.body, E.headers, e.networkRecordingOptions);
      const b = yield lo(p, (H = e.networkRecordingOptions) == null ? void 0 : H.bodyKeysToRecord, (B = e.networkRecordingOptions) == null ? void 0 : B.networkBodyKeysToRedact);
      h.setAttribute("http.response.body", b);
    })
  })), a.push(new jl({
    propagateTraceHeaderCorsUrls: Kn(e.tracingOrigins),
    applyCustomAttributesOnSpan: (h, E) => {
      var b, I;
      const p = E;
      if (h.attributes[yt] === !1)
        return;
      const T = zn(p._url, p._method, E.responseText);
      h.updateName(T), Yn(h, p._body, p._requestHeaders, e.networkRecordingOptions);
      const S = Q(p._body, (b = e.networkRecordingOptions) == null ? void 0 : b.networkBodyKeysToRedact, (I = e.networkRecordingOptions) == null ? void 0 : I.bodyKeysToRecord, p._requestHeaders);
      h.setAttribute("http.request.body", S);
    }
  }))), du({ instrumentations: a });
  const s = new ji();
  s.enable(), te.register({
    contextManager: s,
    propagator: new Gs({
      propagators: [
        new as(),
        new Rp({
          backendUrl: t,
          otlpEndpoint: e.otlpEndpoint,
          tracingOrigins: e.tracingOrigins,
          urlBlocklist: r
        })
      ]
    })
  });
};
class Sp extends Gi {
  onEnd(t) {
    t.attributes[yt] !== !1 && super.onEnd(t);
  }
}
class Rp extends iu {
  constructor(r) {
    super();
    O(this, "highlightEndpoints");
    O(this, "tracingOrigins");
    O(this, "urlBlocklist");
    this.highlightEndpoints = [r.backendUrl, r.otlpEndpoint], this.tracingOrigins = r.tracingOrigins, this.urlBlocklist = r.urlBlocklist;
  }
  inject(r, n, i) {
    const o = L.getSpan(r);
    if (!o)
      return;
    const a = o.attributes["http.url"];
    if (typeof a == "string" && !bp(a, this.highlightEndpoints, this.tracingOrigins, this.urlBlocklist)) {
      o.setAttribute(yt, !1);
      return;
    }
    super.inject(r, n, i);
  }
}
const Ap = "highlight-browser", Jp = () => te.getTracer(Ap), Np = () => L.getActiveSpan(), Lp = () => G(void 0, null, function* () {
  te !== void 0 && (yield te.forceFlush(), te.shutdown());
}), zn = (e, t, r) => {
  var s, u, c;
  let n;
  const i = new URL(e), o = i.pathname;
  let a = `${t.toUpperCase()} - ${o}`;
  try {
    if (n = typeof r == "string" ? JSON.parse(r) : r, n && n.query) {
      const l = Af(n.query), f = ((s = l.definitions[0]) == null ? void 0 : s.kind) === "OperationDefinition" ? (c = (u = l.definitions[0]) == null ? void 0 : u.name) == null ? void 0 : c.value : void 0;
      f && (a = `${f} (GraphQL: ${i.host + i.pathname})`);
    }
  } catch (l) {
  }
  return a;
}, Yn = (e, t, r, n) => {
  var l;
  const i = typeof t == "string" ? t : String(t), a = e.attributes["http.url"], s = new URL(a);
  let u;
  try {
    u = t ? JSON.parse(i) : void 0, u.operationName && e.setAttribute("graphql.operation.name", u.operationName);
  } catch (f) {
  }
  const c = ao((l = n == null ? void 0 : n.networkHeadersToRedact) != null ? l : [], r, n == null ? void 0 : n.headerKeysToRecord);
  e.setAttributes({
    "highlight.type": "http.request",
    "http.request.headers": JSON.stringify(c),
    "http.request.body": i,
    [Ps]: a,
    [Cs]: s.pathname,
    [xs]: s.search
  }), s.searchParams.size > 0 && e.setAttributes({
    // Custom attribute that displays query string params as an object.
    "url.query_params": JSON.stringify(Object.fromEntries(s.searchParams))
  });
}, bp = (e, t, r, n) => n != null && n.some((o) => e.toLowerCase().includes(o)) ? !1 : bt(e, t, r), Wn = (e) => {
  const r = e.events, n = {
    unload: j("unloadEventStart", "unloadEventEnd", r),
    dom_interactive: j("domInteractive", "fetchStart", r),
    dom_content_loaded: j("domContentLoadedEventEnd", "domContentLoadedEventStart", r),
    dom_complete: j("fetchStart", "domComplete", r),
    load_event: j("loadEventStart", "loadEventEnd", r),
    first_paint: j("fetchStart", "firstPaint", r),
    first_contentful_paint: j("fetchStart", "firstContentfulPaint", r),
    domain_lookup: j("domainLookupStart", "domainLookupEnd", r),
    connect: j("connectStart", "connectEnd", r),
    request: j("requestStart", "requestEnd", r),
    response: j("responseStart", "responseEnd", r)
  };
  Object.entries(n).forEach(([i, o]) => {
    o > 0 && (e.setAttribute(`timings.${i}.ns`, o), e.setAttribute(`timings.${i}.readable`, So(o)));
  });
};
function j(e, t, r) {
  const n = r.find((s) => s.name === e), i = r.find((s) => s.name === t);
  if (!n || !i)
    return 0;
  const o = n.time[0] * 1e9 + n.time[1];
  return i.time[0] * 1e9 + i.time[1] - o;
}
const wp = (e, t) => {
  const r = {
    domain_lookup: (t.domainLookupEnd - t.domainLookupStart) * 1e6,
    connect: (t.connectEnd - t.connectStart) * 1e6,
    request: (t.responseEnd - t.requestStart) * 1e6,
    response: (t.responseEnd - t.responseStart) * 1e6
  };
  Object.entries(r).forEach(([n, i]) => {
    i > 0 && (e.setAttribute(`timings.${n}.ns`, i), e.setAttribute(`timings.${n}.readable`, So(i)));
  });
}, So = (e) => {
  if (e >= 36e11) {
    const a = e / 36e11;
    return `${Number(a.toFixed(1))}h`;
  } else if (e >= 6e10) {
    const a = e / 6e10;
    return `${Number(a.toFixed(1))}m`;
  } else if (e >= 1e9) {
    const a = e / 1e9;
    return `${Number(a.toFixed(1))}s`;
  } else if (e >= 1e6) {
    const a = e / 1e6;
    return `${Number(a.toFixed(1))}ms`;
  } else if (e >= 1e3) {
    const a = e / 1e3;
    return `${Number(a.toFixed(1))}µs`;
  } else
    return `${Number(e.toFixed(1))}ns`;
}, Kn = (e) => e === !0 ? [/localhost/, /^\//, new RegExp(window.location.host)] : Array.isArray(e) ? e.map((t) => typeof t == "string" ? new RegExp(t) : t) : /^$/, Ip = [
  "assert",
  "count",
  "countReset",
  "debug",
  "dir",
  "dirxml",
  "error",
  "group",
  "groupCollapsed",
  "groupEnd",
  "info",
  "log",
  "table",
  "time",
  "timeEnd",
  "timeLog",
  "trace",
  "warn"
];
var Jn;
(function(e) {
  e.DeviceMemory = "DeviceMemory", e.ViewportHeight = "ViewportHeight", e.ViewportWidth = "ViewportWidth", e.ScreenHeight = "ScreenHeight", e.ScreenWidth = "ScreenWidth", e.ViewportArea = "ViewportArea";
})(Jn || (Jn = {}));
var Qn;
(function(e) {
  e.Device = "Device", e.WebVital = "WebVital", e.Performance = "Performance", e.Frontend = "Frontend", e.Backend = "Backend";
})(Qn || (Qn = {}));
const Pp = (e, t, r) => {
  const n = window._highlightWebSocketRequestCallback;
  window._highlightWebSocketRequestCallback = e;
  const i = window._highlightWebSocketEventCallback;
  return window._highlightWebSocketEventCallback = (o) => {
    const f = o, { message: a, size: s } = f, u = Ct(f, ["message", "size"]), l = r.some((d) => o.name.toLowerCase().includes(d)) ? u : o;
    t(l);
  }, () => {
    window._highlightWebSocketRequestCallback = n, window._highlightWebSocketEventCallback = i;
  };
}, Cp = ({ xhrCallback: e, fetchCallback: t, webSocketRequestCallback: r, webSocketEventCallback: n, disableWebSocketRecording: i, bodyKeysToRedact: o, highlightEndpoints: a, tracingOrigins: s, urlBlocklist: u, bodyKeysToRecord: c }) => {
  const l = $f(e, a, s, u, o, c), f = qf(t, a, s, u, o, c), d = i ? () => {
  } : Pp(r, n, u);
  return () => {
    l(), f(), d();
  };
};
class Qr {
  constructor(t) {
    O(this, "disableConsoleRecording");
    O(this, "reportConsoleErrors");
    O(this, "enablePromisePatch");
    O(this, "consoleMethodsToRecord");
    O(this, "listeners");
    O(this, "errors");
    O(this, "messages");
    // The properties below were added in 4.0.0 (Feb 2022), and are patched in by client via setupNetworkListeners()
    O(this, "options");
    O(this, "hasNetworkRecording", !0);
    O(this, "disableNetworkRecording");
    O(this, "enableRecordingNetworkContents");
    O(this, "xhrNetworkContents");
    O(this, "fetchNetworkContents");
    O(this, "disableRecordingWebSocketContents");
    O(this, "webSocketNetworkContents");
    O(this, "webSocketEventContents");
    O(this, "tracingOrigins");
    O(this, "networkHeadersToRedact");
    O(this, "networkBodyKeysToRedact");
    O(this, "networkBodyKeysToRecord");
    O(this, "networkHeaderKeysToRecord");
    O(this, "lastNetworkRequestTimestamp");
    O(this, "urlBlocklist");
    O(this, "highlightEndpoints");
    O(this, "requestResponseSanitizer");
    var r, n;
    this.options = t, this.disableConsoleRecording = !!t.disableConsoleRecording, this.reportConsoleErrors = (r = t.reportConsoleErrors) != null ? r : !1, this.enablePromisePatch = (n = t.enablePromisePatch) != null ? n : !1, this.consoleMethodsToRecord = t.consoleMethodsToRecord || [
      ...Ip
    ], this.listeners = [], this.errors = [], this.messages = [], this.lastNetworkRequestTimestamp = 0;
  }
  isListening() {
    return this.listeners.length > 0;
  }
  startListening() {
    if (this.isListening())
      return;
    const t = this;
    this.disableConsoleRecording || this.listeners.push(Uo((r) => {
      var n, i, o;
      if (this.reportConsoleErrors && (r.type === "Error" || r.type === "error") && r.value && r.trace) {
        const a = lt(r.value);
        if (rn.includes(a) || nn.some((s) => a.includes(s)))
          return;
        t.errors.push({
          event: a,
          type: "console.error",
          url: window.location.href,
          source: (n = r.trace[0]) != null && n.fileName ? r.trace[0].fileName : "",
          lineNumber: (i = r.trace[0]) != null && i.lineNumber ? r.trace[0].lineNumber : 0,
          columnNumber: (o = r.trace[0]) != null && o.columnNumber ? r.trace[0].columnNumber : 0,
          stackTrace: r.trace,
          timestamp: (/* @__PURE__ */ new Date()).toISOString()
        });
      }
      t.messages.push(r);
    }, {
      level: this.consoleMethodsToRecord,
      logger: "console",
      stringifyOptions: {
        depthOfLimit: 10,
        numOfKeysLimit: 100,
        stringLengthLimit: 1e3
      }
    })), this.listeners.push(Ho((r) => {
      rn.includes(r.event) || nn.some((n) => r.event.includes(n)) || t.errors.push(r);
    }, { enablePromisePatch: this.enablePromisePatch })), this.listeners.push(Lp), Qr.setupNetworkListener(this, this.options);
  }
  stopListening() {
    this.listeners.forEach((t) => t()), this.listeners = [];
  }
  // We define this as a static method because versions earlier than 4.0.0 (Feb 2022) don't have this code.
  // For those versions, calling this from client will monkey-patch the network listeners onto the old FirstLoadListener object.
  static setupNetworkListener(t, r) {
    var o, a, s, u, c, l, f, d, h, E, p, v;
    const n = (r == null ? void 0 : r.backendUrl) || void 0 || "https://pub.highlight.run", i = r.otlpEndpoint || "https://otel.highlight.io";
    t.highlightEndpoints = [n, i], t.xhrNetworkContents = [], t.fetchNetworkContents = [], t.webSocketNetworkContents = [], t.webSocketEventContents = [], t.networkHeadersToRedact = [], t.urlBlocklist = [], t.tracingOrigins = r.tracingOrigins || [], (r == null ? void 0 : r.disableNetworkRecording) !== void 0 ? (t.disableNetworkRecording = r == null ? void 0 : r.disableNetworkRecording, t.enableRecordingNetworkContents = !1, t.disableRecordingWebSocketContents = !0, t.networkHeadersToRedact = [], t.networkBodyKeysToRedact = [], t.urlBlocklist = [], t.networkBodyKeysToRecord = []) : typeof (r == null ? void 0 : r.networkRecording) == "boolean" ? (t.disableNetworkRecording = !r.networkRecording, t.enableRecordingNetworkContents = !1, t.disableRecordingWebSocketContents = !0, t.networkHeadersToRedact = [], t.networkBodyKeysToRedact = [], t.urlBlocklist = []) : (((o = r.networkRecording) == null ? void 0 : o.enabled) !== void 0 ? t.disableNetworkRecording = !r.networkRecording.enabled : t.disableNetworkRecording = !1, t.enableRecordingNetworkContents = ((a = r.networkRecording) == null ? void 0 : a.recordHeadersAndBody) || !1, t.disableRecordingWebSocketContents = ((s = r.networkRecording) == null ? void 0 : s.disableWebSocketEventRecordings) || !1, t.networkHeadersToRedact = ((c = (u = r.networkRecording) == null ? void 0 : u.networkHeadersToRedact) == null ? void 0 : c.map((T) => T.toLowerCase())) || [], t.networkBodyKeysToRedact = ((f = (l = r.networkRecording) == null ? void 0 : l.networkBodyKeysToRedact) == null ? void 0 : f.map((T) => T.toLowerCase())) || [], t.urlBlocklist = ((h = (d = r.networkRecording) == null ? void 0 : d.urlBlocklist) == null ? void 0 : h.map((T) => T.toLowerCase())) || [], t.urlBlocklist = [
      ...t.urlBlocklist,
      ...so
    ], t.requestResponseSanitizer = (E = r.networkRecording) == null ? void 0 : E.requestResponseSanitizer, t.networkHeaderKeysToRecord = (p = r.networkRecording) == null ? void 0 : p.headerKeysToRecord, t.networkHeaderKeysToRecord && (t.networkHeadersToRedact = [], t.networkHeaderKeysToRecord = t.networkHeaderKeysToRecord.map((T) => T.toLocaleLowerCase())), t.networkBodyKeysToRecord = (v = r.networkRecording) == null ? void 0 : v.bodyKeysToRecord, t.networkBodyKeysToRecord && (t.networkBodyKeysToRedact = [], t.networkBodyKeysToRecord = t.networkBodyKeysToRecord.map((T) => T.toLocaleLowerCase()))), !t.disableNetworkRecording && t.enableRecordingNetworkContents && t.listeners.push(Cp({
      xhrCallback: (T) => {
        t.xhrNetworkContents.push(T);
      },
      fetchCallback: (T) => {
        t.fetchNetworkContents.push(T);
      },
      webSocketRequestCallback: (T) => {
        t.webSocketNetworkContents && t.webSocketNetworkContents.push(T);
      },
      webSocketEventCallback: (T) => {
        t.webSocketEventContents.push(T);
      },
      disableWebSocketRecording: t.disableRecordingWebSocketContents,
      bodyKeysToRedact: t.networkBodyKeysToRedact,
      highlightEndpoints: t.highlightEndpoints,
      tracingOrigins: t.tracingOrigins,
      urlBlocklist: t.urlBlocklist,
      bodyKeysToRecord: t.networkBodyKeysToRecord
    }));
  }
  static getRecordedNetworkResources(t, r) {
    var o, a;
    let n = [], i = [];
    if (!t.disableNetworkRecording) {
      const s = ((o = window == null ? void 0 : window.performance) == null ? void 0 : o.timeOrigin) || 0;
      n = performance.getEntriesByType("resource");
      const u = (r - s) * 2;
      if (n = n.filter((c) => c.responseEnd < t.lastNetworkRequestTimestamp ? !1 : bt(c.name, t.highlightEndpoints, t.tracingOrigins)).map((c) => F(M({}, c.toJSON()), {
        offsetStartTime: c.startTime - u,
        offsetResponseEnd: c.responseEnd - u,
        offsetFetchStart: c.fetchStart - u
      })), t.lastNetworkRequestTimestamp = ((a = n.at(-1)) == null ? void 0 : a.responseEnd) || t.lastNetworkRequestTimestamp, t.enableRecordingNetworkContents) {
        const c = {
          headersToRedact: t.networkHeadersToRedact,
          headersToRecord: t.networkHeaderKeysToRecord,
          requestResponseSanitizer: t.requestResponseSanitizer
        };
        n = Hn(n, t.xhrNetworkContents, "xmlhttprequest", c), n = Hn(n, t.fetchNetworkContents, "fetch", c);
      }
    }
    return t.disableRecordingWebSocketContents || (i = t.webSocketNetworkContents || []), [...n, ...i];
  }
  static getRecordedWebSocketEvents(t) {
    let r = [];
    return !t.disableNetworkRecording && !t.disableRecordingWebSocketContents && (r = t.webSocketEventContents), r;
  }
  static clearRecordedNetworkResources(t) {
    t.disableNetworkRecording || (t.xhrNetworkContents = [], t.fetchNetworkContents = [], t.webSocketNetworkContents = [], t.webSocketEventContents = [], performance.clearResourceTimings());
  }
}
const xp = () => {
  var o;
  const t = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
  var r = "";
  const n = typeof window != "undefined" && ((o = window.crypto) == null ? void 0 : o.getRandomValues), i = new Uint32Array(28);
  n && window.crypto.getRandomValues(i);
  for (let a = 0; a < 28; a++)
    n ? r += t.charAt(i[a] % t.length) : r += t.charAt(Math.floor(Math.random() * t.length));
  return r;
}, Dp = "9.7.3", Mp = () => {
  var e, t;
  typeof chrome != "undefined" && ((e = chrome == null ? void 0 : chrome.runtime) != null && e.onMessage) && ((t = chrome == null ? void 0 : chrome.runtime) == null || t.onMessage.addListener((r, n, i) => {
    const o = r.action;
    switch (console.log(`[highlight] received '${o}' event from extension.`), o) {
      case "init": {
        w.init(1, {
          debug: !0
        }), w.getSessionURL().then((a) => {
          i({ url: a });
        });
        break;
      }
      case "stop": {
        w.stop(), i({ success: !0 });
        break;
      }
    }
    return !0;
  }));
};
function Qp(e) {
  var t;
  e.on && ((t = e.webContents) != null && t.send) && (e.on("focus", () => {
    e.webContents.send("highlight.run", { visible: !0 });
  }), e.on("blur", () => {
    e.webContents.send("highlight.run", { visible: !1 });
  }), e.on("close", () => {
    e.webContents.send("highlight.run", { visible: !1 });
  }));
}
const Zp = ({ next: e, payload: t }) => {
  if (typeof window != "undefined" && typeof document != "undefined" && "H" in window) {
    if (t.obj.type === "track") {
      const r = t.obj.event, n = t.obj.properties;
      window.H.track(r, n);
    } else if (t.obj.type === "identify") {
      const r = t.obj.userId;
      if (r != null && r.length) {
        const n = t.obj.traits;
        window.H.identify(r, n);
      }
    }
  }
  e(t);
}, Cr = () => {
  if (typeof window != "undefined") {
    if (typeof window._highlightFetchPatch != "undefined")
      return;
    window._originalFetch = window.fetch, window._fetchProxy = (e, t) => window._originalFetch(e, t), window._highlightFetchPatch = (e, t) => window._fetchProxy.call(window || global, e, t), window.fetch = window._highlightFetchPatch;
  }
}, Zn = () => null, xr = () => {
  if (typeof window != "undefined") {
    if (typeof window._highlightWebSocketRequestCallback != "undefined")
      return;
    window._highlightWebSocketRequestCallback = Zn, window._highlightWebSocketEventCallback = Zn;
    const e = new Proxy(window.WebSocket, {
      construct(t, r) {
        const [, n] = Kr(), i = new t(...r), o = (l) => {
          window._highlightWebSocketRequestCallback({
            socketId: n,
            initiatorType: "websocket",
            type: "open",
            name: i.url,
            startTimeAbs: performance.timeOrigin + l.timeStamp
          });
        }, a = (l) => {
          window._highlightWebSocketRequestCallback({
            socketId: n,
            initiatorType: "websocket",
            type: "close",
            name: i.url,
            responseEndAbs: performance.timeOrigin + l.timeStamp
          }), i.removeEventListener("open", o), i.removeEventListener("error", u), i.removeEventListener("message", s), i.removeEventListener("close", a);
        }, s = (l) => {
          const { data: f } = l, d = typeof f == "string" ? l.data : void 0;
          let h;
          typeof f == "string" ? h = f.length : f instanceof Blob ? h = f.size : h = f.byteLength || 0, window._highlightWebSocketEventCallback({
            socketId: n,
            type: "received",
            name: i.url,
            timeStamp: performance.timeOrigin + l.timeStamp,
            size: h,
            message: d
          });
        }, u = (l) => {
          window._highlightWebSocketEventCallback({
            socketId: n,
            type: "error",
            name: i.url,
            timeStamp: performance.timeOrigin + l.timeStamp,
            size: 0
          });
        };
        i.addEventListener("open", o), i.addEventListener("error", u), i.addEventListener("message", s), i.addEventListener("close", a);
        const c = new Proxy(i.send, {
          apply: function(l, f, d) {
            const h = d[0], E = typeof h == "string" ? h : void 0;
            let p;
            typeof h == "string" ? p = h.length : h instanceof Blob ? p = h.size : p = h.byteLength || 0, window._highlightWebSocketEventCallback({
              socketId: n,
              type: "sent",
              name: i.url,
              timeStamp: performance.timeOrigin + performance.now(),
              size: p,
              message: E
            }), l.apply(f, d);
          }
        });
        return i.send = c, i;
      }
    });
    window.WebSocket = e;
  }
}, ei = () => {
  const e = {
    end: () => {
    },
    spanContext: () => ({
      traceId: "",
      spanId: "",
      traceFlags: 0
    }),
    setAttribute: (t, r) => e,
    setAttributes: (t) => e,
    addEvent: (t, r, n) => e,
    addLinks: (t) => e,
    setStatus: (t) => e,
    recordException: () => {
    },
    addLink: () => e,
    updateName: () => e,
    isRecording: () => !1
  };
  return e;
};
var Dr;
(function(e) {
  e.Device = "Device", e.WebVital = "WebVital", e.Frontend = "Frontend", e.Backend = "Backend";
})(Dr || (Dr = {}));
const z = (e, t) => {
  console.warn(`highlight.run warning: (${e}): `, t);
}, kp = 200;
let xe = [], ut, R, De, Mr = !1, Pe;
const w = {
  options: void 0,
  init: (e, t) => {
    var r, n, i, o, a, s, u, c;
    try {
      if (w.options = t, typeof window == "undefined" || typeof document == "undefined")
        return;
      if (!e) {
        console.info("Highlight is not initializing because projectID was passed undefined.");
        return;
      }
      t != null && t.skipCookieSessionDataLoad ? Pf(!1) : Hf();
      let l = ir(), f = xp();
      if (l != null && l.sessionSecureID && (f = l.sessionSecureID), Mr)
        return { sessionSecureID: f };
      Mr = !0, Cr(), xr(), import("./index-BnP9Rknr.js").then((v) => G(void 0, [v], function* ({ Highlight: h, setupBrowserTracing: E, getTracer: p }) {
        var T, S, b;
        E({
          otlpEndpoint: (T = t == null ? void 0 : t.otlpEndpoint) != null ? T : "https://otel.highlight.io",
          projectId: e,
          sessionSecureId: f,
          environment: (S = t == null ? void 0 : t.environment) != null ? S : "production",
          networkRecordingOptions: typeof (t == null ? void 0 : t.networkRecording) == "object" ? t.networkRecording : void 0,
          tracingOrigins: t == null ? void 0 : t.tracingOrigins,
          serviceName: (b = t == null ? void 0 : t.serviceName) != null ? b : "highlight-browser"
        }), Pe = p, R = new h(d, De), Cr(), xr(), t != null && t.manualStart || (yield R.initialize());
      }));
      const d = F(M({}, t), {
        organizationID: e,
        firstloadVersion: Dp,
        environment: (t == null ? void 0 : t.environment) || "production",
        appVersion: t == null ? void 0 : t.version,
        sessionSecureID: f
      });
      return De = new Qr(d), t != null && t.manualStart || De.startListening(), !((n = (r = t == null ? void 0 : t.integrations) == null ? void 0 : r.mixpanel) != null && n.disabled) && ((o = (i = t == null ? void 0 : t.integrations) == null ? void 0 : i.mixpanel) != null && o.projectToken) && wo(t.integrations.mixpanel), !((s = (a = t == null ? void 0 : t.integrations) == null ? void 0 : a.amplitude) != null && s.disabled) && ((c = (u = t == null ? void 0 : t.integrations) == null ? void 0 : u.amplitude) != null && c.apiKey) && bo(t.integrations.amplitude), { sessionSecureID: f };
    } catch (l) {
      z("init", l);
    }
  },
  snapshot: (e) => G(void 0, null, function* () {
    try {
      if (R && R.ready)
        return yield R.snapshot(e);
    } catch (t) {
      z("snapshot", t);
    }
  }),
  addSessionFeedback: ({ verbatim: e, userName: t, userEmail: r, timestampOverride: n }) => {
    try {
      w.onHighlightReady(() => R.addSessionFeedback({
        verbatim: e,
        timestamp: n || (/* @__PURE__ */ new Date()).toISOString(),
        user_email: r,
        user_name: t
      }));
    } catch (i) {
      z("error", i);
    }
  },
  consumeError: (e, t, r) => {
    try {
      w.onHighlightReady(() => R.consumeCustomError(e, t, JSON.stringify(r)));
    } catch (n) {
      z("error", n);
    }
  },
  consume: (e, t) => {
    try {
      w.onHighlightReady(() => R.consumeError(e, t));
    } catch (r) {
      z("error", r);
    }
  },
  error: (e, t) => {
    try {
      w.onHighlightReady(() => R.pushCustomError(e, JSON.stringify(t)));
    } catch (r) {
      z("error", r);
    }
  },
  track: (e, t = {}) => {
    var r, n, i, o, a, s, u, c, l, f, d;
    try {
      w.onHighlightReady(() => R.addProperties(F(M({}, t), { event: e })));
      const h = R == null ? void 0 : R.getCurrentSessionURL();
      (i = (n = (r = w.options) == null ? void 0 : r.integrations) == null ? void 0 : n.mixpanel) != null && i.disabled || (o = window.mixpanel) != null && o.track && window.mixpanel.track(e, F(M({}, t), {
        highlightSessionURL: h
      })), (u = (s = (a = w.options) == null ? void 0 : a.integrations) == null ? void 0 : s.amplitude) != null && u.disabled || (c = window.amplitude) != null && c.getInstance && window.amplitude.getInstance().logEvent(e, F(M({}, t), {
        highlightSessionURL: h
      })), (d = (f = (l = w.options) == null ? void 0 : l.integrations) == null ? void 0 : f.intercom) != null && d.disabled || window.Intercom && window.Intercom("trackEvent", e, t);
    } catch (h) {
      z("track", h);
    }
  },
  start: (e) => {
    (R == null ? void 0 : R.state) === "Recording" && !(e != null && e.forceNew) ? e != null && e.silent || console.warn("Highlight is already recording. Please `H.stop()` the current session before starting a new one.") : (De.startListening(), w.onHighlightReady(() => G(void 0, null, function* () {
      yield R.initialize(e);
    }), { waitForReady: !1 }));
  },
  stop: (e) => {
    (R == null ? void 0 : R.state) !== "Recording" ? e != null && e.silent || console.warn("Highlight is already stopped. Please call `H.start()`.") : w.onHighlightReady(() => R.stopRecording(!0));
  },
  identify: (e, t = {}) => {
    var r, n, i, o, a, s, u, c;
    try {
      w.onHighlightReady(() => R.identify(e, t));
    } catch (l) {
      z("identify", l);
    }
    if ((i = (n = (r = w.options) == null ? void 0 : r.integrations) == null ? void 0 : n.mixpanel) != null && i.disabled || (o = window.mixpanel) != null && o.identify && (window.mixpanel.identify(typeof (t == null ? void 0 : t.email) == "string" ? t == null ? void 0 : t.email : e), t && (window.mixpanel.track("identify", t), window.mixpanel.people.set(t))), !((u = (s = (a = w.options) == null ? void 0 : a.integrations) == null ? void 0 : s.amplitude) != null && u.disabled) && (c = window.amplitude) != null && c.getInstance && (window.amplitude.getInstance().setUserId(e), Object.keys(t).length > 0)) {
      const l = Object.keys(t).reduce((f, d) => (f.set(d, t[d]), f), new window.amplitude.Identify());
      window.amplitude.getInstance().identify(l);
    }
  },
  metrics: (e) => {
    try {
      w.onHighlightReady(() => R.recordMetric(e.map((t) => F(M({}, t), {
        category: Dr.Frontend
      }))));
    } catch (t) {
      z("metrics", t);
    }
  },
  startSpan: (e, t, r, n) => {
    const i = typeof Pe == "function" ? Pe() : void 0;
    if (!i) {
      const a = ei();
      return n === void 0 && r === void 0 ? t(a) : n === void 0 ? r(a) : n(a);
    }
    const o = (a, s) => {
      const u = s(a);
      return u instanceof Promise ? u.finally(() => a.end()) : (a.end(), u);
    };
    return n === void 0 && r === void 0 ? i.startActiveSpan(e, (a) => o(a, t)) : n === void 0 ? i.startActiveSpan(e, t, (a) => o(a, r)) : i.startActiveSpan(e, t, r, (a) => o(a, n));
  },
  startManualSpan: (e, t, r, n) => {
    const i = typeof Pe == "function" ? Pe() : void 0;
    if (!i) {
      const o = ei();
      return n === void 0 && r === void 0 ? t(o) : n === void 0 ? r(o) : n(o);
    }
    return n === void 0 && r === void 0 ? i.startActiveSpan(e, t) : n === void 0 ? i.startActiveSpan(e, t, r) : i.startActiveSpan(e, t, r, n);
  },
  getSessionURL: () => new Promise((e, t) => {
    w.onHighlightReady(() => {
      const r = R.sessionData.sessionSecureID, n = ir(r);
      n ? e(`https://${Po}/${n.projectID}/sessions/${r}`) : t(new Error(`Unable to get session URL: ${r}`));
    });
  }),
  getSessionDetails: () => new Promise((e, t) => {
    w.onHighlightReady(() => G(void 0, null, function* () {
      try {
        const r = yield w.getSessionURL();
        if (!r)
          throw new Error("Could not get session URL");
        const n = R.sessionData.sessionSecureID, i = ir(n), o = i == null ? void 0 : i.sessionStartTime;
        if (!o)
          throw new Error("Could not get session start timestamp");
        const a = (/* @__PURE__ */ new Date()).getTime(), s = new URL(r), u = new URL(r);
        u.searchParams.set("ts", ((a - o) / 1e3).toString()), e({
          url: s.toString(),
          urlWithTimestamp: u.toString(),
          sessionSecureID: n
        });
      } catch (r) {
        t(r);
      }
    }));
  }),
  getRecordingState: () => {
    var e;
    return (e = R == null ? void 0 : R.state) != null ? e : "NotRecording";
  },
  onHighlightReady: (e, t) => {
    if (R && R.ready) {
      e();
      return;
    }
    if (xe.push({ options: t, func: e }), ut !== void 0)
      return;
    const r = () => {
      xe = xe.filter((i) => {
        var o;
        return !R || ((o = i.options) == null ? void 0 : o.waitForReady) !== !1 && !R.ready ? !0 : (i.func(), !1);
      }), ut = void 0, xe.length > 0 && (ut = setTimeout(r, kp));
    };
    r();
  }
};
typeof window != "undefined" && (window.H = w);
Mp();
Cr();
xr();
const eh = {
  reset: () => {
    Mr = !1, R = void 0, xe = [], ut = void 0, De = void 0;
  },
  setHighlightObj: (e) => {
    R = e;
  }
};
export {
  Qp as A,
  w as B,
  He as C,
  Zp as D,
  ct as E,
  Qr as F,
  xp as G,
  Po as H,
  Dr as I,
  g as K,
  Jn as M,
  ef as Q,
  Re as S,
  jp as V,
  eh as _,
  eo as a,
  Af as b,
  ti as c,
  tr as d,
  no as e,
  ir as f,
  ri as g,
  Vp as h,
  Xp as i,
  kf as j,
  Bf as k,
  Bp as l,
  Yp as m,
  Qn as n,
  Fp as o,
  qp as p,
  Hp as q,
  Cf as r,
  io as s,
  lt as t,
  Wp as u,
  Gp as v,
  zp as w,
  Pf as x,
  Jp as y,
  Kp as z
};
//# sourceMappingURL=index-ZgXLbp3c.js.map
